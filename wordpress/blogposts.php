global $user_ID;
$new_post = array(
    'post_title' => 'wolfSSL FIPS with Intel® SGX',
    'post_content' => 'wolfSSL supports use with <a href="https://software.intel.com/en-us/sgx">Intel® SGX</a> on both Windows and Linux. In addition to being available on both operating systems the Linux example includes running a full TLS connection in a secure Enclave. Examples can be found on GitHub under wolfssl/wolfssl-examples located here (<a href="https://github.com/wolfSSL/wolfssl-examples">https://github.com/wolfSSL/wolfssl-examples</a>). One of the exciting upcoming features this year, is that wolfSSL is planning to be FIPS certified while running inside a secure Enclave.<br /><br />If there are questions about current support or the future roadmap feel free to let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-8-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Microchip MASTERs 2017',
    'post_content' => 'Come join wolfSSL at the <a href="http://techtrain.microchip.com/usmasters/home.aspx">2017 Microchip MASTERs Conference</a>. The premier technical training conference for embedded engineers.  Business Director, Rod Weaver and Software Engineer, Chris Conlon will be on hand to answer all your questions and offer solutions.<br /><br />Microchip MASTERs is held August 16th through August 19th at the JW Marriott Desert Ridge Resort in Phoenix, Arizona.<br /><br>What are you waiting for?  <a href="https://secure.microchip.com/usmasters/Alert.aspx?AlertID=12">Register today for the Microchip Masters Conference 2017</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt FIPS 140-2 on ARM',
    'post_content' => 'Do you need a FIPS 140-2 validated cryptography library for your ARM-based platform?  <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> has been <a href="perma://BLPageReference/33AC9E16-2970-42BF-BE19-BA89C2B708E1">FIPS 140-2 validated</a> on several different operating environments to date, some of which have been on resource-constrained ARM-based devices.<br /><br />FIPS validating a crypto library on a resource-constrained device can be more involved than doing a validation on a standard desktop-like platform.  Variances in OS, Flash/RAM, filesystem (or lack of), entropy, communication, and more can make things interesting.  Going through our past ARM-based validations, we have figured out how to make this process easier with wolfCrypt!<br /><br />If you are interested in exploring FIPS 140-2 cryptography validations on ARM platforms, reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2017-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be exhibiting at the “Fort Meade IT & Cyber Security Day”',
    'post_content' => 'wolfSSL will be in Fort Meade Wednesday, Aug 23rd, 2017 from 07:30 - 14:00<br /> <br />Stop by and see us at<a href="https://www.mdcyber.com/events/fort-meade-cyber-day-2/"> Fort Meade IT & Cyber Security Day</a> in Club Meade!<br /> <br />Address:<br />6600 Mapes Road Fort Meade, MD 20755<br /> <br />We will be discussing the latest <a href="https://wolfssl.com/tls13">TLS v1.3</a> standard, <a href="perma://BLPageReference/33AC9E16-2970-42BF-BE19-BA89C2B708E1">FIPS</a> and network security in today’s connected world! Stop by or shoot us an email if you are unable to make it at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-8-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL FIPS – A Year in Review (Part 2 of a 3 Part Series)',
    'post_content' => 'Greetings! In this post we are covering Operational Environment’s (OE’s) we worked with this past year. These OE’s were validated under an OEM relationship where the company validating is licensed to resell the wolfCrypt FIPS product under their own brand name.<br /><br /><br />wolfSSL was particularly excited about both of these projects as they display the great range of capabilities for wolfSSL and the <a href="perma://BLPageReference/33AC9E16-2970-42BF-BE19-BA89C2B708E1">wolfCrypt FIPS module</a>.<br /><br />The first OE was an embedded system with Cortex M4 processor and the second was a backend server where the wolfSSL product scales nicely due to reduced run-time resource use! <br /><br />wolfSSL is happy to assist with OEM FIPS validation and rebranding if the situation fits! We would love to hear from you, contact us anytime: <a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a><br /><br />If you missed the first part in our series, you can read it <a href="perma://BLPageReference/513B283E-3FCE-4DDF-A86E-377E30B74E34">here</a>!',
    'post_status' => 'publish',
    'post_date' => date('2017-8-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.12.0 Now Available',
    'post_content' => '<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> 3.12.0 is now available for <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download</a>! This release contains bug fixes, new features, and includes fixes for one security vulnerability (low level).<br /><br />The one low level vulnerability fix included in this release is in relation to a potential DoS attack on a wolfSSL client. Previously a client would accept many warning alert messages without a limit. This fix puts a limit to the number of warning alert messages received and if this limit is reached a fatal error ALERT_COUNT_E is returned. The max number of warning alerts by default is set to 5 and can be adjusted with the macro WOLFSSL_ALERT_COUNT_MAX. Thanks for the report from Tarun Yadav and Koustav Sadhukhan from Defence Research and Development Organization, INDIA.<br /><br />Continue reading below for a summary of the features and fixes included in this release.<br /><br /><b>TLS 1.3 Support!<br /></b><br />If you follow wolfSSL’s blog, you may have heard discussion about our TLS 1.3 BETA support.  wolfSSL 3.12.0 is the first stable release that contains our TLS 1.3 support (client and server side)!  This means that you can pair TLS 1.3 with your favorite other features and project ports too!  TLS 1.3 with <a href="http://nginx.org/">Nginx</a>!  TLS 1.3 with ARMv8!  and TLS 1.3 with Async Crypto!<br /><br />Enable TLS 1.3 draft 20 support using the “--enable-tls13” configure option, or the older draft 18 support with the “--enable-tls13-draft18” option.  wolfSSL also supports 0RTT with TLS 1.3, which can be enabled with “--enable-earlydata”.<br /><br />For more information about using wolfSSL with TLS 1.3, visit our <a href="https://wolfssl.com/tls13">TLS 1.3 webpage</a>, or contact us at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>.<br /><br /><b>Build and Configure Option Changes<br /><br /></b>- Added enable all feature (--enable-all)<br />- Added trackmemory feature (--enable-trackmemory)<br />- Fixes for compiling wolfSSL with GCC version 7, most dealing with switch statement fall through warnings.<br />- Added warning when compiling without hardened math operations<br /><br /><b>Intel Assembly Improvements, Intel SGX Linux Support, and Intel QuickAssist Support<br /><br /></b>For users of wolfSSL on Intel platforms, we have made improvements including:<br /><br />	-	A port of wolfSSL for <a href="perma://BLPageReference/96913D17-2311-4D8F-82ED-D4683FF64B7F">Intel SGX with Linux</a>.  We previously only supported Intel SGX with Windows.<br />- AVX and AVX2 assembly instructions for improved ChaCha20 performance<br />- Intel QAT fixes for when using --disable-fastmath<br />	-	Improvements and enhancements to Intel QuickAssist support<br /><br />Note: There is a known issue with using ChaCha20 AVX assembly on versions of GCC earlier than 5.2. This is encountered with using the wolfSSL enable options “--enable-intelasm” and “--enable-chacha”. To avoid this issue ChaCha20 can be enabled with “--enable-chacha=noasm”.<br /><br />If using “--enable-intelasm” and also using “--enable-sha224” or “--enable-sha256” there is a known issue with trying to use “-fsanitize=address”.<br /><br /><b>Official SHA-3 Support (Keccak)<br /><br /></b>Previously wolfSSL only supported the SHA-3 runner-up Blake2b.  wolfSSL now additionally supports the final SHA-3 winner, Keccak.  This can be enabled with the “--enable-sha3” configure option.  It is enabled by default on x86_64 platforms.<br /><br /><b>DTLS Multicast and Updates<br /><br /></b>For our DTLS users, wolfSSL now supports DTLS Multicast with “--enable-mcast”!  In addition, this release also contains:<br /><br />- An update to how DTLS handles decryption and MAC failures<br />	-	An update to the DTLS session export version number for use with the “--enable-sessionexport” option<br /><br />For more details about DTLS Multicast, get in touch with us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>! <br /><br /><b>New and Updated Hardware Ports<br /><br /></b>With this release, we have update several of our hardware ports and added a few new ones as well, including:<br /><br />- Update and fix for our <a href="http://www.microchip.com/design-centers/32-bit/architecture/pic32mz-family">Microchip PIC32MZ</a> port<br />- Fix for <a href="http://www.st.com/en/microcontrollers/stm32f4-series.html">STM32F4</a> AES-GCM<br />- Addition of a Xilinx port, based on the <a href="http://zedboard.org/product/ultrazed-EG">UltraZed-EG Starter Kit</a> based on the <a href="https://www.xilinx.com/products/silicon-devices/soc/zynq-ultrascale-mpsoc.html">Xilinx Zynq® UltraScale+™ MPSoC</a><br />- Addition of SHA-224 and AES key wrap to ARMv8 port<br />	-	Additional input argument sanity checks to ARMv8 assembly port<br /><br /><b>Enhanced Testing<br /></b><br />- Additional unit testing for MD5, SHA, SHA224, SHA256, SHA384, SHA512, RipeMd, HMAC, 3DES, IDEA, ChaCha20, ChaCha20Poly1305 AEAD, Camellia, Rabbit, ARC4, AES, RSA, HC-128<br /><br /><b>Updated Operating System Ports<br /></b><br />- Update <a href="http://www.ti.com/tool/ti-rtos">TI-RTOS</a> port for dependency on new wolfSSL source files<br />- Update <a href="http://www.nxp.com/products/developer-resources/run-time-software/mqx-software-solutions/mqx-real-time-operating-system-rtos/mqx-classic-software-solutions:MQX">MQX Classic</a> and <a href="http://www.nxp.com/products/microcontrollers-and-processors/more-processors/coldfire-plus-coldfire-32-bit-mcus/crypto-acceleration-unit-cau-and-mmcau-software-library:CAUAP">mmCAU</a> ports<br />- Fix <a href="http://rtos.com/products/threadx/">ThreadX</a>/<a href="http://rtos.com/products/netx/">NetX</a> warning<br /><br /><b>wolfSSL Python Wrapper<br /></b><br />	-	Expand wolfSSL Python wrapper to now include a client side implementation<br /><br /><a href="https://wolfssl.github.io/wolfssl-py/">wolfSSL Python Wrapper Documentation</a><br /><a href="https://wolfssl.github.io/wolfcrypt-py/">wolfCrypt Python Wrapper Documentation</a><br /><br /><b>Other Additions and Modifications<br /><br /></b>Other changes that this release contains includes:<br /><br />- Fix for making PKCS12 dynamic types match<br />- Fixes for potential memory leaks when using --enable-fast-rsa<br />- Fix for when using custom ECC curves and add BRAINPOOLP256R1 test<br />- Fix for Async crypto with GCC 7.1 and HMAC when not using Intel QuickAssist<br />- Added more sanity checks to fp_read_unsigned_bin function<br />- Fix for potential buffer over read with wolfSSL_CertPemToDer<br />- Add PKCS7/CMS decode support for KARI with IssuerAndSerialNumber<br />- Added RSA PSS sign and verify<br />- Fixes for AES key wrap and PKCS7 on Windows VS<br />- Support use of staticmemory with PKCS7<br />- Fix for Blake2b build with GCC 5.4<br />- Fixes for OCSP and CRL non blocking sockets and for incomplete cert chain with OCSP<br /><br /><b>Updated Examples<br /></b><br />- Adjust example servers to not treat a peer closed error as a hard error<br />- Added benchmark block size argument<b><br /></b><br />If you have any questions about the new release, or using wolfSSL in your project, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-8-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and libFuzzer',
    'post_content' => '<b>libFuzzer</b>, a fuzzing engine created by LLVM, is now being used to test the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL library</a>. Below is a short description of libFuzzer, taken from LLVM’s website <a href="http://llvm.org/docs/LibFuzzer.html#introduction">here</a>.<br /><br />LibFuzzer is linked with the library under test, and feeds fuzzed inputs to the library via a specific fuzzing entrypoint (aka “target function”); the fuzzer then tracks which areas of the code are reached, and generates mutations on the corpus of input data in order to maximize the code coverage. The code coverage information for libFuzzer is provided by LLVM’s <a href="http://clang.llvm.org/docs/SanitizerCoverage.html">SanitizerCoverage</a> instrumentation.<br /><br />With this tool, wolfSSL API are being tested on how well they can handle random gibberish, poorly formatted certificates, and other forms of data that are created and input by the user. These tests are being used to detect buffer-overflow bugs, segmentation faults, memory leaks, undefined behaviors, and many other bugs that could potentially be used to exploit the wolfSSL library. <br /><br />If you are interested in further details of how wolfSSL is using libFuzzer, email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-7-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Black Hat 2017',
    'post_content' => 'Black Hat returns to Las Vegas for its 20th year. This six-day event will be held at Mandalay Bay Convention Center, July 22nd through July 27th. We will have several engineering staff on hand to answer all of your questions and you can check out all our exciting products.<br /><br />Ask us about the release of <a href="https://wolfssl.com/wolfSSL/Products.html">TLS 1.3</a> and the many benefits that TLS 1.3 offers. One significant difference is that <a href="perma://BLPageReference/CD333EBA-C7FB-4130-9BF4-437370C13BDF">TLS 1.3</a> only requires 1 round-trip, this means less time is required. Another difference is the way session resumption works. If you would like to find out more stop by our booth 971.   <br /><br />Don`t miss out register today: <br /><a href="https://www.blackhat.com/us-17/registration.html">https://www.blackhat.com/us-17/registration.html</a><br /><br />If you are already planning on attending please stop by, say hello and chat with us about cryptography, SSL/TLS, and hardware encryption. <br /><br />If you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at (425) 245-8247. Stay up to date with what is happening with wolfSSL, follow our <a href="https://wolfssl.com/wolfSSL/Blog/Blog.html">blog</a> for the most recent news.<br /><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2017-7-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL FIPS – A Year in Review (Part 1 of a 3 Part Series)',
    'post_content' => 'wolfSSL is pleased to bring our community a report of the past years <a href="https://www.wolfssl.com/wolfSSL/fips.html">FIPS</a> activities. In part one of this three-part series we will cover the new Operating Environments (OEs) added to the <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-all.htm#2425">wolfSSL certificate</a> in the past year + CAVP algorithm testing done by wolfSSL.<br /> <br />Part two of this series will cover OEs tested by wolfSSL for OEM partners.<br /> <br />Part Three of this series will cover on-site consulting services offered by wolfSSL and some of the commentary from our on-site consulting engineers.<br /> <br />This past year wolfSSL added the following OEs to the wolfCrypt certificate on 06/23/2016<br /><br /><br />wolfSSL also performed algorithm testing or CAVP only validation for AES in these OEs:<br /><br /><br /><br />The following AES modes of operation were tested: ECB, CBC, CMAC, GMAC, and GCM. The algo certificates can be visited via the following links.<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html#4452">http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html#4452</a> (3/31/2017)<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html#4027">http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html#4027</a> (7/31/2016)<br /> <br />wolfSSL also performed algorithm testing or CAVP only validation for SHA-256 on the Same OEs.<br />Those certificates can be found via the following links.<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.html#3665">http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.html#3665</a> (3/31/2017)<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.html#3320">http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.html#3320</a> (7/31/2016)<br /> <br /> wolfSSL offers several FIPS services including but not limited to: OEM revalidations, on-site consulting for receiving your own FIPS validation, or just a traditional FIPS validation for your operating environment. For more info please contact <a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a> and we will be happy to discuss details with you!<br />',
    'post_status' => 'publish',
    'post_date' => date('2017-7-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS 1.3 Reducing Latency',
    'post_content' => 'As we’ve mentioned in a previous blog post one of the key advantages of TLS 1.3 is the reduction in round-trips.  Older versions of the TLS protocol require two complete round-trips before the client sends the application data.  With TLS v1.3 only 1 round-trip is required!  This means network latency has less impact on the time required to establish a secure connection.  We recently completed a handshake benchmark with various latencies to make sure wolfSSL is taking advantage of the reduced latency in TLS 1.3.<br /><br />For more details on using TLS v1.3 with wolfSSL, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-7-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt JNI Wrapper and JCE Provider',
    'post_content' => 'The wolfCrypt cryptography library is now available to Java developers!  wolfSSL recently released a <a href="perma://BLPageReference/10FF6948-936D-427E-A222-BA69E6A16EF0">JNI wrapper and JCE provider</a> that wraps the native C wolfCrypt library.<br /><br />The JCE (<a href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/crypto/CryptoSpec.html">Java Cryptographic Extension</a>) framework supports the installation of custom Cryptographic Service Providers which can in turn implement a subset of the underlying cryptographic functionality used by the Java Security API.  The “wolfcrypt-jni” package contains both a thin wolfCrypt JNI wrapper as well as a wolfCrypt JCE provider.<br /><br />This package has been tested with several different JDK variants, including OpenJDK, Oracle JDK, and Android.  It also ships with pre-signed JAR files for use with Oracle JDK versions that verify JCE provider classes.<br /><br /><b>Classes and algorithms currently supported by the wolfCrypt JCE Provider:<br /></b><br />java.security.MessageDigest<br />	MD5, SHA-1, SHA-256, SHA-384, SHA-512<br /><br />java.security.SecureRandom<br />	HashDRBG<br /><br />javax.crypto.Cipher<br />AES/CBC/NoPadding<br />	DESede/CBC/NoPadding<br />	RSA/ECB/PKCS1Padding<br /><br />javax.crypto.Mac<br />	HmacMD5, HmacSHA1, HmacSHA256, HmacSHA384, HmacSHA512<br /><br />java.security.Signature<br />	MD5withRSA, SHA1withRSA, SHA256withRSA, SHA384withRSA, SHA512withRSA<br />	SHA1withECDSA, SHA256withECDSA, SHA384withECDSA, SHA512withECDSA<br /><br />javax.crypto.KeyAgreement<br />	DiffieHellman, DH, ECDH<br /><br />java.security.KeyPairGenerator<br />	EC, DH<br /><br />You can download the wolfCrypt JNI wrapper and JCE provider from the wolfSSL <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page</a>, or look over the <a href="https://www.wolfssl.com/wolfSSL/Docs-wolfcrypt-jni-jce-manual.html">wolfJCE User Manual</a>.  Please send any feedback or questions to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-7-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'NXP Kinetis K8X LTC support for PKI (RSA/ECC) with #TLS13',
    'post_content' => 'As our readers have seen us post about in the past, <a href="http://www.nxp.com/">NXP</a> has a new LP Trusted Crypto (LTC) core which accelerates RSA/ECC PKI in their <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/kinetis-cortex-m-mcus/k-series-performance-m4/k8x-secure:K8X-SCALABLE-SECURE-MCU">Kinetis K8x</a> line.<br /><br />The LTC hardware accelerator improves:<br /> * RSA performance by 12-17X<br /> * ECC performance by 18-23X<br /> * Ed/Curve25519 performance by 2-3X.<br /><br />wolfSSL now provides support for TLS 1.3 (#TLS13), which was introduced in an <a href="https://tools.ietf.org/html/draft-ietf-tls-tls13-18">internet draft</a> in October of 2016. <br /><br />If desired, the LTC hardware accelerator can be combined with TLS 1.3, providing:<br /><br />* Reduced number of round trips while performing a full handshake <br />* A repurposed ticketing system allows for servers to be stateless<br />* More attack resistance from improvements to renegotiation, compression, CBC, padding, etc.<br /><br />Support for the NXP LTC adds to wolfSSL’s existing mmCAU support, now accelerating RNG, AES (CBC, CCM, GCM, CTR), DES/3DES, MD5, SHA, SHA256, SHA384/512 and ChaCha20/Poly1305.<br /><br />The combined LTC/MMCAU hardware acceleration improves performance, reduces power consumption and reduces code size by 40%.<br /><br />Here are the benchmarks on a FRDM-K82F Cortex M4 @ 150MHz:<br /><br />Hardware Accelerated (LTC / MMCAU):<br />RNG      25 kB took 0.026 seconds,    0.939 MB/s<br />AES enc  25 kB took 0.002 seconds,   12.207 MB/s<br />AES dec  25 kB took 0.002 seconds,   12.207 MB/s<br />AES-GCM  25 kB took 0.002 seconds,   12.207 MB/s<br />AES-CTR  25 kB took 0.003 seconds,    8.138 MB/s<br />AES-CCM  25 kB took 0.004 seconds,    6.104 MB/s<br />CHACHA   25 kB took 0.008 seconds,    3.052 MB/s<br />CHA-POLY 25 kB took 0.013 seconds,    1.878 MB/s<br />POLY1305 25 kB took 0.003 seconds,    8.138 MB/s<br />SHA      25 kB took 0.006 seconds,    4.069 MB/s<br />SHA-256  25 kB took 0.009 seconds,    2.713 MB/s<br />SHA-384  25 kB took 0.032 seconds,    0.763 MB/s<br />SHA-512  25 kB took 0.035 seconds,    0.698 MB/s<br />RSA 2048 public          12.000 milliseconds, avg over 1 iterations<br />RSA 2048 private         135.000 milliseconds, avg over 1 iterations<br />ECC  256 key generation  17.400 milliseconds, avg over 5 iterations<br />EC-DHE   key agreement   15.200 milliseconds, avg over 5 iterations<br />EC-DSA   sign   time     20.200 milliseconds, avg over 5 iterations<br />EC-DSA   verify time     33.000 milliseconds, avg over 5 iterations<br />CURVE25519 256 key generation 14.400 milliseconds, avg over 5 iterations<br />CURVE25519 key agreement      14.400 milliseconds, avg over 5 iterations<br />ED25519  key generation  14.800 milliseconds, avg over 5 iterations<br />ED25519  sign   time     16.800 milliseconds, avg over 5 iterations<br />ED25519  verify time     30.400 milliseconds, avg over 5 iterations<br /><br />Software only:<br />RNG      25 kB took 0.179 seconds,    0.136 MB/s<br />AES enc  25 kB took 0.099 seconds,    0.247 MB/s<br />AES dec  25 kB took 0.102 seconds,    0.239 MB/s<br />AES-GCM  25 kB took 1.486 seconds,    0.016 MB/s<br />AES-CTR  25 kB took 0.099 seconds,    0.247 MB/s<br />AES-CCM  25 kB took 0.201 seconds,    0.121 MB/s<br />CHACHA   25 kB took 0.043 seconds,    0.568 MB/s<br />CHA-POLY 25 kB took 0.055 seconds,    0.444 MB/s<br />POLY1305 25 kB took 0.010 seconds,    2.441 MB/s<br />SHA      25 kB took 0.029 seconds,    0.842 MB/s<br />SHA-256  25 kB took 0.079 seconds,    0.309 MB/s<br />SHA-384  25 kB took 0.109 seconds,    0.224 MB/s<br />SHA-512  25 kB took 0.113 seconds,    0.216 MB/s<br />RSA 2048 public          147.000 milliseconds, avg over 1 iterations<br />RSA 2048 private         2363.000 milliseconds, avg over 1 iterations<br />ECC  256 key generation  355.400 milliseconds, avg over 5 iterations<br />EC-DHE   key agreement   352.400 milliseconds, avg over 5 iterations<br />EC-DSA   sign   time     362.400 milliseconds, avg over 5 iterations<br />EC-DSA   verify time     703.400 milliseconds, avg over 5 iterations<br />CURVE25519 256 key generation 66.200 milliseconds, avg over 5 iterations<br />CURVE25519 key agreement      65.400 milliseconds, avg over 5 iterations<br />ED25519  key generation  25.000 milliseconds, avg over 5 iterations<br />ED25519  sign   time     30.400 milliseconds, avg over 5 iterations<br />ED25519  verify time     74.400 milliseconds, avg over 5 iterations<br /><br />For more information on how wolfSSL supports TLS 1.3, check out <a href="https://wolfssl.com/wolfSSL/wolfssl-tls13.html">this page</a>.<br /><br />Download wolfSSL from our <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page today</a>!  These changes are also included in the KSDK 2.0.<br /><br /><a href="https://wolfssl.com/wolfSSL/Blog/Entries/2017/5/11_wolfSSL_TLS_1.3_BETA_Release_Now_Available.html">TLS 1.3 is now available</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-7-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Upcoming in wolfSSH v1.2.0',
    'post_content' => 'wolfSSH v1.2.0 is currently a work in process. We have just added support for Elliptic Curve algorithms and AES-GCM. The following key exchange and public key algorithms are now available:<br /><br />	•	ecdh-sha2-nistp256<br />	•	ecdh-sha2-nistp384<br />	•	ecdh-sha2-nistp521<br />	•	ecdsa-sha2-nistp256<br />	•	ecdsa-sha2-nistp384<br />	•	ecdsa-sha2-nistp521<br /><br />The new encryption algorithm that is available is “aes128-gcm@openssh.com”, which is an implementation of <a href="https://tools.ietf.org/html/rfc5647">RFC 5647</a>, using the MAC algorithm implied with using the AEAD algorithm AES-GCM.<br /><br />We look forward to bigger and better additions to wolfSSH in the near future, allowing a richer SSH experience in the IoT. Please see our <a href="https://www.wolfssl.com/wolfSSL/Products-wolfssh.html">wolfSSH page for more information</a> and check out a <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download of v1.1.0</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-7-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL has added AFL to its Testing Suite',
    'post_content' => '<b>wolfSSL is glad to announce that it is incorporating American Fuzzy Lop (AFL) into its testing suite.<br /></b><br />Improving security is the at the heart of what wolfSSL is about. That is why wolfSSL has decided to include the <a href="http://lcamtuf.coredump.cx/afl/">AFL fuzzer</a> to its list of tools. Finding bugs first locally allows our teams to make improvements to our libraries helping to eliminate vulnerabilities before they are released in our stable product releases.<br /><br /><b>Why choose AFL?<br /></b><br />AFL is fast and efficient and here at wolfSSL we preach the importance of speed and efficiency. There is also an impressive “trophy case” of bugs found on the AFL home page <a href="http://lcamtuf.coredump.cx/afl/">here</a>. Among the programs listed in the trophy case are several SSL/TLS libraries proving that this fuzzer works for encrypted communications. Finally, AFL is open source like <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> allowing the freedom to look under the hood.<br /><br /><b>Where we Stand now and our Plans for the Future.<br /></b><br />Currently we have 26 individual API tests that cover some of the most common function calls in the wolfSSL library. These tests will be ran daily and if anything of interest is found our teams will be notified right away. We plan to increase the number of tests run as our team determines which API stands to benefit from fuzz testing the most. Our teams are excited to see what AFL can find in the upcoming months as they work alongside it to bring you one of the best TLS/SSL libraries available.<br /><br /><a href="http://lcamtuf.coredump.cx/afl/">american fuzzy lop (AFL)</a><br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL SSL/TLS library</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-7-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL on the Atmel ATECC508A with TLS 1.3 (#TLS13)',
    'post_content' => 'As previously announced, the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> and <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt embedded crypto engine</a> support the <a href="http://www.atmel.com/products/security-ics/cryptoauthentication/ecc-256.aspx">Atmel ATECC508A crypto element</a>.  This allows wolfSSL to take advantage of the ECC hardware acceleration and protected private key storage on the ATECC508A.<br /><br />Using wolfSSL, ATECC508A users can benefit from both increased ECC performance and secure key storage, thus hardening their TLS connections. Now that wolfSSL supports TLS 1.3, users also have the ability to use this new protocol version for even better performance for TLS connections!<br /><br />The wolfCrypt ATECC508A port adds the following (and more!) when used with TLS 1.3:<br /><br />+ wolfCrypt support for ECC hardware acceleration using the ATECC508A.  The defines for this port are WOLFSSL_ATMEL and WOLFSSL_ATECC508A<br />+ Public key callback for Pre Master Secret<br />+ Reduced quantity of round trips for performing a full handshake<br />+ A repurposed ticketing system allows for servers to be stateless<br /><br />For more complete details please visit the <a href="https://wolfssl.com/wolfSSL/wolfssl-atmel.html">wolfSSL Atmel webpage</a>.  The code can be downloaded directly from wolfSSL’s “<a href="https://wolfssl.com/wolfSSL/download/downloadMoreForm.php">More Downloads</a>” page, with the title “Atmel_ATECC508_Demos.zip”.<br /><br />For more complete details on TLS 1.3, please visit <a href="https://tools.ietf.org/html/draft-ietf-tls-tls13-18">https://tools.ietf.org/html/draft-ietf-tls-tls13-18</a>. For more complete details for on how wolfSSL supports TLS 1.3, please visit <a href="https://wolfssl.com/wolfSSL/wolfssl-tls13.html">https://wolfssl.com/wolfSSL/wolfssl-tls13.html</a>.<br /><br />wolfSSL is dual licensed under both the GPLv2 as well as a standard commercial license.  For licensing information, please see the wolfSSL <a href="https://wolfssl.com/wolfSSL/License.html">License Page</a>, or contact us <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or call us at (425) 245-8247<br /><br /><a href="https://wolfssl.com/wolfSSL/Blog/Entries/2017/5/11_wolfSSL_TLS_1.3_BETA_Release_Now_Available.html">TLS 1.3 is now available</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-7-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with Intel SGX and TLS 1.3 (#TLS13)',
    'post_content' => 'As we announced last month, <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a> now includes a port for Intel® SGX (Software Guard Extensions) with Linux (specifically, Ubuntu 16.04). Using wolfSSL with SGX Linux takes advantage of Intel® SGX technology to separate untrusted and trusted code, isolating the wolfSSL library from potentially malicious applications running on the host machine.<br /><br />Curious about using wolfSSL’s TLS 1.3 functionality in a secure enclave with SGX? After checking out the example application below, check out <a href="https://wolfssl.com/wolfSSL/wolfssl-tls13.html">wolfSSL’s TLS 1.3 support page</a>. It details building wolfSSL with TLS 1.3, as well as executing the examples specifically with TLS 1.3.<br /> <br />You can try out wolfSSL for Intel® SGX yourself with the port at wolfssl-root/IDE/LINUX-SGX which covers building a static library for linking with other SGX Enclaves.<br /> <br />wolfSSL also has an example Enclave and Application that demonstrate how to use wolfSSL SGX. The sample application covers:<br /><br />1.  wolfCrypt API Testsuite<br />2.  wolfCrypt Benchmarks<br />3.  Simple TLS Client Example with client and server authentication<br /><br />The example can be found at <a href="https://github.com/wolfssl/wolfssl-examples/tree/master/SGX_Linux">https://github.com/wolfssl/wolfssl-examples/tree/master/SGX_Linux</a>.<br /> <br />For more information about Intel SGX see the sites below.<br /><a href="https://en.wikipedia.org/wiki/Software_Guard_Extensions">https://en.wikipedia.org/wiki/Software_Guard_Extensions</a><br /><a href="https://software.intel.com/en-us/sgx">https://software.intel.com/en-us/sgx</a><br /><a href="https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF">https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF</a><br /> <br />For more information about wolfSSL TLS 1.3 see the sites below.<br /><a href="https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.3_.28draft.29">https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.3_.28draft.29</a><br /><a href="https://wolfssl.com/wolfSSL/wolfssl-tls13.html">https://wolfssl.com/wolfSSL/wolfssl-tls13.html</a><br /><br />If you have a need for an embedded SSL/TLS library with Intel® SGX contact us today at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br /><a href="https://wolfssl.com/wolfSSL/Blog/Entries/2017/5/11_wolfSSL_TLS_1.3_BETA_Release_Now_Available.html">TLS 1.3 is now available</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-7-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and OSS-Fuzz',
    'post_content' => 'Recently, Google announced <a href="https://github.com/google/oss-fuzz">OSS-Fuzz</a> with the aim of making "common open source software more secure and stable by combining modern fuzzing techniques and scalable distributed execution." And when they said that <a href="https://github.com/wolfSSL/wolfssl/issues/940">they would like to see us at OSS-Fuzz</a>, we were interested.<br /><br />You can read up on OSS-Fuzz at their <a href="https://github.com/google/oss-fuzz">official Github page</a>, but to summarize the whole thing, it is at it`s core an entry point to Google`s expansive <a href="https://blog.chromium.org/2012/04/fuzzing-for-security.html">ClusterFuzz system</a>. ClusterFuzz itself is an impressive network of virtual machines utilized originally for fuzz testing the Chrome project, but since opened up to other security software.<br /><br />On our end, we expect to see a massive increase in our capability to test the wolfSSL library. Any bug found will be disclosed to wolfSSL, then giving us 90 days to release a patch for it before Google discloses its existence to the world.<br /><br />On your end, you will have access to bugs that are found by this service. It also acts as a mechanism to hold us accountable. Once ClusterFuzz finds and logs a vulnerability, that vulnerability will be made public whether we fix it or not. This, of course, just keeps the pressure on us to keep wolfSSL as secure as possible.<br /><br />Currently, the plan is to continue our own internal fuzzing projects, and test the waters over at OSS-Fuzz to see just how valuable we end up finding the service. If we like the results that we end up getting, we plan to increase the amount of fuzzing we do through OSS-Fuzz.',
    'post_status' => 'publish',
    'post_date' => date('2017-7-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Integrating Testing with the tlsfuzzer',
    'post_content' => 'Fuzz testing is an important part of maintaining a secure code base here at wolfSSL. While we already have fuzzers in use ensuring that our library is as secure as possible, we recently decided to integrate 4 more fuzzers with our library to ensure that no potential bugs go undetected. This is one of many reasons that <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> remains the best choice for an SSL/TLS library. <br /> <br />One of the new fuzzers being implemented into our system is the <a href="http://github.com/tomato42/tlsfuzzer">tlsfuzzer</a>. This fuzzer was developed by Hubert Kario at Red Hat and was written purely in Python. Kario has developed over 60 unique scripts within the tlsfuzzer that run against the server of a given SSL/TLS library. These scripts attempt to find bugs and flaws in the system being tested against. After making a few slight modifications to our server, the tlsfuzzer scripts are now able to run against our server and provide us with detailed performance reports. The tlsfuzzer is an open source project available on <a href="http://github.com/tomato42/tlsfuzzer">Github</a>. <br /> <br />Once the tlsfuzzer was successfully implemented with our system, we tested our server against each script and compared these results to other SSL/TLS libraries. Using these results, we know exactly where to make improvements and how to proceed with their implementations. We are excited to be taking further steps in improving the security of our library.<br /> <br />For further details regarding our process of testing the wolfSSL library to ensure code quality and security, please reference <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2016/2/12_Overview_of_Testing_in_wolfSSL.html">this blog page</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2017-7-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Sensors Expo 2017',
    'post_content' => 'You are invited to join wolfSSL at the 2017 Sensors Expo. The only event 100% dedicated to sensors and sensing technologies, taking place June 27-29 at the McEnery Convention Center in San Jose, California. Visit the link below <a href="http://www.sensorsexpo.com/">www.sensorsexpo.com/</a> for more information.<br /><br />If you would like to schedule a time in advance to meet with Rich Kelm or David Garske at the show, please contact <a href="mailto:rich@wolfssl.com">rich@wolfssl.com</a> or <a href="mailto:david@wolfssl.com">david@wolfssl.com</a>, or stop by our booth #534.  We will be talking about securing sensor data and projects with <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a>, <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a>, <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a>, and <a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a>!<br /><br />We look forward to seeing you at the show!',
    'post_status' => 'publish',
    'post_date' => date('2017-6-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Transport-Level Security Tradeoffs using MQTT',
    'post_content' => 'By Todd Ouska, wolfSSL<br /><br />The <a href="http://mqtt.org/">Message Queuing Telemetry Transport</a> protocol, or MQTT, has become a favorite of Internet of Things (IoT) developers, and why not? It’s incredibly lightweight (on the order of a couple Kb for client implementations), has easy-to-use APIs, and is available for free under the Eclipse Public License (EPL). If your connected application is something simple and relatively contained – like remote monitoring the temperature in your living room, for example – that much is probably enough to make you happy.<br /><br />But what if your application is a little more complex? Say you’re combining multiple sensors, an HVAC system, a little intelligence, and MQTT to automatically adjust the climate in your home based on occupancy, and you’ve also configured remote management into the application so you can manually override instances where your dog tripped the infrared proximity sensor (sorry, Spot). Or maybe after some hard work you’re deploying a similar commercial system and need to update a sensor platform’s firmware to provide more precise measurements. So at what point is “enough” good enough? The answer depends on you and your application.<br /><br />MQTT is a publish/subscribe protocol, meaning that would-be “clients” in the traditional networking model can act as both publishers of and subscribers to messages related to particular topics. Messages are distributed using the transmission control protocol (TCP), but rather than being indiscriminately broadcast, clients send messages through a central MQTT broker that accepts messages from a publisher and distributes them to the subscriber(s) to that topic at varying quality of service (QoS) levels.<br /><br />However, in order to keep the protocol as lightweight as possible for resource-constrained IoT edge devices, the MQTT specification offers nothing on top of TCP for security outside of a recommendation that the transport layer security (TLS) protocol be used for applications that require additional levels of authentication. As a result, MQTT communications that rely on TCP alone are unencrypted and susceptible to man-in-the-middle attacks.<br /><br />To illustrate what this means in more detail, let’s go back to our two “complex” examples from earlier. Say a proximity sensing platform publishes a message to the MQTT broker with the topic “home/occupancy.” The MQTT protocol does allow the use of a username and password for client identification, but these are displayed in text if some form of encryption isn’t used. Therefore, an eavesdropper could potentially impersonate a client subscriber and decrypt a message payload, or even imitate a client publisher and issue fake or modified messages. In terms of the personal home application this could signal to prospective thieves that no one is home, and in the commercial deployment scenario has serious implications on processes like remote firmware updates.<br /><br /><b>TLS tradeoffs<br /><br /></b>As mentioned, the MQTT protocol does recommend the use of TLS for more sensitive MQTT implementations, and a network port (port 8883) has even been reserved for this purpose. TLS is the successor of the secure sockets layer (SSL) protocol, and provides an encrypted communication channel over which MQTT messages can be sent. Before the channel is established TLS uses a handshake to pass certificates (or keys) from the publisher to the broker, but also between the broker and subscribers. If successful a secure channel is established, if not, the connection is aborted. Easy enough, right?<br />Well, maybe not. The downside of using TLS, SSL, and other methods of encryption is that they can add significant overhead, which is probably why you chose to use MQTT in the first place. For example, at wolfSSL we recently released an MQTT client library (<a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a>) with a compiled size of 3.6 kB. A TLS handshake alone can consume that much, without accounting for the encryption overhead on the individual packets themselves. For certain resource-constrained embedded devices, particularly those based on small microcontrollers, this added workload can simply consume too much in terms of CPU resources.<br /><br />Techniques such as session resumption can compensate for some of the connection costs of TLS, and hardware acceleration is also a method for reducing the size penalty for encryption. Another important consideration is selecting an optimized encryption library when securing system communications, and in the case of <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a>, integrating the lightweight <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a> embedded SSL/TLS library resulted in a compiled size of 20-30 kB when paired with hardware acceleration.<br />In the end, the decision when and how to implement security in your MQTT-based IoT system depends on you and your application. If you decide to move forward with transport-layer encryption, some best practices include working with MQTT libraries that are open source and allow you to look under the hood, but also provide documentation and examples of how encryption could be implemented in your application. If you’re a commercial entity using MQTT, make sure to partner with a vendor that has security credentials and also supports the widest range of operating systems and embedded chipsets possible in order to avoid lock-in. <br /><br />For more, check out our <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2015/11/30_wolfMQTT_v0.3_and_MQTT_Secure_Firmware_Update_Example.html">secure firmware update example</a> written in C that demonstrates encrypted communications to and from an MQTT broker using TLS.<br /><br />For more information about <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> and <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a>, or about some of our other products (<a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a>, <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a>), contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><br />Todd Ouska is Co-Founder and CTO of wolfSSL. <br /><br />wolfSSL<br /><a href="http://www.wolfssl.com">www.wolfssl.com</a><br /><a href="https://twitter.com/wolfSSL">@wolfSSL</a><br />LinkedIn: <a href="http://www.linkedin.com/company/461500">www.linkedin.com/company/461500</a> <br />Facebook: <a href="http://www.facebook.com/wolfssl">www.facebook.com/wolfssl</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-6-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Announcing wolfSSH v1.1.0!',
    'post_content' => 'wolfSSH v1.1.0 is now available for <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download</a>. This release contains an update to use DH GEX with SHA-256 during the key exchange.<br /><br />The <a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a> server library is a lightweight implementation of the SSH v2 protocol suite for embedded servers. It is written in C from scratch. wolfSSH keeps a small footprint by using the <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> cryptography library. If you need <a href="perma://BLPageReference/33AC9E16-2970-42BF-BE19-BA89C2B708E1">FIPS 140-2</a>, wolfCrypt has you covered.<br /><br />wolfSSH is currently dual licensed. You may download from our website and use it for free, so long as you abide by the GPLv3 licensing terms. Commercial licensing terms are also available. Please contact our sales team for more information at <a href="mailto:sales@wolfssl.com">sales@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-6-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Differences between TLS 1.2 and TLS 1.3',
    'post_content' => 'With the release of TLS 1.3, there are promises of enhanced security and speed. But how exactly do the changes from TLS 1.2 to TLS 1.3 cause these improvements? The following is a list of differences between TLS 1.2 and 1.3 that shows how the improvements are achieved.<br /> <br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> is among one of the <a href="https://wolfssl.com/tls13">first libraries to support TLS 1.3</a>. Below are the major differences between TLS 1.2 and TLS 1.3<br /><br /><b>TLS 1.3<br /></b><br />This protocol was defined in an Internet Draft in April of 2017. TLS 1.3 contains improved security and speed. The major differences include:<br /><br />	•	The list of supported symmetric algorithms has been pruned of all legacy algorithms. The remaining algorithms all use Authenticated Encryption with Associated Data (AEAD) algorithms.<br /><br />	•	A zero-RTT (0-RTT) mode was added, saving a round-trip at connection setup for some application data at the cost of certain security properties.<br /><br />	•	All handshake messages after the ServerHello are now encrypted.<br /><br />	•	Key derivation functions have been re-designed, with the HMAC-based Extract-and-Expand Key Derivation Function (HKDF) being used as a primitive.<br /><br />	•	The handshake state machine has been restructured to be more consistent and remove superfluous messages.<br /><br />	•	ECC is now in the base spec  and includes new signature algorithms. Point format negotiation has been removed in favor of single point format for each curve.<br /><br />	•	Compression, custom DHE groups, and DSA have been removed, RSA padding now uses PSS.<br /><br />	•	TLS 1.2 version negotiation verification mechanism was deprecated in favor of a version list in an extension.<br /><br />	•	Session resumption with and without server-side state and the PSK-based ciphersuites of earlier versions of TLS have been replaced by a single new PSK exchange.<br /> <br />Internet Draft: <a href="https://tools.ietf.org/html/draft-ietf-tls-tls13-20">https://tools.ietf.org/html/draft-ietf-tls-tls13-20</a><br /> <br /><b>Resources:<br /></b><br />If you would like to read more about SSL or TLS, here are several resources that might be helpful:<br /><br />TLS - Wikipedia (<a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">http://en.wikipedia.org/wiki/Transport_Layer_Security</a>)<br />SSL versus TLS - What`s the Difference? (<a href="http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html">http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html</a>)<br />Cisco - SSL: Foundation for Web Security (<a href="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html">http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html</a>)',
    'post_status' => 'publish',
    'post_date' => date('2017-6-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with Intel SGX on Linux',
    'post_content' => '<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> now includes a port for Intel® SGX (Software Guard Extensions) with Linux (specifically, Ubuntu 16.04). Using wolfSSL with SGX Linux takes advantage of Intel® SGX technology to separate untrusted and trusted code, isolating the wolfSSL library from potentially malicious applications running on the host machine.<br /> <br />Curious about the extra security afforded by running wolfSSL in a secure enclave with SGX? Try out wolfSSL for Intel® SGX yourself with the port at wolfssl-root/IDE/LINUX-SGX which covers building a static library for linking with other SGX Enclaves.<br /> <br />wolfSSL also has an example Enclave and Application that demonstrate how to use wolfSSL SGX. The sample application covers:<br />1.  wolfCrypt API Testsuite<br />2.  wolfCrypt Benchmarks<br />3.  Simple TLS Client Example with client and server authentication<br /><br />The example can be found at <a href="https://github.com/wolfssl/wolfssl-examples/tree/master/SGX_Linux">https://github.com/wolfssl/wolfssl-examples/tree/master/SGX_Linux</a>.<br /> <br />For more information about Intel SGX see the sites below.<br /><a href="https://en.wikipedia.org/wiki/Software_Guard_Extensions">https://en.wikipedia.org/wiki/Software_Guard_Extensions</a><br /><a href="https://software.intel.com/en-us/sgx">https://software.intel.com/en-us/sgx</a><br /><a href="https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF">https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF</a><br /> <br />If you have a need for an embedded SSL/TLS library with Intel® SGX contact us today at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-6-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Announces Partnership with Infineon',
    'post_content' => 'wolfSSL would like to announce to our community that we are now partnered with <a href="https://www.infineon.com">Infineon</a>.  This partnership should make it easier to get wolfSSL up and running on Infineon-based projects that need to be secured!<br /><br />The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> is a perfect fit for securing lightweight, resource-constrained devices.  wolfSSL has a footprint size of 20-100kB, offers protocol support up to TLS 1.3 and DTLS 1.2, progressive algorithm support, hardware crypto support, and more.<br /><br />Infineon designs, develops, manufactures and markets a broad range of semiconductors and system solutions. The focus of its activities is on automotive electronics, industrial electronics, mobile devices and chip card-based security. Combining entrepreneurial success with responsible action, Infineon addresses some of the most critical challenges of society: Efficient use of energy, environmentally-friendly mobility and security in a connected world.<br /><br /><a href="https://www.infineon.com">https://www.infineon.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-6-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Attending NXP FTF Connects',
    'post_content' => 'wolfSSL will be attending the <a href="http://www.nxp.com/support/training-events/classroom-training-events/nxp-ftf-connects/nxp-ftf-connects-san-jose:NXP-FTF-CONNECTS-SAN-JOSE?tid=FSHBNR_20170602">NXP FTF Connects</a> conference June 20-21, 2017, located in San Jose, CA.  You can view the conference schedule <a href="http://www.nxp.com/assets/documents/data/en/brochures/FTF-Connects-San-Jose-Schedule.pdf">here</a>.<br /><br />From the NXP website, “The forum focuses on creating a roadmap for innovation in IoT, a new era of great disruption and gearing up for the future of 5G and connected devices. You’ll also explore how self-driving cars will disrupt the traditional automotive industry – and how to prepare for safe automated driving.”<br /><br />wolfSSL is widely used to secure automotive applications and IoT devices, and works on many of the <a href="https://www.wolfssl.com/wolfSSL/wolfssl-freescale.html">NXP (formerly Freescale) platforms</a> - supporting bare metal, MQX, and KSDK.<br /><br />At the conference we will be talking about securing IoT and automotive applications using the wolfSSL embedded SSL/TLS library and wolfCrypt cryptography library.  We will also be talking about new, exciting features of wolfSSL including <a href="https://wolfssl.com/tls13">TLS 1.3</a>, asynchronous crypto, hardware crypto support, and more!<br /><br />Contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> if you would like to set up a meeting time at the show, or with any questions about how wolfSSL can be used on NXP-based platforms.',
    'post_status' => 'publish',
    'post_date' => date('2017-6-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The TLS v1.3 Advantage',
    'post_content' => 'Recently we announced availability of <a href="perma://BLPageReference/BD965CE2-6CD3-4612-BDB2-ABB1CAA62D3D">TLS v1.3 in wolfSSL</a>.  There are many benefits in changing to the newest version of the <a href="https://tlswg.github.io/tls13-spec/">TLS specification</a>.<br /><br />One <a href="https://tlswg.github.io/tls13-spec/#rfc.section.1.3">significant difference</a> you will notice is the reduced number of round-trips when performing a full handshake.  Older versions of the TLS protocol require two complete round-trips before the client sends the application data. With TLS v1.3 only 1 round-trip is required! Additionally, the server can send application data in response to the clients first handshake message!  This means network latency has less impact on the time required to establish a secure connection.<br /><br />Another difference is the way <a href="https://tlswg.github.io/tls13-spec/#rfc.section.2.2">session resumption</a> works in TLS v1.3. Previous versions of TLS have the client send a session id which the server has to lookup in its cache. If there was a match then they used the same security parameters. This is a very simplistic mechanism that requires sharing of state on servers. <br /><br />TLS v1.3 has made significant improvements by re-purposing the ticketing system tacked onto older versions of TLS. The server sends the client a new <a href="https://tlswg.github.io/tls13-spec/#NSTMessage">session ticket</a> after the handshake is complete. This ticket, a blob of data to the client, can be a database lookup key like the old session id. Alternatively, it can be a self-encrypted and self-authenticated value that contains the data for the previous connection. This means the server can be stateless!<br /><br />Finally, the specification has been evaluated by cryptographic experts in efforts to prove the security of the protocol. While no security proof is perfect, the previous attacks on renegotiation, protocol version downgrading, compression, CBC and padding have been mitigated and the protocol is generally more resistant to attack.<br /><br />For more details on using TLS v1.3 with wolfSSL, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2017-6-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OCSP Stapling with wolfSSL',
    'post_content' => 'Did you know that wolfSSL supports <b>OCSP Stapling</b> (Certificate Status Request TLS Extension) described in <a href="https://tools.ietf.org/html/rfc6066">RFC6066</a> and <b>OCSP Stapling v2</b> (Certificate Status Request TLS Extension v2) described in <a href="https://tools.ietf.org/html/rfc6961">RFC6961</a>?<br /><br /><b>And what benefits can we get out of it?<br /></b><br />Without OCSP stapling, SSL/TLS clients needs to spend extra resources on a second socket to communicate with an OCSP Responder in order to validate the server`s certificates using OCSP.  Also, the OCSP Responder is likely to be hit by enormous volumes of OCSP requests if a certificate is issued to a high traffic server, introducing a significant cost for the certificate authority.<br /><br />OCSP stapling allows the server to bear the resource cost involved in providing OCSP responses by appending a time-stamped OCSP response to the initial SSL/TLS Handshake, eliminating the need for clients to contact the OCSP Responder.  This way, a single OCSP response can be reused util it expires, forcing the server to get a new OCSP response from the OCSP Responder.<br /><br />OCSP Stapling v2 defines a new extension, "status_request_v2", with an extended format that allows the client to indicate support for multiple status request methods.<br /><br />For more details on using OCSP Stapling in wolfSSL, please refer to the <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a> or contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-5-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS 1.3 Now Available in wolfSSL #TLS13',
    'post_content' => 'The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> lightweight SSL/TLS library now supports TLS 1.3 (<a href="https://tools.ietf.org/html/draft-ietf-tls-tls13-18">Draft 18</a>) on both the client and server side!<br /><br />A BETA release of wolfSSL (wolfSSL 3.11.1) is available for download from our <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page</a>.  This release is strictly BETA, and designed for testing and user feedback.  Users and customers wanting a stable and production-ready version of wolfSSL should remain on version 3.11.0.<br /><br />To compile this release with TLS 1.3 support, use the “<b>--enable-tls13</b>” ./configure option:<br /><br />$ unzip wolfssl-3.11.1-tls13-beta.zip<br />$ cd wolfssl-3.11.1-tls13-beta<br />$ ./configure --enable-tls13<br />$ make<br /><br />wolfSSL has two new client/server methods, which can be used to specify TLS 1.3 during creation of a wolfSSL context (WOLFSSL_CTX):<br /><br />WOLFSSL_METHOD *wolfTLSv1_3_server_method(void);<br />WOLFSSL_METHOD *wolfTLSv1_3_client_method(void);<br /><br />The wolfSSL example client and server can be used to easily test TLS 1.3 functionality with wolfSSL.  For example, to connect the wolfSSL example client and server to each other using TLS 1.3 and the TLS13-AES128-GCM-SHA256 cipher suite, use the “-v” option with “4” to specify TLS 1.3, and the “-l” option to specify the cipher suite:<br /><br />$ ./examples/server/server -v 4 -l TLS13-AES128-GCM-SHA256<br />$ ./examples/client/client -v 4 -l TLS13-AES128-GCM-SHA256<br /><br />Alternatively, the example client can be used to connect to an external server.  For example, to connect to the <a href="https://www.wolfssl.com">wolfSSL website</a> with TLS 1.3:<br /><br />$ ./examples/client/client -v 4 -l TLS13-AES128-GCM-SHA256 -h <a href="http://www.wolfssl.com">www.wolfssl.com</a> -p 443 -g -A ./certs/wolfssl-website-ca.pem<br /><br />In this command, “-h” specifies the host, “-p” the port, “-g” causes the client to send an HTTP GET request, and “-A” specifies the CA certificate used to authenticate the server.<br /><br />wolfSSL currently supports the following TLS 1.3 cipher suites:<br /><br />TLS13-AES128-GCM-SHA256<br />TLS13-AES256-GCM-SHA384<br />TLS13-CHACHA20-POLY1305-SHA256<br />TLS13-AES128-CCM-SHA256<br />TLS13-AES128-CCM-8-SHA256<br /><br />Please send any comments or feedback on wolfSSL’s TLS 1.3 support to <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>.  Thanks!',
    'post_status' => 'publish',
    'post_date' => date('2017-5-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfMQTT v0.13 Released',
    'post_content' => 'wolfMQTT v0.13 is now available for <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download</a>. This release contains fixes for non-blocking and Arduino.<br /><br />The wolfMQTT client is a lightweight protocol used commonly in the IoT space and is a pub/sub model. It is written in C from scratch and is based on the MQTT v3.1.1 specification. As a result the code is compact (~4KB) and clean. We’ve taken great care to explicitly check all parameters and input data to ensure reliable and secure operation. The client also integrates with our wolfSSL client to provide TLS for MQTT, which is required for AWS and Azure.<br /><br />We have examples for connecting to:<br />* Amazon Web Services (AWS)<br />* Microsoft Azure IoT Hub<br />* Firmware Update over MQTT<br />* Generic MQTT client<br /><br />The examples support using various operating systems and network stacks such as Linux/Mac/Windows/FreeRTOS/MQX. The wolfMQTT library uses callbacks for the networking so you can implement it for any two of communication interface. We even have an example template for using a UART via the callbacks.<br /><br />Planned upcoming features:<br />* Multi-threaded support<br />* Android and iOS examples<br />* MQTT-SN (sensor network spec that reduces protocol overhead).<br /><br />If you have any questions or would like more information please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-5-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'PyCon CZ 2017',
    'post_content' => 'Moises Guimaraes of the wolfSSL team will be in Prague June 8th to 10th, talking at PyCon CZ about our wolfCrypt Python module and basic cryptography principles. See his talk summary at <a href="https://cz.pycon.org/2017/speakers/detail/talk/28/#main">https://cz.pycon.org/2017/speakers/detail/talk/28/#main</a>.<br /><br />Register today for PyCon CZ at <a href="https://cz.pycon.org/2017/#tickets">https://cz.pycon.org/2017/#tickets</a>. If you are already planning on attending, please chat with us about cryptography, SSL/TLS, and hardware encryption.<br /><br />If you would like to set up a specific meeting time, please email Moises at <a href="mailto:moises@wolfssl.com">moises@wolfssl.com</a>.<br /><br />To stay up to date with what is happening with wolfSSL, follow our <a href="perma://BLPageReference/F452BCBF-B739-4409-8D39-BDD3D3085699">blog</a>.<br /><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2017-5-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL with #OpenVPN',
    'post_content' => 'Hi!  Are you interested in using wolfSSL with OpenVPN?  If so, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or post a reply to this forum topic: <a href="https://www.wolfssl.com/forums/topic999-using-wolfssl-with-openvpn.html">https://www.wolfssl.com/forums/topic999-using-wolfssl-with-openvpn.html</a><br /><br />The <a href="https://www.wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a> lightweight SSL/TLS library is nice for reduced overhead and maximum throughput in addition to supporting cutting edge curves and cipher suites!  wolfSSL currently supports up to TLS 1.3 and DTLS 1.2 and offers leading support in the industry!<br /><br />OpenVPN, as described by their <a href="https://openvpn.net/index.php/about-menu/about-us.html">website</a>, is “an open source virtual private network solution that has established itself as the defacto standard”.<br /><br />We look forward to hearing your thoughts about using wolfSSL with OpenVPN!',
    'post_status' => 'publish',
    'post_date' => date('2017-5-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL TLS 1.3 BETA Release Now Available',
    'post_content' => 'The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> lightweight SSL/TLS library now supports TLS 1.3 (<a href="https://tools.ietf.org/html/draft-ietf-tls-tls13-18">Draft 18</a>) on both the client and server side!<br /><br />A BETA release of wolfSSL (wolfSSL 3.11.1) is available for download from our <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page</a>.  This release is strictly BETA, and designed for testing and user feedback.  Users and customers wanting a stable and production-ready version of wolfSSL should remain on version 3.11.0.<br /><br />To compile this release with TLS 1.3 support, use the “<b>--enable-tls13</b>” ./configure option:<br /><br />$ unzip wolfssl-3.11.1-tls13-beta.zip<br />$ cd wolfssl-3.11.1-tls13-beta<br />$ ./configure --enable-tls13<br />$ make<br /><br />wolfSSL has two new client/server methods, which can be used to specify TLS 1.3 during creation of a wolfSSL context (WOLFSSL_CTX):<br /><br />WOLFSSL_METHOD *wolfTLSv1_3_server_method(void);<br />WOLFSSL_METHOD *wolfTLSv1_3_client_method(void);<br /><br />The wolfSSL example client and server can be used to easily test TLS 1.3 functionality with wolfSSL.  For example, to connect the wolfSSL example client and server to each other using TLS 1.3 and the TLS13-AES128-GCM-SHA256 cipher suite, use the “-v” option with “4” to specify TLS 1.3, and the “-l” option to specify the cipher suite:<br /><br />$ ./examples/server/server -v 4 -l TLS13-AES128-GCM-SHA256<br />$ ./examples/client/client -v 4 -l TLS13-AES128-GCM-SHA256<br /><br />Alternatively, the example client can be used to connect to an external server.  For example, to connect to the <a href="https://www.wolfssl.com">wolfSSL website</a> with TLS 1.3:<br /><br />$ ./examples/client/client -v 4 -l TLS13-AES128-GCM-SHA256 -h <a href="http://www.wolfssl.com">www.wolfssl.com</a> -p 443 -g -A ./certs/wolfssl-website-ca.pem<br /><br />In this command, “-h” specifies the host, “-p” the port, “-g” causes the client to send an HTTP GET request, and “-A” specifies the CA certificate used to authenticate the server.<br /><br />wolfSSL currently supports the following TLS 1.3 cipher suites:<br /><br />TLS13-AES128-GCM-SHA256<br />TLS13-AES256-GCM-SHA384<br />TLS13-CHACHA20-POLY1305-SHA256<br />TLS13-AES128-CCM-SHA256<br />TLS13-AES128-CCM-8-SHA256<br /><br />Please send any comments or feedback on wolfSSL’s TLS 1.3 support to <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>.  Thanks!',
    'post_status' => 'publish',
    'post_date' => date('2017-5-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'IoT World 2017',
    'post_content' => '<b>Come join us at the Internet of Things World 2017<br /></b><br />The wolfSSL Team will be in California the 16th of May through the 18th of May in Santa Clara, California. This event will be held at the Santa Clara Convention Center. On Tuesday the doors are open 4 pm to 6 pm, Wednesday from 10 am to 6 pm and Thursday from 10 am to 4 pm.  <br /><br />If you are attending or planning on attending please stop by our table or schedule an appointment with Rod by contacting him either by phone at +1 206 310 3098 or by email at <a href="mailto:rod@wolfssl.com">rod@wolfssl.com</a>.<br /><br />For more information about IoT World or to purchase tickets, you may register at  <a href="https://tmt.knect365.com/iot-world/purchase/select-package">https://tmt.knect365.com/iot-world/purchase/select-package</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-5-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ICMC 2017',
    'post_content' => '<b>Come join wolfSSL at the International Cryptographic Module Conference 2017<br /></b><br />The wolfSSL Team will be in the Washington DC area the 16th of May through the 19th of May at the International Cryptographic Module Conference. This event will be held at the Westin Arlington Gateway,  Washington DC in Arlington, Virginia from 9:00 am to 5:00 pm Wednesday, Thursday, and Friday.  <br /><br />Chris Conlon, of the wolfSSL team, will be speaking at the event. This presentation will focus on the use of FIPS 140-2 cryptography in the IoT, covering the predominant ways that wolfSSL has helped customers overcome challenges when doing embedded FIPS validations. You can learn more about his presentation on the ICMC site.<a href="http://icmconference.org/?presentation=e12b">http://icmconference.org/?presentation=e12b</a><br /><br />If you are attending or planning on attending please stop by our table or schedule an appointment with Rich by contacting him either by phone at (425) 245-824 or by email at <a href="mailto:rich@wolfssl.com">rich@wolfssl.com</a>.<br /><br />For more information about ICMC, or to purchase tickets, you may register at:<a href="http://icmconference.org/"> http://icmconference.org/</a><br /><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2017-5-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.11.0 Now Available',
    'post_content' => '<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> 3.11.0 is now available for <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download</a>! This release contains bug fixes, exciting new features, and includes fixes for several security vulnerabilities (5 low and 1 medium level).<br /><br />Continue reading below for a summary of the features and fixes included in this release.<br /><br /><b>Vulnerability Fixes<br /></b><br />This release fixes three LOW level vulnerabilities reported by Yueh-Hsun Lin and Peng Li from KNOX Security, Samsung Research America, including:<br /><br />1.  A fix for out-of-bounds memory access in wc_DhParamsLoad() when GetLength() returns a zero. Before this fix there was a case where wolfSSL would read out of bounds memory in the function wc_DhParamsLoad().<br />2. A fix for wc_DhAgree() where a malformed key could be accepted by the function.<br />3. A fix for a double free case when adding a CA cert into an X509_STORE.<br /><br />One LOW level vulnerability was fixed in relation to memory management with the static memory feature enabled. By default static memory is disabled. Thanks to GitHub user hajjihraf for reporting this.<br /><br />One LOW level vulnerability was fixed for an out-of-bounds write in the function wolfSSL_X509_NAME_get_text_by_NID(). This function is not used by TLS or crypto operations but could result in a buffer out of bounds write by one if called explicitly in an application. Discovered by Aleksandar Nikolic of Cisco Talos (<a href="http://talosintelligence.com/vulnerability-reports/">http://talosintelligence.com/vulnerability-reports/</a>).<br /><br />One MEDIUM level vulnerability was fixed in relation to checks on a certificate signature. There was a case in release versions 3.9.10, 3.10.0 and 3.10.2 where a corrupted signature on a peer certificate would not be properly flagged. Thanks to Wens Lo, James Tsai, Kenny Chang, and Oscar Yang at Castles Technology.<br /><br /><b>NGINX support<br /></b><br />We are excited to announce support for building the <a href="http://nginx.org/">NGINX web server</a> with wolfSSL!  Nginx and wolfSSL make a likely pairing because they are both lean, compact, fast, and scale well under high volumes of connections.<br /><br /><b>HAproxy support<br /></b><br />wolfSSL now supports being compiled into the <a href="http://www.haproxy.org/">HAproxy load balancer</a>!  HAproxy offers high availability, load balancing, and proxying for TCP and HTTP-based applications.<br /><br /><b>Intel QuickAssist Asynchronous Support<br /></b><br />We have added support to wolfSSL for <a href="http://www.intel.com/content/www/us/en/ethernet-products/gigabit-server-adapters/quickassist-adapter-for-servers.html">Intel QuickAssist</a> asynchronous crypto support.  More complete details can be found in our <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2017/1/18_wolfSSL_Asynchronous_Intel_QuickAssist_Support.html">recent blog post</a>.<br /><br /><b>Performance Enhancements<br /></b><br />- A 51-bit implementation of Curve25519 has been added, increasing performance on systems that have 128 bit types available.<br />- Heap usage reductions for users using the fastmath library (USE_FAST_MATH) when not using ALT_ECC_SIZE.<br /><br /><b>Updated Software Ports<br /></b><br />Existing wolfSSL software ports have been updated, including:<br /><br />- <a href="https://w1.fi/wpa_supplicant/">wpa_supplicant</a><br />- <a href="https://www.stunnel.org/index.html">stunnel</a> 5.40<br />- Improvements to <a href="http://t-engine.onghu.com/en/articles/introducing-the-t-kernel/">uTKernel</a> port (WOLFSSL_uTKERNEL2)<br />- Updated <a href="http://www.arduino.org/">Arduino</a> script to handle recent files and additions<br />- Fixes for building CRL on Windows<br /><br />And, we have added one new port as well:<br /><br />- New port to the <a href="http://www.tenasys.com/tenasys-products/intime-rtos-family/overview-rtos">tenAsys INtime RTOS</a><br /><br /><b>Updated Hardware Ports<br /></b><br />- Added an <a href="http://www.hexiwear.com/">NXP Hexiwear</a> example, located in the “IDE/HEXIWEAR” directory.<br />- Fixes for STM32 hardware crypto acceleration.  More details on using wolfSSL with STM32 platforms can be found <a href="https://www.wolfssl.com/wolfSSL/wolfssl-stm32.html">here</a>.<br /><br /><b>Protocol and Cipher Suite Updates<br /></b><br />We have made several changes that affect the SSL/TLS/DTLS protocol level and cipher suite support, including:<br /><br />- A fix for interoperability with ChaCha20-Poly1305 suites using older draft versions<br />- A DTLS update to allow multiple handshake messages in one DTLS record<br />- A new option to allow SHA1 with TLS 1.2 for IIS compatibility (WOLFSSL_ALLOW_TLS_SHA1)<br />- A fix to prevent send session IDs on the server side if the session cache is off unless we`re echoing session ID as part of session tickets<br />- A small change to the max PSK identity buffer to account for an identity length of 128 characters<br />- Fixes for ensuring all default ciphers are setup correctly (see <a href="https://github.com/wolfSSL/wolfssl/pull/830">PR #830</a>)<br />- Addition of wolfSSL_write_dup() to create a write only WOLFSSL object for concurrent access<br />- Fixes for TLS Elliptic Curve selection on private key import<br />- Improvements to the TLS layer context handling for switching keys and certs<br />- Addition of support for inline CRL lookup when HAVE_CRL_IO is defined<br />- Addition of a sanity check that subject key identifier is marked as non-critical, and a check that no policy OIDS appear more than once in the cert policies extension. Thanks to the report from Professor Zhenhua Duan, Professor Cong Tian, and Ph.D candidate Chu Chen from Institute of Computing Theory and Technology (ICTT) of Xidian University, China. Profs. Zhenhua Duan and Cong Tian are supervisors of Ph.D candidate Chu Chen.<br /><br /><b>Crypto Additions and Modifications<br /></b><br />We have made several changes that affect our underlying wolfCrypt cryptography library, including:<br /><br />- Updates and refactoring to ASN1 parsing functions<br />- Additional PKS#7 support for SignedData with ECDSA<br />- Fixes to RNG with speedups for Intel RDRAND and RDSEED<br />- Improved performance for Intel RDRAND, using full 64-bit output<br />- Addition of a new “--enable-intelrand” option to indicate use of RDRAND preference for RNG source<br />- Removal of RNG ARC4 support<br />- ECC helper functions to get size and ID from a curve name<br />- ECC private key only import and export functions<br />- ECC Cofactor DH (ECC-CDH) support<br />- PKCS#8 create function<br />- Normal math speed-up where to defer allocation on mp_int until mp_grow<br />- A sanity check for minimum authentication tag size with AES-GCM. Thanks to Yueh-Hsun Lin and Peng Li at KNOX Security at Samsung Research America for suggesting this<br /><br><b>Testing and Warning Fixes<br /></b><br />- Warnings reported by <a href="https://scan.coverity.com/">Coverity Scan</a> have been fixed, bringing you an even more well-tested wolfSSL SSL/TLS implementation.  For all of the testing we currently do, see our <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/2/12_Overview_of_Testing_in_wolfSSL.html">testing blog post</a>.<br />- Additional testing and warnings have been fixed for <a href="https://www.freebsd.org/">FreeBSD</a> builds on big endian <a href="https://en.wikipedia.org/wiki/PowerPC">PowerPC</a> systems.<br />- Extended testing code coverage in the wolfCrypt test application (test.c) that comes bundled with wolfSSL.<br /><br />If you have any questions about the new release, or using wolfSSL in your project, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-5-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'meta-wolfssl Layer for #Yocto and #OpenEmbedded',
    'post_content' => 'We have been working within <a href="http://www.openembedded.org">OpenEmbedded</a> and the <a href="https://www.yoctoproject.org">Yocto Project</a> to develop an Open Source SSL/TLS layer designed for incorporating <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> into custom Linux builds for embedded systems. <a href="https://github.com/wolfSSL/meta-wolfssl">meta-wolfssl</a> contains three completed recipes including the wolfSSL library as well as the wolfCrypt test and benchmark executables. You can now test and send information quickly and securely through your embedded device using our portable and lightweight SSL/TLS library. <br /><br />These recipes can be easily incorporated into any bitbake build, specifically through the use of the OpenEmbedded and Yocto Project utilities. For our original construction, we ran a custom version of core-image-sato (a mobile image platform) on the <a href="http://www.minnowboard.org/">Minnowboard</a>.<br /><br />The <a href="https://github.com/wolfSSL/meta-wolfssl">meta-wolfssl github</a> page includes detailed instructions for installing any of these recipes in your build image. Check back for future updates regarding meta-wolfssl and OpenEmbedded/Yocto. If you have any questions regarding adding wolfSSL to your OpenEmbedded/Yocto projects, feel free to contact us at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2017-5-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL + NGINX',
    'post_content' => 'Hi!  We have been asked a number of times about wolfSSL integration with the Nginx web server.  If you are not familiar with Nginx, it is a high performance, high concurrency web server that is becoming extremely popular these days.  You can learn more about Nginx at <a href="http://nginx.com/">nginx.com</a>.<br /><br />Nginx and wolfSSL make a likely pairing because they are both lean, compact, fast, and scale well under high volumes of connections.  The big news today is that wolfSSL is now working with Nginx! We have added a new configure option “--enable-nginx” which will compile the wolfSSL libraries with NGINX support. For more info please contact us today <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2017-5-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL with #ContikiOS',
    'post_content' => 'Hi!  Are you interested in using wolfSSL with the <a href="http://www.contiki-os.org/">Contiki OS</a>?  If so, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!  The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> lightweight SSL/TLS library is a perfect match for resource-constrained embedded IoT devices.  wolfSSL currently supports up to TLS 1.2 and DTLS 1.2, with TLS 1.3 support up and coming.<br /><br />Contiki, as described by their <a href="http://www.contiki-os.org/">website</a>, is “an open source operating system for the Internet of Things. Contiki connects tiny low-cost, low-power microcontrollers to the Internet. Contiki is a powerful toolbox for building complex wireless systems.”<br /><br />As those microcontrollers are connecting to the Internet, secure connectivity with SSL/TLS/DTLS is important.  We look forward to hearing your thoughts about using wolfSSL with Contiki!',
    'post_status' => 'publish',
    'post_date' => date('2017-4-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL + Tenasys INTime RTOS',
    'post_content' => 'wolfSSL recently completed a port to Tenasys INTime RTOS! You can read more in the press release from Tenasys here: <a href="https://www.pressebox.com/pressrelease/tenasys-europe-gmbh/20-years-of-commercial-usage-TenAsys-Corp-shows-INtime-real-time-OS-at-Embedded-World-2017/boxid/842331">Secured INtime system traffic</a>!<br /><br />Tenasys is using <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> to secure their networked real-time systems and wolfSSL is happy to be integrated into the INTime networking stack which allows us to provide world renowned security to INTime SDK consumers. If you have any questions about this please contact wolfSSL: <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><br />Reference: <a href="https://www.pressebox.com/pressrelease/tenasys-europe-gmbh/20-years-of-commercial-usage-TenAsys-Corp-shows-INtime-real-time-OS-at-Embedded-World-2017/boxid/842331">https://www.pressebox.com/pressrelease/tenasys-europe-gmbh/20-years-of-commercial-usage-TenAsys-Corp-shows-INtime-real-time-OS-at-Embedded-World-2017/boxid/842331</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-4-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Internet of Things Developers Conference 2017',
    'post_content' => 'Richard Kelm of the wolfSSL team will be in Santa Clara April 26th and 27th, exhibiting at the IoT Developers Conference. The doors are open on Wednesday, April 26th from 9am- 5pm and Thursday, April 27th 8:30am to 5pm.<br /><br />Register today for IoT Devcon. <a href="http://iot-devcon.com/register.php">http://iot-devcon.com/register.php</a>. Use promotion code <b>SC728</b> for a 50% discount on your 2 day pass. If you are already planning on attending, please stop by, say hello, and chat with us about cryptography, SSL/TLS, and hardware encryption.<br /><br />If you would like to set up a specific meeting time, please email Rich at <a href="mailto:Rich@wolfssl.com">Rich@wolfssl.com</a>, or call him at (360) 556-9718.<br />To stay up to date with what is happening with wolfSSL, follow our <a href="https://wolfssl.com/wolfSSL/Blog/Blog.html">blog</a>.<br /><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2017-4-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL + Micro-T Kernel, TRON, T-ENGINE',
    'post_content' => '<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> has support for The Real-time Operating system Nucleus’ (TRONs’) <a href="https://en.wikipedia.org/wiki/Micro_T-Kernel">Micro T-Kernel</a> or (uT-Kernel / μT-Kernel). Users can define “WOLFSSL_uTKERNEL2” in their project settings to take advanatage of wolfSSL support for this popular <a href="http://www.tron.org/">T-Engine Forum</a> integrated project!<br /><br />If you have any questions please contact wolfSSL: <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2017-4-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Expanding Our Compatibility Layer',
    'post_content' => 'Tired of using OpenSSL? Recently wolfSSL has been expanding our compatibility layer, which means that it soon will be even easier to replace OpenSSL with <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> in existing projects. In some cases the replacement can be as easy as including <wolfssl/options.h> and linking to a wolfSSL library that has been compiled with --enable-opensslextra.<br /><br />For more information about the wolfSSL or the compatibility layer contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-4-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2017 Roadmap',
    'post_content' => 'Curious about new features and additions to wolfSSL technologies for the coming year?  Some items on our current roadmap include increasing performance through hardware acceleration and instruction level tuning, resource reduction tuning, and increasing our Async Crypto support to other projects like <a href="https://nginx.org/en/">nginx</a>.  Our TLS 1.3 draft support is ready for testing and should the specification go final our release will be one of the first.<br /><br />In terms of new environments we’ll have more <a href="perma://BLPageReference/33AC9E16-2970-42BF-BE19-BA89C2B708E1">FIPS</a> platforms, more FIPS algorithms, easier integration with event programming, <a href="https://en.wikipedia.org/wiki/Data_Plane_Development_Kit">Data plane development</a> support, more language wrappers, <a href="https://software.intel.com/en-us/sgx-sdk">SGX</a> support at the TLS level, and more Open Source project plugins including <a href="http://www.haproxy.org/">HAProxy</a>, <a href="http://nginx.org/en/">nginx</a>, and <a href="https://w1.fi/wpa_supplicant/">wpa_supplicant</a>.<br /><br />Look for product improvements to <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a>, <a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a>, and <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a>.  We also anticipate offering our testing and security audit programs as services.  Keep an eye out for connected home <a href="perma://BLPageReference/CA5A7048-A7FD-422F-A32A-91E3AB8DCCB6">white papers</a> and <a href="perma://BLPageReference/B041BC15-002B-49EB-9993-EE890772EB7E">case studies</a>.  Something we missed, or something you would like to see on our roadmap?  Please let us know.<br><br />Or feel free to visit our website at <a href="https://www.wolfssl.com/">wolfssl.com</a> or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-4-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Everything you wanted to know about how wolfSSL support handles vulnerability reports, but were afraid to ask',
    'post_content' => 'Sometimes the consumers of the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> Embedded TLS library are curious about our internal process for handling vulnerability reports.  The first thing our users need to know is that wolfSSL takes every vulnerability report seriously!  We currently maintain a mean time to verification of about 1.5 hours.  Our mean time to achieve a fix is about 12 hours.  As most of our readers know, not all CVE’s are created equally, so our fixes can take anywhere from 24 minutes to 24 hours.  <br /><br />The final statistic we can share is one that we are particularly proud of:  <b>Our mean time between a report and a release over the last 3 years is 38 hours!</b>  We believe this is an industry leading number, and one that we will strive to maintain and even improve!<br /><br /><b>Break-down of wolfSSL vulnerability response procedures:<br /></b><br />#1 - (45 - 120 minutes)<br />- Support staff de-prioritizes all support to confirm vulnerability exists<br />- Support staff makes any necessary modifications to provided test code to make it build out-of-the-box for engineering team<br />- Support staff creates README for engineering team to be able to re-produce in 10 minutes or less <br />- As soon as validated and tests streamlined alert is sent to engineering team along with report and test case<br /><br />#2 - (20 minutes - 1 day)<br />- Engineering team fixes the issue and opens a pull request<br />- Multiple engineers review fix<br /><br />#3 - (1 hour)<br />- Jenkins automated integration server tests fix<br /><br />#4 - (1 hour)<br />- Senior Engineer reviews Jenkins results and suggested fix<br /><br />#5 - (N/A)<br />- repeat steps #2 - #4 as necessary<br /><br />#6 - (N/A)<br />- Fix is merged<br /><br />#7 (1 day)<br />- Release process started<br />- New GPL licensed release posted to website<br />- Commercial Releases sent to customers',
    'post_status' => 'publish',
    'post_date' => date('2017-3-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Microchip MLA Support',
    'post_content' => 'In addition to ongoing support for MPLAB Harmony,  <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> has updated its support for Microchip Libraries for Applications (MLA). Using wolfSSL`s embedded SSL/TLS libraries we created an MLA TCP/IP demo using the PIC32 Ethernet Starter Kit, which enables SMTP and HTTPS over SSL/TLS. For access to this demo contact us today at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />If you are using Microchip’s MLA on any of the supported platforms (PIC16, PIC18, PIC24, dsPIC33, or PIC32) and looking for an embedded TLS solution, or have questions, please contact our support team at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>, we would be more than happy to support your efforts!<br /><br />References:<br /><br />MLA Support:<a href="https://www.wolfssl.com/wolfSSL/wolfssl-pic32.html"> https://www.wolfssl.com/wolfSSL/wolfssl-pic32.html</a><br />Supported Platforms:<a href="http://www.microchip.com/mplab/microchip-libraries-for-applications"> http://www.microchip.com/mplab/microchip-libraries-for-applications</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-3-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Hardware Crypto Support for TIVA-C',
    'post_content' => '@wolfSSL has been collaborating with @TXInstruments for some time to provide ongoing hardware encryption support for your #IoT projects! Hardware support for the following algorithms is available in the #<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> #embedded #TLS #SSL library when building with #TIRTOS for the #<a href="http://processors.wiki.ti.com/index.php/Tiva_C_Series_LaunchPads">TivaC</a> micro controller.<br /><br />AES<br />CCM<br />DES3<br />MD5<br />SHA<br />SHA-224<br />SHA-256<br /><br />For instructions on building wolfSSL on TIRTOS, the following guide is very useful!  Also included in the guide are details on setting up a TLS example server!<br /><a href="https://github.com/wolfSSL/wolfssl-examples/blob/master/tirtos_ccs_examples/README.md">https://github.com/wolfSSL/wolfssl-examples/blob/master/tirtos_ccs_examples/README.md</a><br /><br />For any other questions or info please contact <a href="mailto:support@wolfssl.com">support@wolfssl.com</a> or <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> ',
    'post_status' => 'publish',
    'post_date' => date('2017-3-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL on the Atmel ATECC508A',
    'post_content' => 'The <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL embedded SSL/TLS library</a> and <a href="https://wolfssl.com/wolfSSL/Products-wolfcrypt.html">wolfCrypt embedded crypto engine</a> have been integrated into the <a href="http://www.atmel.com/products/security-ics/cryptoauthentication/ecc-256.aspx">Atmel ATECC508A crypto element</a>, adding support for ECC hardware acceleration and protected private key storage on the ATECC508A.<br />Using wolfSSL, ATECC508A users can benefit from both increased ECC performance and secure key storage, thus hardening their TLS connections.  The wolfCrypt ATECC508A port adds:<br /><br />+ wolfCrypt support for ECC hardware acceleration using the ATECC508A.  The new defines for this port are <b>WOLFSSL_ATMEL</b> and <b>WOLFSSL_ATECC508A</b><br />+ New public key callback for Pre Master Secret<br /><br />For more complete details please visit the <a href="https://wolfssl.com/wolfSSL/wolfssl-atmel.html">wolfSSL Atmel webpage</a>.  The code can be downloaded directly from wolfSSL’s “<a href="https://wolfssl.com/wolfSSL/download/downloadMoreForm.php">More Downloads</a>” page, with the title “Atmel_ATECC508_Demos.zip”.<br /><br />wolfSSL is dual licensed under both the GPLv2 as well as a standard commercial license.  For licensing information, please see the wolfSSL <a href="https://wolfssl.com/wolfSSL/License.html">License Page</a>, or contact us <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or call us at (425) 245-8247',
    'post_status' => 'publish',
    'post_date' => date('2017-3-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded World 2017',
    'post_content' => 'Embedded world will be held this year from March 14th to the 16th. It is the world`s largest trade fair and conference for embedded system technologies.  wolfSSL`s Business Director Rod Weaver and two of our Engineers, Kaleb Himes and Michael Shihrer, will be displaying at Embedded World 2016.  They will be displaying in Hall 3, at Booth 3-431b and also in the Microchip Technologies area.<br /> <br />You can be our guest and secure <a href="http://www.embedded-world.de/voucher">your free ticket</a> now – use the following online registration code (B349234) at <a href="http://www.embedded-world.de/voucher">www.embedded-world.de/voucher</a> for your free entrance ticket to come visit us at our booth.<br /><br>Are you available to meet with Rod at the show to talk SSL/TLS and Cryptography?  If so, please contact him at (206) 310-3098 to set up an appointment.  For more information about Embedded World please go to:  <a href="https://www.embedded-world.de/">https://www.embedded-world.de/</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-3-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2016 Annual Report',
    'post_content' => 'Each year we like to document, review, and reflect on our progress, the details of which are below.  As most of our consumers know, we’ve been diligent in the squashing of bugs, our testing, and the addition of features.  <br /><br />We made a world of progress in 2016, but these accomplishments stand out:<br /><br />1.  We’ve continued to make significant enhancements to our unrivaled <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/2/12_Overview_of_Testing_in_wolfSSL.html">cryptography test rig</a>, <br />2.  We’ve added support for a number of secure enclaves, and<br />3.  We added to our already long list of hardware assisted cryptography methods, and finally,<br />4.  We’ve added a number of new environments and algo’s to our FIPS-140 certificate.<br />5.  We also crossed over to securing over 2 Billion connections<br /><br />All in all, we’re pretty happy with what we’ve done!  <br /><br />Now let’s look forward into 2017!  You can expect us to release a string of TLS 1.3 based enhancements.  Our TLS 1.3 client is currently in alpha, and will make progress quickly.  Shout out and many thanks to the IETF TLS WG for making systematic progress on the new protocol.  <br /><br />You can also expect us to make a lot of progress on supporting additional secure enclaves.  They are now a fundamental requirement for professional IoT designs.  The same is true for the server side of the connection, where clunky HSM’s will be replaced by Intel’s <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/8/11_wolfSSL_At_IDF.html">SGX</a>.<br /><br />See below for all of the engaging details!<br /><br /><b>wolfSSL Technical Progress<br /></b><br />A total of five <a href="https://wolfssl.com/wolfSSL/Docs-wolfssl-changelog.html">wolfSSL releases</a> were delivered in 2016, each with bug fixes, enhancements, and new feature additions.  Highlights of these releases included:<br /><br />1.  New Algorithm Support:<br />        a.  AES-CMAC (<a href="https://tools.ietf.org/html/rfc4493">RFC 4493</a>)<br />        b.  SHA-224 (<a href="https://tools.ietf.org/html/rfc3874">RFC 3874</a>)<br />        c.  Scrypt (<a href="https://tools.ietf.org/html/rfc7914">RFC 7914</a>)<br />        d.  AES Key Wrap (<a href="https://tools.ietf.org/html/rfc3394">RFC 3394</a>)<br />        e.  <a href="http://www.secg.org/sec1-v2.pdf">ANSI-X9.63 KDF</a> (Key Derivation Function)<br />2.  New Hardware Crypto Support:<br />        a.  <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/10/13_wolfSSL_ARMv8_Support.html">ARMv8</a><br />        b.  <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/9/28_Intel_SGX_and_wolfSSL.html">Intel SGX</a><br />        c.  Intel <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/9/26_wolfSSL_3.9.10_Now_Available.html">RDSEED</a> and <a href="https://software.intel.com/en-us/articles/intel-advanced-encryption-standard-instructions-aes-ni">AES-NI</a> enhancements<br />        d.  <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/kinetis-cortex-m-mcus/k-series-performance-m4/k8x-secure/kinetis-k82-150-mhz-hw-cryptographic-co-processor-quadspi-microcontrollers-mcus-based-on-arm-cortex-m4-core:K82_150">NXP LTC</a><br />        e.  Updated STMicro <a href="http://www.st.com/en/microcontrollers/stm32-32-bit-arm-cortex-mcus.html?querycriteria=productId=SC1169">STM32</a> support<br />3.  ECC Improvements:<br />        a.  ECC performance enhancements<br />        b.  ECC Custom Curve support <br />        c.  SECP, Koblitz, and Brainpool curve support<br />4.  Additional PKCS Support:<br />        a.  <a href="https://tools.ietf.org/html/rfc7292">PKCS#12</a> certificate processing<br />        b.  Updated PKCS#7 and <a href="https://tools.ietf.org/html/rfc5652">CMS</a> support<br />5.  Language Bindings:<br />        a.  <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/6/6_Python_Wrapper_for_wolfCrypt.html">Python Wrapper</a><br />        b.  <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2016/4/15_C_Wrapper_for_wolfSSL.html">C# Wrapper</a><br />	1.	 Asynchronous wolfCrypt and TLS Client Support<br />7.  Enhanced DTLS Support:<br />        a.  DTLS over SCTP<br />        b.  DTLS session export<br />8.  wolfSSL SSL/TLS Layer Improvements<br />        a.  <a href="https://tools.ietf.org/html/rfc7627">TLS Extended Master Secret</a><br />        b.  New static memory only build option<br />        c.  Dynamic session tickets<br />        d.  LeanTLS build option<br />        e.  CTX level RNG for single-threaded builds<br />        f.  OCSP improvements<br />        g.  New Cipher Suites<br />                i.  ECDHE-ECDSA-AES128-CCM<br />                ii.  ECDHE-PSK suites<br />                iii.  PSK-CHACHA20-POLY1305 suites<br />        h.  Expanded unit and algorithm testing<br />9.  wolfCrypt Improvements<br />        a.  Support for <a href="http://www.whitewoodencryption.com/net-random-number-generation/">Whitewood netRandom</a> library<br />        b.  Expanded benchmark support<br />        c.  RSA OAEP Padding Support<br />        d.  ChaCha20-Poly1305 Update<br /><br /><b>wolfSSL Porting Progress<br /></b><br />1.  New Operating System Support<br />        a.  <a href="https://riot-os.org/">RIOT</a><br />        b.  <a href="https://github.com/insane-adding-machines/frosted">Frosted</a><br />        c.  <a href="http://www.utasker.com/">uTasker</a><br />        d.  <a href="https://www.segger.com/embos.html">embOS</a><br />2.  Compiler and Framework Support:<br />        a.  Updated <a href="https://www.visualstudio.com/">Visual Studio</a> support<br />        b.  Updated <a href="http://www2.keil.com/mdk5">MDK5</a> projects<br />        c.  <a href="http://www.mingw.org/">MinGW</a> Compatibility Updates<br />        d.  Updated <a href="http://www.nxp.com/products/wireless-connectivity/2.4-ghz-wireless-solutions/ieee-802.15.4-plus-ble/software-development-kit-for-kinetis-mcus:KINETIS-SDK">NXP KSDK</a> support<br />        e.  Updated <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/lpc-cortex-m-mcus/lpc3000-arm9-mpus/lpcxpresso-ide-v8.2.2:LPCXPRESSO?&tid=vanLPCXPRESSO">LPCXpresso</a> example project<br />3.  Board Support:<br />        a.  <a href="http://www.st.com/en/development-tools/stm32cubemx.html">STMicro STM32CubeMX</a> support<br />        b.  Microchip/Atmel <a href="http://www.atmel.com/devices/ATECC508A.aspx">ATECC508A</a> support<br />        c.  <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/kinetis-cortex-m-mcus/k-series-performance-m4/k8x-secure/kinetis-k82-150-mhz-hw-cryptographic-co-processor-quadspi-microcontrollers-mcus-based-on-arm-cortex-m4-core:K82_150">NXP K82</a> support<br />        d.  <a href="https://www.nordicsemi.com/Products/nRF51-Series-SoC">Nordic nRF51</a> support<br />        e.  <a href="https://www.arduino.cc/">Arduino</a> support update and example client<br />4.  Distro and Community Support:<br />        a.  Better OS distro support (--enable-distro)<br />        b.  Updated wolfSSL <a href="https://www.mysql.com/">MySQL</a> Support<br />        c.  Inclusion in <a href="https://launchpad.net/ubuntu/+source/wolfssl">Ubuntu</a>!<br /><br /><b>wolfSSL Events and Tradeshows<br /></b><br />The wolfSSL team participated in a total of 20 events in 2016, including:<br /><br />1.  FOSDEM (Brussels, Belgium)<br />2.  Embedded World (Nuremberg, Germany)<br />3.  RSA USA (San Francisco, CA)<br />4.  ESC Boston (Boston, MA)<br />5.  NXP FTF (Austin, TX)<br />6.  Microchip MASTERS (Phoenix, AZ)<br />7.  IoT Devcon (Santa Clara, CA)<br />8.  Sensors Expo (San Jose, CA)<br />9.  Black Hat (Las Vegas, NV)<br />10.  Intel Developer Forum (San Francisco, CA)<br />11.  ENOVA (Paris, France)<br />12.  ESC Minneapolis (Minneapolis, MN)<br />13.  Sensors Midwest (Rosemont, IL)<br />14.  ST Developers Conference (Santa Clara, CA)<br />15.  IoT Korea (Seoul, South Korea)<br />16.  IoT Japan (Tokyo, Japan)<br />17.  ARM TechCon (Santa Clara, CA)<br />18.  Hackaday Superconference (Pasadena, CA)<br />19.  Embedded Technology Conference (Yokohama, Japan)<br />20.  ICMC (Ottawa, Ontario, Canada)<br /><br />In summary, we had a great year!  2016 was successful for us on multiple fronts, and we look forward to serving our customers and community with ever more secure and functional software in 2017!  As always, your feedback is welcome at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2017-3-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'IoT Pro Japan 2017',
    'post_content' => 'Are you looking for a lightweight and portable SSL/TLS library and a company that offers 24x7 support? Come visit with wolfSSL at the IoT Pro Expo about the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a>.  Held at the Prince Hotels Park Tower in Tokyo, on March 9th and 10th in Japan. wolfSSL will have two of our engineers available,Takashi Kojo and Zen Kishimoto, to answer all of your questions. We look forward to talking with you about securing your devices.<br /><br />If you would like to set up an appointment please email Takashi Kojo at <a href="mailto:kojo@wolfSSL.com">kojo@wolfSSL.com</a> or Zen Kishimoto At <a href="mailto:zen@wolfssl.com">zen@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-3-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at RSA USA 2017',
    'post_content' => 'The first full day of RSA USA 2017 is kicking off in San Francisco, CA at the Moscone Center, as visitors crowd into the expo hall and get ready to attend conference sessions.<br /><br />The wolfSSL team is exhibiting in booth S424, and looking forward to talking with attendees about securing applications and devices!  wolfSSL will also be talking about new features in the last year, including asynchronous crypto support and new hardware crypto support such as Intel QuickAssist (QAT) and Cavium NITROX.<br /><br />Stop by booth S424 to meet the team and learn how wolfSSL can help you today!',
    'post_status' => 'publish',
    'post_date' => date('2017-2-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Internship Info Session: MSU Bozeman',
    'post_content' => 'wolfSSL will be holding an info session this Thursday (02/09/2017) at Montana State University (Bozeman, MT) for students interested in learning more about wolfSSL and what internship opportunities we are offering.  The session will introduce wolfSSL as a company including background information, products, work environment, and more!<br /><br />We encourage any students who is interested in Internet security, SSL/TLS, cryptography, embedded security, or software development to attend.  Pizza will be served!<br /><br /><b><a href="http://calendar.msu.montana.edu/events/15410">wolfSSL Info Session</a></b><b><br /></b>Thursday, February 9, 2017<br />Montana State University, Bozeman<br />Roberts 121, 5:00 - 6:00pm<br /><br />We look forward to seeing you there!  If you have any questions, please reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-2-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => '#FOSDEM #freebeer #wolfSSLatFOSDEM',
    'post_content' => 'Rod Weaver and Chris Conlon of Team wolfSSL will be in Belgium, attending FOSDEM. We will have a stand in the "H" building, stand #5 on Saturday February 4th and Sunday February 5th.  FOSDEM is a free event from 9:00 to 17:00 both days and takes place at the ULB Solbosch Campus in Brussels, Belgium.    <br /><br />During FOSDEM, wolfSSL will be giving away limited edition stickers from the wolfSSL booth. Attendees who return to the wolfSSL booth at the end of the conference hours either Saturday or Sunday, and have a limited edition wolfSSL sticker on one of their devices (laptop, phone, etc), will be eligible to receive a free beer from the wolfSSL team! <br /><br />If you would like more information about the wolfSSL products or to schedule an appointment, please contact Rod directly at +1 206 310 3098 or by email at <a href="mailto:rod@wolfssl.com">rod@wolfssl.com</a>.<br /><br />For more information about FOSDEM, please visit:<br /><a href="https://fosdem.org/2017/">https://fosdem.org/2017/</a><br /><br />Stay up to date with what is happening with wolfSSL, you can follow our blog<br />at <a href="https://wolfssl.com/wolfSSL/Blog/Blog.html">https://wolfssl.com/wolfSSL/Blog/Blog.html</a>. You can also follow us on<br />twitter: <a href="https://twitter.com/wolfssl">https://twitter.com/wolfssl</a>.<br /><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2017-1-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL RIOT OS Examples',
    'post_content' => 'wolfSSL is currently collaborating with the “Revolutionary Internet of Things Operating System” (<a href="https://github.com/RIOT-OS/RIOT">RIOT-OS</a>) community to bring security to the embedded IoT devices supported by RIOT OS.<br /><br />wolfSSL has some alpha examples that build and run on the “native” board with plans to add additional platform support on demand. If you would like to see specific device support or speed up this integration effort send us a note <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>!<br /><br /><a href="https://github.com/RIOT-OS/RIOT/pull/6197">https://github.com/RIOT-OS/RIOT/pull/6197</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-1-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL PKCS#12 Parsing',
    'post_content' => 'PKCS12 is commonly used when solving the problem of securely transporting a private key and certificate pair by file. wolfSSL has recently added PKCS12 parsing capabilities to the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> embedded TLS/SSL library giving the ability to securely load a certificate along with its private key from .p12 files.<br /><br />PKCS12 files contain internal storage “containers”, called "SafeBags". Each SafeBag may be individually encrypted and signed. Specific SafeBags are set aside to store certificates, private keys and CRLs however there are additional SafeBags provided to store additional data as required by the user.<br><br />For more information about parsing PKCS12 files using wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-1-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => '#CyberTechIsreal, #Cybersecurity, #wolfSSLatCyberTechIsrael',
    'post_content' => 'Rod Weaver and Chris Conlon of the wolfSSL Team are headed to Israel! On Monday January 30th through Wednesday February 1st they will be exhibiting at CyberTech Israel. CyberTech Israel event hours are Monday from 2pm to 6pm, Tuesday from 11:15am to 6:30pm and Wednesday from 8am to 6pm. The event  takes place at Pavilion 2 of the Tel Aviv convention center in Tel Aviv, Israel.  Come talk crypto with us!    <br /><br />The wolfSSL stand will have information about several of wolfSSL’s open source projects including the wolfSSL lightweight SSL/TLS library, the wolfCrypt cryptography engine and wolfCrypt with FIPS.   Engineers from the wolfSSL team will be on hand to answer developers’ questions first hand.<br /><br />If you or your team are considering integrating wolfSSL or wolfCrypt with a project and would like to set up a time to sit down and talk at CyberTech Israel, please let us know. We can fit you into our schedule while we are in Tel Aviv. We enjoy working with Open Source projects, and offer free support to these projects from our technical staff when working with wolfSSL or wolfCrypt.<br /><br />If you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or contact Rod directly by phone at +1 206 310 3098 or email at <a href="mailto:rod@wolfssl.com">rod@wolfssl.com</a>.<br /><br />For more information about CyberTech Israel, please visit: <a href="https://www.cybertechisrael.com/">https://www.cybertechisrael.com</a><br /><br />Stay up to date with what is happening with wolfSSL, follow our blog at<a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html"> http://www.wolfssl.com/yaSSL/Blog/Blog.html</a> or follow us on twitter <a href="https://twitter.com/wolfSSL">@wolfSSL</a>. <br><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2017-1-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Asynchronous Intel QuickAssist Support',
    'post_content' => '#Crypto #Hardware #Performance<br /><br />We now support the <a href="http://www.intel.com/content/www/us/en/ethernet-products/gigabit-server-adapters/quickassist-adapter-for-servers.html">Intel QuickAssist adapter</a>, which is a low-profile PCIe x8 (Gen 3) card that accelerates crypto operations. Asynchronous hardware acceleration has been added for the following crypto algorithms:<br /><br /> * PKI: RSA public/private (CRT/non-CRT), ECDSA/ECDH, DH<br /> * Cipher: AES CBC/GCM, DES3<br /> * Digest: MD5, SHA, SHA224, SHA256, SHA384, SHA512 and HMAC.<br /><br />Here are our benchmarks using our asynchronous benchmark application running multiple threads with CPU affinity in user space:<br /><br /> * RSA 2048 public: 209,909 ops/sec<br /> * RSA 2048 private: 41,999 ops/sec<br /> * DH  2048 key gen: 112,491 ops/sec<br /> * DH  2048 key agree: 95,129 ops/sec<br /> * ECDHE 256 agree: 55,117 ops/sec<br /> * ECDSA 256 sign: 46,798 ops/sec<br /> * ECDSA 256 verify: 28,917 ops/sec<br /> * AES-CBC Enc: 2,932 MB/s<br /> * AES-CBC Dec: 2,882 MB/s<br /> * AES-GCM: 2,903 MB/s<br /> * 3DES: 1,511 MB/s<br /> * MD5: 2,309 MB/s<br /> * SHA: 5,068 MB/s<br /> * SHA-224: 2,392 MB/s<br /> * SHA-256: 1,275 MB/s<br /> * SHA-384: 2,020 MB/s<br /> * SHA-512: 1,908 MB/s<br /><br />Performed on an Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz, 12GB RAM, with Intel QuickAssist is DH895xCC.<br /><br />Additionally we’ve fully implemented asynchronous TLS client/server support in all <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> PKI, Encrypt/Decrypt, Hashing/HMAC and Certificate Sign/Verify.<br /><br />Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> if you are interested in evaluating these new features.',
    'post_status' => 'publish',
    'post_date' => date('2017-1-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with Intel® SGX',
    'post_content' => 'Intel ® SGX (Software Guard Extensions) allows for additional security and a smaller surface area for attack. One way this is accomplished is by restricting access to portions of memory even from other applications running on the same computer. This additional security is for both code that is being executed and stagnant information with “sealing” data.<br /><br />Do you have a use case where cryptography with Intel’s ® SGX is needed? wolfSSL has a port to use SGX located in the directory wolfssl-root/IDE/WIN-SGX/ and a demo example of creating an Enclave that links with the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> embedded TLS/SSL library here <a href="https://github.com/wolfSSL/wolfssl-examples/tree/master/SGX_example">https://github.com/wolfSSL/wolfssl-examples/tree/master/SGX_example</a> .<br /><br />For more information about Intel SGX see the sites below.<br /><a href="https://en.wikipedia.org/wiki/Software_Guard_Extensions">https://en.wikipedia.org/wiki/Software_Guard_Extensions</a> <br /><a href="https://software.intel.com/en-us/sgx">https://software.intel.com/en-us/sgx</a><br /><a href="https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF">https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF</a><br /><br />If you have a need for an embedded SSL/TLS library with Intel ® SGX contact us today <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-1-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => '#MQTT #TLS #AWSIoT #IOT',
    'post_content' => 'Interested in using AWS IoT with MQTT?<br /><br />We added an Amazon Web Services (AWS) IoT example to our wolfMQTT client in our latest wolfMQTT v0.12 released on 12/20/16.<br /><br />For this example we setup an <a href="https://aws.amazon.com/iot/">AWS IoT</a> endpoint and made it available for testing. AWS uses TLS with a client certificate for authentication. The example is located in /examples/aws/.<br /><br />You can download the latest release from our <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">website</a> or clone on GitHub. For more information please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2017-1-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on Nordic nRF52',
    'post_content' => 'wolfSSL has been ported and tested on a <a href="https://www.nordicsemi.com/Products/nRF52-Series-SoC">Nordic nRF52</a> board. The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> is ideal for IoT projects and excels at fitting onto resource constrained devices. If looking to use a progressive, embedded TLS/SSL library in your IoT projects contact us here at wolfSSL. A special thanks goes out to Michal Lower for some speed ups with curve25519 key agreements/signatures along with wolfSSL macro defines for the Nordic nRF52 port.<br><br>For questions about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-1-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Hardware-Assisted Security for High-Value Information with Intel SGX',
    'post_content' => 'wolfSSL recently added support <a href="https://software.intel.com/en-us/sgx">Intel SGX</a> to the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> lightweight SSL/TLS library.  SGX allows developers to protect code and data from disclosure or modification.  For users interested in learning more about SGX, the following Intel Security Brief provides an overview of how wolfSSL, Numecent, and Bromium have leveraged SGX:<br /><br /><a href="https://software.intel.com/sites/default/files/managed/77/98/IntelSGX-infoQ-SolutionBrief.pdf?utm_source=InfoQ&utm_campaign=InfoQSGXGTM&utm_medium=AssetPDF">Hardware-Assisted Security for High-Value Information</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-1-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OpenSSL Compatibility Layer Expansion',
    'post_content' => 'Tired of using OpenSSL in your projects? wolfSSL has recently expanded to our compatibility layer and we have more functions coming. This compatibility expansion makes it easier for ripping and replacing the TLS library being used. Making it easier to upgrade your project by using the progressive wolfSSL SSL/TLS library. Over 100 OpenSSL compatibility functions were added to wolfSSL in the last couple months and more compatibility functions are to come.<br /><br>For more information about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2017-1-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at CES 2017',
    'post_content' => '<b>Are you attending CES?<br /></b><br />wolfSSL will be attending CES 2017 from Thursday the 5th until Saturday the 7th of January, to visit with customers, prospects and/or those who need a lightweight, portable SSL/TLS solution. <br><br>Our Business Directors, Rod Weaver and Rich Kelm will be making the rounds at the show and would welcome the opportunity to discuss your interest in wolfSSL as well as touch on some of the following topics: <br> <br /><b>2016 wolfSSL Roadmap:<br /></b>wolfMQTT - Secure Firmware Update System<br>Quantum-Safe wolfSSL<br>wolfSSL Max Strength Build <br>wolfCrypt API Reference Now Available<br>wolfCrypt with FIPS certification <br>wolfSSL with Memory Optimized Curve22519 and ED22519<br>Kerberos to Android with wolfCrypt <br>wolfSSL on Intel Galileo<br>wolfSSL in MySQL    <br>wolfSSL with ChaCha20 / Poly1305 AEAD cipher suites<br /><br>If you would like to set up a specific meeting time, please contact Rod Weaver at <a href="mailto:rod@wolfssl.com">rod@wolfssl.com</a> or (206) 310-3098, or contact Rich Kelm at <a href="mailto:rich@wolfssl.com">rich@wolfssl.com</a> or (360) 556-9718.',
    'post_status' => 'publish',
    'post_date' => date('2016-12-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => '#Crypto Christmas with wolfSSL 3.10.0, including #FIPS140',
    'post_content' => 'As a Christmas present to our users, customers, and community, wolfSSL is releasing version 3.10.0 of the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a>.  Version 3.10.0 includes lots of great new features and is now available from our <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page</a>.<br /><br />Features included in version 3.10.0 include:<br /><br />- Support for <a href="https://en.wikipedia.org/wiki/SHA-2">SHA-224</a><br />- Support for <a href="https://en.wikipedia.org/wiki/Scrypt">scrypt</a><br />- Build for <a href="https://software.intel.com/en-us/sgx">Intel SGX</a>, located in the IDE/WIN-SGX directory<br />- Fix for ChaCha20-Poly1305 ECDSA certificate type request<br />	-	Enhancements for PKCS#7 with support for ECC EnvelopedData<br />	-	AES <a href="https://en.wikipedia.org/wiki/Key_Wrap">key wrap</a> support<br />- Support for <a href="https://riot-os.org/">RIOT OS</a><br />- Support for parsing <a href="https://en.wikipedia.org/wiki/PKCS_12">PKCS#12</a> files<br />- ECC performance enhancements with custom curves<br />- <a href="https://www.arm.com/products/processors/armv8-architecture.php">ARMv8</a> expansion to AArch32 and performance increases<br />- <a href="http://www.secg.org/sec1-v2.pdf">ANSI-X9.63-KDF</a> support<br />- Port to <a href="http://www.st.com/en/development-tools/stm32cubemx.html">STM32 F2/F4 CubeMX</a><br />- Port to <a href="http://www.atmel.com/devices/ATECC508A.aspx">Atmel ATECC508A </a>board<br />- Removal of fPIE by default when wolfSSL library is compiled<br />- Updated Python wrapper, dropping DES and adding wc_RSASetRNG<br />- Support for <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/kinetis-cortex-m-mcus/k-series-performance-m4/k8x-secure/kinetis-k82-150-mhz-hw-cryptographic-co-processor-quadspi-microcontrollers-mcus-based-on-arm-cortex-m4-core:K82_150">NXP K82</a> hardware acceleration<br />- SCR client and server verify check<br />- New disable RNG option with autoconf<br />- Addition of more tests vectors to test.c for AES-CTR<br />- Updated DTLS session export version number<br />- Updated DTLS support for 64-bit sequence numbers<br />- Fix for memory management with TI and WOLFSSL_SMALL_STACK<br />- Hardening of RSA CRT to be constant time<br />- Fix for an uninitialized warning with IAR compiler<br />- Fix for C# wrapper example IO hang on unexpected connection termination<br /><br />This release of wolfSSL also fixes one low level security vulnerability. The vulnerability reported was a potential cache attack on RSA operations. If using wolfSSL RSA on a server which other users can have access to monitor the cache, then it is recommended to update wolfSSL. Thanks to Andreas Zankl, Johann Heyszl and Georg Sigl at Fraunhofer AISEC for the report.<br /><br />As always, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions, comments, or feedback on the wolfSSL embedded SSL/TLS library.  We wish you a Happy Holidays, and look forward to 2017!',
    'post_status' => 'publish',
    'post_date' => date('2016-12-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on ARMv8 #lemaker',
    'post_content' => 'wolfSSL now supports ARMv8! Significant gains are seen when using the crypto hardware acceleration. wolfSSL is more than 10 times faster with AES and SHA256 operations on a HiKey (LeMaker version) board when using hardware acceleration vs software!!! If building an IoT project requiring fast, secure crypto/TLS with a small memory footprint size, contact wolfSSL at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br /><br />For information about the board used see <a href="http://www.lemaker.org/product-hikey-specification.html">http://www.lemaker.org/product-hikey-specification.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-12-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ESC Silicon Valley 2016',
    'post_content' => '<b>Come join wolfSSL at the Embedded Systems Conference<br /></b> <br />Rich Kelm and David Garske, of the wolfSSL team, will be in San Jose December 6th through December 8th for the Embedded Systems Conference. This event will be held at the San Jose Convention Center in California from 9:00am to 5:00pm Wednesday and Thursday.<br /> <br />If you are attending or planning on attending please stop by our Booth #1426 or schedule an appointment with Rich or David to talk cryptography at the show. You can contact either of them by phone at (425) 245-8247 or by email at <a href="mailto:rich@wolfssl.com">rich@wolfSSL.com</a> or <a href="mailto:david@wolfSSL.com">david@wolfSSL.com</a>.<br /> <br />For more information about ESC Silicon Valley or to purchase tickets you may register at:<br /><a href="https://sanjose.am.ubm.com/2016/registrations/ESC">https://sanjose.am.ubm.com/2016/registrations/ESC</a><br />Enter the code eDirtK84 at checkout for a 30% discount on us.',
    'post_status' => 'publish',
    'post_date' => date('2016-12-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL demo with SensorCorpus at ITpro EXPO 2016',
    'post_content' => 'While recently exhibiting at ITpro EXPO 2016, wolfSSL and our neighboring booth (SensorCorpus) put together a demo using the wolfSSL embedded SSL/TLS library to secure communication between two robots.  The robots were measuring distance using ultrasonic sensors and sending that data back up to the SensorCorpus cloud.<br /><br />Full details of the demo can be found in the article by Nikkei Networks:<br /><a href="http://itpro.nikkeibp.co.jp/atcl/news/16/101803031/101900024/">http://itpro.nikkeibp.co.jp/atcl/news/16/101803031/101900024/</a><br /><br />For information on securing your application or device with wolfSSL or wolfCrypt, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-11-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded Technology 2016',
    'post_content' => '<b>Come join wolfSSL at Embedded Yokohama 2016<br /></b> <br />Rich Kelm and Takashi Kojo of the wolfSSL team will be in Yokohama, Japan at the <a href="http://www.jasa.or.jp/expo/english/">Embedded Technology Conference 2016</a>, November 18-20th. Come stop by our booth number V-05.  If you are looking for a lightweight, portable, C-language-based SSL/TLS library come talk to us.<br /> <br />If you are attending the show please stop by our table and talk to one of our engineers to find out how wolfSSL can work for you.  If you would like to schedule an appointment you may contact us by phone at +1-425-245-8247 or buy email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-11-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SMTP and wolfSSL with STARTTLS',
    'post_content' => '<a href="https://en.wikipedia.org/wiki/Opportunistic_TLS">STARTTLS</a> is a way of protecting email communications from malicious users (insiders or otherwise) by upgrading a plaintext <a href="https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol">SMTP</a> connection to one secured by SSL/TLS.  SMTP using STARTTLS allows encryption of emails in transit between email clients and servers. Without encryption email messages can easily be intercepted and read at any point between the sender and the receiver.<br /> <br />wolfSSL has had multiple inquiries about STARTTLS and how to use <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> for the TLS encryption in this protocol. Due to the volume of inquiries over the past few months, we have added an example of using STARTTLS with wolfSSL to the wolfSSL example client. To try it out download wolfSSL from the <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">wolfSSL download page</a>.<br /><br />Instructions to build and run the examples included with the library can be found at:<br /><br />Linux/Unix:    <a href="https://wolfssl.com/wolfSSL/wolfssl-quickstart.html">https://wolfssl.com/wolfSSL/wolfssl-quickstart.html</a><br />Windows:      <a href="https://wolfssl.com/wolfSSL/Docs-wolfssl-visual-studio.html">https://wolfssl.com/wolfSSL/Docs-wolfssl-visual-studio.html</a><br /><br />Below is a quick example of connecting to GMail’s SMTP server with the wolfSSL example client.  This will open a plaintext communication, use STARTTLS to convert to a SSL/TLS-encrypted channel, then close the connection.<br /> <br />Linux/Unix:    ./examples/client/client -h smtp.gmail.com -p 587 -M smtp -d<br />Windows:       client.exe -h smtp.gmail.com -p 587 -M smtp -d<br /> <br />-h specifies the host server to connect to (smtp.gmail.com)<br />-p specifies the port to connect on (587 for email submission)<br />-M tells the example client to use STARTTLS with protocol (smtp in this case)<br />-d tells the client not to authenticate the peer<br /> ( to do peer authentication you can download Google’s CA and replace -d option with: “-A /path/to/google-CA”)<br /><br />If you have any questions or comments please contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or visit the <a href="https://www.wolfssl.com/forums/">wolfSSL support forums</a>.<br /><br />- The wolfSSL Team',
    'post_status' => 'publish',
    'post_date' => date('2016-11-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Electronica 2016',
    'post_content' => '<b>Come join wolfSSL at Electronica 2016<br /></b> <br />Rod Weaver of the wolfSSL Team, will be in Munich, Germany attending <a href="http://electronica.de/index.html">Electronica 2016</a> on Wednesday November 9th.  This event takes place at the Messe München exhibition center, the ICM Internationales Congress Center München. If you are looking for a lightweight, portable, C-language-based SSL/TLS library then come talk to wolfSSL.<br /> <br />If you would like to schedule an appointment you may contact Rod by phone at +1-206-301-3098 or by email at <a href="mailto:rod@wolfssl.com">rod@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-11-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Happy Halloween from wolfSSL!',
    'post_content' => 'The wolfSSL team would like to wish you a happy Halloween!  We carved some pumpkins to get in the spirit!<br /><br />If you have any questions about securing your applications, devices, or cloud with <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> lightweight SSL/TLS, <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a>, <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a>, or <a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a>, send us an email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-10-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'NXP Hexiwear and wolfSSL',
    'post_content' => '#ARMTechCon - <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> is being ported to the NXP Hexiwear IoT and wearable platform.  Use wolfSSL and Kinetis Design Studio to build secure applications for your wearable device.  Hexiwear is a small form factor, wearable IoT development platform that includes robust connectivity that integrates into the cloud.<br /><br />Learn more about Hexiwear at <a href="http://www.hexiwear.com">http://www.hexiwear.com</a>/, or the <a href="http://www.nxp.com/products/reference-designs/hexiwear-complete-iot-development-solution:HEXIWEAR">NXP Hexiwear webpage</a>.<br /><br />If you`re interested in testing wolfSSL on Hexiwear, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2016-10-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Supports FreeRTOS',
    'post_content' => '#ARMTechCon - Did you know that the wolfSSL embedded SSL library supports <a href="http://www.freertos.org/">FreeRTOS</a> and <a href="https://www.highintegritysystems.com/openrtos/">OpenRTOS</a>, and have also done <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2016/7/8_FIPS_%2B_FreeRTOS_(OpenRTOS).html">several FIPS 140-2 validations on both</a>?  FreeRTOS is a real-time operating system for embedded devices which is designed to be both small and simple.<br /><br />Just like wolfSSL, FreeRTOS is open source, royalty free, and very portable.  To build wolfSSL for FreeRTOS, uncomment the #define for FREERTOS in ./wolfssl/wolfcrypt/settings.h, or add it to your own custom <user_settings.h> header file.<br /><br />You can find a full list of FreeRTOS features on the FreeRTOS/OpenRTOS website.  To learn more about wolfSSL, please visit the wolfSSL <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">product page</a>.  If you have any questions about using wolfSSL with FreeRTOS, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2016-10-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Best Tested SSL/TLS and Crypto for Embedded Devices',
    'post_content' => 'With #ARMTechCon this week, we wanted to let the ARM community know about <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a>, the best tested crypto and SSL/TLS stack available for embedded devices and the IoT!<br /><br />The security of wolfSSL products is always on our mind and holds high importance.  Conducting regular, diligent, and well-planned testing helps maintain <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a>’s robustness and security.  We strive to write and maintain clean, readable, and understandable code.<br /><br />Like the halting problem, we know it is impossible to test every single possible path through the software, but we practice an approach that is focused on lowering risk of failure. In addition to extensive automated testing, we make sure that we specifically test well-known use cases. This post outlines some of our internal testing process.<br /><br />1)  <b>API Unit Testing</b>:  We have unit tests in place that test API functions for correct behavior. This helps maintain library consistency across releases and as the code evolves.  It helps us to deliver a high quality well tested API to our end users with each software release.  API unit tests are run with each “make check” of wolfSSL.<br /><br />2)  <b>Cipher Suite Testing</b>: wolfSSL supports an extensive list of cipher suites, which are all tested with every “make check” using the wolfSSL example client and example server.  Each cipher suite is tested not only in the default configuration, but also in non-blocking mode and with client authentication both turned on/off.<br /><br />3)  <b>Algorithm Testing</b>: The security of our SSL/TLS implementation depends on the correctness and robustness of our underlying cryptography library, wolfCrypt.  We test all algorithms using NIST test vectors in addition to running our CAVP test harness used for our <a href="https://wolfssl.com/wolfSSL/fips.html">FIPS 140-2 validations</a>.  We also test on both big and little endian platforms for portability.<br /><br />4)  <b>Benchmark Testing</b>: We engage in another ever expanding universe of benchmark testing, where we look at sizing, transmission rates, connection speeds, and cryptography performance.  A version of our benchmark suite is included in every download for users to enjoy!<br /><br />5)  <b>Static Analysis</b>: We do static analysis on our entire codebase using not only one, but multiple different static analysis tools.  We currently use <a href="https://scan.coverity.com/">Coverity Scan</a>, <a href="http://clang-analyzer.llvm.org/scan-build.html">clang scan-build</a>, and <a href="http://fbinfer.com/">Facebook infer</a>.  These tools help us to automatically find bugs including ones on low-traffic code paths.<br /><br />6)  <b>Detecting Memory Errors</b>:  We mitigate memory errors by using <a href="http://valgrind.org/">valgrind</a> on a regular and automated basis.  This helps find memory errors including invalid access, use of undefined values, incorrect freeing of dynamic memory, and memory leaks.<br /><br />7)  <b>Interop Testing</b>: We test for interoperability with other Open Source TLS implementations, including <a href="https://www.openssl.org/">OpenSSL</a>, <a href="https://boringssl.googlesource.com/boringssl/">BoringSSL</a>, and <a href="http://www.gnutls.org/">GnuTLS</a>.  This helps us to catch any protocol implementation errors in either wolfSSL or the implementation being tested against.  We also test outside of a closed environment by connecting to servers in the real world running unknown SSL/TLS implementations.<br /><br />8)  <b>Real World Builds</b>: We build with a series of `real` applications, like <a href="https://curl.haxx.se/">cURL</a>, <a href="https://www.gnu.org/software/wget/">wget</a>, <a href="https://en.wikipedia.org/wiki/Point-to-Point_Protocol_daemon">pppd</a>, <a href="http://www.openssh.com/">OpenSSH</a>, <a href="https://www.stunnel.org/index.html">stunnel</a>, <a href="https://www.lighttpd.net/">lighttpd</a>, etc.  For some of our customers with top level support, we build new releases with their application.<br /><br />9)  <b>Compiler Testing</b>: We have users who compile wolfSSL with a variety of different compilers.  As such, we test compiling wolfSSL with many different compilers and toolchains including <a href="https://gcc.gnu.org/">gcc/g++</a>, <a href="http://clang.llvm.org/">clang</a>, <a href="https://software.intel.com/en-us/c-compilers">icc</a>, <a href="https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx">Visual Studio</a>, <a href="http://www.nxp.com/products/software-and-tools/software-development-tools/codewarrior-development-tools:CW_HOME">CodeWarrior</a>, <a href="http://www.nxp.com/products/software-and-tools/run-time-software/kinetis-software-and-tools/ides-for-kinetis-mcus/kinetis-design-studio-integrated-development-environment-ide:KDS_IDE">KDS</a>, <a href="https://www.lpcware.com/lpcxpresso/home">LPCXpresso</a>, <a href="https://www.microchip.com/pagehandler/en_us/devtools/mplabxc/">MPLAB XC</a>, <a href="http://www.ti.com/tool/ccstudio">TI CCS</a>, <a href="http://www.keil.com/">Keil</a>, <a href="https://www.iar.com/iar-embedded-workbench/">IAR</a>, <a href="https://www.cygwin.com/">Cygwin</a>, <a href="http://www.mingw.org/wiki/msys">MinGW</a>, <a href="http://www.rowley.co.uk/arm/">CrossWorks</a>, <a href="https://www.arduino.cc/">Arduino</a>, <a href="http://www.windriver.com/products/development-tools/">Wind River Workbench</a>, and more.<br /><br />10)  <b>Peer Review</b>: More eyes on a codebase reduces bugs that end up in a final product.  Internally, we operate using a “Fork and Pull Request” model.  This means that every commit that makes it into our <a href="https://github.com/wolfssl/wolfssl">master branch</a> has been reviewed and tested by at least two separate engineers.<br /><br />11)  <b>Third Party Testing</b>: Our code is regularly reviewed by university researchers, customer and user security teams, FIPS and certification labs, and our Open Source user base.  This helps put more eyes on our code and product architecture.<br /><br />12)  <b>Fuzz Testing</b>: We test using several different software fuzzers, including an in-memory fuzzer and a network fuzzer.  This bombards the program with invalid, unexpected, and random data that then allows for observing if there is potential memory leaks or logic errors.  This allows us to catch bugs that could turn into potential vulnerabilities if released in a final release.<br /><br />13)  <b>Continuous Integration (CI)</b>: Leveraging <a href="https://jenkins-ci.org/">Jenkins</a>, we run tests on each commit submitted to the wolfSSL code repository.  Tests run on each commit include testing of our FIPS build, numerous build options (customer/user/common), running valgrind, and doing static analysis with scan-build.<br /><br />14)  <b>Nightly Test Cycle</b>: Each night we run extended tests that last longer than the typical ones during the work day.  These are more in-depth than our CI testing and puts results in our engineers’ inboxes each morning.  Some tests included in our nightly cycle include extended build option testing on multiple platforms with multiple compilers, and extended fuzz testing.<br /><br />If you have specific questions about how we test, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.  If you would like us to include your SSL/TLS or crypto implementation in our interop testing, please let us know!  Likewise, if you would like to include wolfSSL in your own test framework, we would be happy to discuss.',
    'post_status' => 'publish',
    'post_date' => date('2016-10-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Reminder to the ARM community about wolfSSL support',
    'post_content' => 'With #ArmTechCon under way, we wanted to remind our users that the @wolfSSL <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">embedded SSL library</a> is integrated into <a href="http://www2.keil.com/mdk5">Keil MDK5</a> as an easy-to-use software pack. In addition to the library itself, several out-of-the-box example projects using wolfSSL are also available. wolfSSL also supports <a href="http://www.keil.com/rl-arm/kernel.asp">Keil RTX</a>!<br /><br />To discuss this more at #ArmTechCon stop by booth #321 and visit with the best ARM security team out there, @wolfSSL!<br /><br />Documentation for wolfSSL with Keil MDK-ARM can be found here: <a href="https://wolfssl.com/wolfSSL/wolfssl-keil-mdk-arm.html">https://wolfssl.com/wolfSSL/wolfssl-keil-mdk-arm.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-10-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on Raspberry Pi',
    'post_content' => '#ARMTechCon - Do you have an ARM-based Raspberry Pi project and are looking for a lightweight SSL library with a low overhead to save memory for your project? Are you looking for something open source? Look no further than <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a>, formerly CyaSSL. You can obtain the source from our <a href="http://github.com/wolfssl/wolfssl">wolfSSL GitHub repository</a>. It builds easily using standard tools included on the Pi. You can even obtain Python wrappers via <i>pip</i>. Thank you and happy hacking!',
    'post_status' => 'publish',
    'post_date' => date('2016-10-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSH on ARM',
    'post_content' => '#ARMTechCon - Do you have a need for an SSH server for your ARM based IoT environment? <a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a> can satisfy that need in any environment that can run wolfSSL. With a light footprint, wolfSSH can give any lightweight platform an SSH server. It can be used to provide a network interface to devices that used to have serial ports. Or could be used to transfer files into and out of an embedded device. Please send us an email if you are interested in wolfSSH for ARM devices!<br /><br />The wolfSSH library is dual-license open-source GPLv3 and commercial.',
    'post_status' => 'publish',
    'post_date' => date('2016-10-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'IoT and MQTT at #ARMTechCon',
    'post_content' => 'MQTT is a lightweight pub/sub messaging protocol designed for space constrained devices and is perfect for the IoT space.<br /><br />Did you know that the Azure IoT Hub and Amazon Web Services (AWS) both provide MQTT endpoints for devices to connect?<br /><br />Due to a lack of good C based MQTT client implementations wolfSSL decided to write one from scratch about a year ago. Now its used by many companies and is available in several SDK’s. The library comes loaded with examples for basic client, firmware update system, Azure IoT Hub and AWS. It works with <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> to provide TLS support for MQTT. Supports a non-blocking implementation, which is useful for bare-metal.<br /><br />The <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a> library is dual license open-source GPLv2 and commercial.<br /><br />The latest sources can be downloaded from GitHub here:<br /><a href="https://github.com/wolfSSL/wolfMQTT">https://github.com/wolfSSL/wolfMQTT</a><br /><br />See us at #ARMTechCon booth 321 (Wednesday 10/26 and Thursday 10/27 - 10:30 AM - 6:30 PM)',
    'post_status' => 'publish',
    'post_date' => date('2016-10-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'GreenHills Integrity Support for wolfSSL',
    'post_content' => '#ARMTechCon - @wolfSSL has partnered with @GreenHillsPR who has ported the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> #embedded TLS library into Integrity RTOS! @GreenHillsPR and @wolfSSL will be exhibiting at #ARMTechCon in Santa Clara, CA. Stop by booth #321 to visit with the wolfSSL Team and discuss any questions!<br /><br />Reference: <a href="https://twitter.com/greenhillspr">https://twitter.com/greenhillspr</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-10-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL CMSIS Pack',
    'post_content' => 'On the topic of #ARMTechCon, <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> is available as a CMSIS pack!  wolfSSL was one of the first libraries available as a <a href="http://www2.keil.com/mdk5">MDK5</a> software pack, which has evolved into <a href="http://www.keil.com/pack/doc/CMSIS/Pack/html/index.html">CMSIS</a>.<br /><br />The wolfSSL ARM MDK5 pack supports CMSIS-RTOS by default, providing both the library and example applications.  The user can choose to use a different OS as well.  Contact us at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a> for more information about using the wolfSSL CMSIS pack today.',
    'post_status' => 'publish',
    'post_date' => date('2016-10-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with CubeMX and HAL Support',
    'post_content' => 'Just in time for the #ARMTechCon 2016, wolfSSL is making hardware accelerated crypto easier than ever on <a href="http://www.st.com/en/microcontrollers/stm32-32-bit-arm-cortex-mcus.html?querycriteria=productId=SC1169">STM32</a> devices. This is being done by integrating wolfCrypt into STM`s Hardware Abstraction Layer (HAL) through <a href="http://www.st.com/en/development-tools/stm32cubemx.html">CubeMX</a>. wolfSSL support for CubeMX with HAL will remove the need to tediously configure hardware acceleration by hand and instead let STM32CubeMX, a graphical software from STM, handle the setup of these features.<br /><br />wolfSSL is currently testing compatibility on STM32F439ZIx and a STM32F437IIHx boards, but with more support coming soon. If you are interested in getting early access to these features and seeing how easily you can benefit from hardware acceleration, contact <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2016-10-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL ARMv8 #ARMTechCon',
    'post_content' => 'The embedded SSL/TLS library <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> has support for <a href="http://www.arm.com/products/processors/armv8-architecture.php">ARMv8</a>. Significant gains are seen when using the crypto hardware acceleration. wolfSSL is <b>more than 10 times faster</b> with AES and SHA256 operations when using hardware acceleration versus our software implementation!!!<br /><br />If you are building an IoT project requiring fast, secure crypto and TLS with a small memory footprint size, contact wolfSSL at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>. If you are attending the ARM TechCon, stop by the wolfSSL booth, #321, at ARM TechCon!',
    'post_status' => 'publish',
    'post_date' => date('2016-10-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and Xilinx',
    'post_content' => '#ARMTechCon - wolfSSL now supports <a href="https://www.xilinx.com/products/silicon-devices/soc.html">Xilinx SoCs</a> and <a href="https://www.xilinx.com/products/silicon-devices/fpga.html">FPGA</a>s. The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> can be used with FPGAs which use the MicroBlaze CPU and/or Zynq and Zynq UltraScale+ SoCs.<br /> <br />For more information contact <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-10-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New NXP Kinetis K8X LP Trusted Crypto (LTC) support for PKI (RSA/ECC)',
    'post_content' => '#ARMTechCon - <a href="http://www.nxp.com/">NXP</a> has a new LP Trusted Crypto (LTC) core which accelerates RSA/ECC PKI in their <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/kinetis-cortex-m-mcus/k-series-performance-m4/k8x-secure:K8X-SCALABLE-SECURE-MCU">Kinetis K8x</a> line.<br /><br />The LTC hardware accelerator improves:<br /> * RSA performance by 12-17X<br /> * ECC performance by 18-23X<br /> * Ed/Curve25519 performance by 2-3X.<br /><br />This adds to the existing MMCAU support which accelerates RNG, AES (CBC, CCM, GCM, CTR), DES/3DES, MD5, SHA, SHA256, SHA384/512 and ChaCha20/Poly1305.<br /><br />The combined LTC/MMCAU hardware acceleration improves performance, reduces power consumption and reduces code size by 40%.<br /><br />Here are the benchmarks on a FRDM-K82F Cortex M4 @ 150MHz:<br /><br /><b>Hardware Accelerated (LTC / MMCAU):<br /></b>RNG      25 kB took 0.026 seconds,    0.939 MB/s<br />AES enc  25 kB took 0.002 seconds,   12.207 MB/s<br />AES dec  25 kB took 0.002 seconds,   12.207 MB/s<br />AES-GCM  25 kB took 0.002 seconds,   12.207 MB/s<br />AES-CTR  25 kB took 0.003 seconds,    8.138 MB/s<br />AES-CCM  25 kB took 0.004 seconds,    6.104 MB/s<br />CHACHA   25 kB took 0.008 seconds,    3.052 MB/s<br />CHA-POLY 25 kB took 0.013 seconds,    1.878 MB/s<br />POLY1305 25 kB took 0.003 seconds,    8.138 MB/s<br />SHA      25 kB took 0.006 seconds,    4.069 MB/s<br />SHA-256  25 kB took 0.009 seconds,    2.713 MB/s<br />SHA-384  25 kB took 0.032 seconds,    0.763 MB/s<br />SHA-512  25 kB took 0.035 seconds,    0.698 MB/s<br />RSA 2048 public          12.000 milliseconds, avg over 1 iterations<br />RSA 2048 private         135.000 milliseconds, avg over 1 iterations<br />ECC  256 key generation  17.400 milliseconds, avg over 5 iterations<br />EC-DHE   key agreement   15.200 milliseconds, avg over 5 iterations<br />EC-DSA   sign   time     20.200 milliseconds, avg over 5 iterations<br />EC-DSA   verify time     33.000 milliseconds, avg over 5 iterations<br />CURVE25519 256 key generation 14.400 milliseconds, avg over 5 iterations<br />CURVE25519 key agreement      14.400 milliseconds, avg over 5 iterations<br />ED25519  key generation  14.800 milliseconds, avg over 5 iterations<br />ED25519  sign   time     16.800 milliseconds, avg over 5 iterations<br />ED25519  verify time     30.400 milliseconds, avg over 5 iterations<br /><br /><b>Software only:<br /></b>RNG      25 kB took 0.179 seconds,    0.136 MB/s<br />AES enc  25 kB took 0.099 seconds,    0.247 MB/s<br />AES dec  25 kB took 0.102 seconds,    0.239 MB/s<br />AES-GCM  25 kB took 1.486 seconds,    0.016 MB/s<br />AES-CTR  25 kB took 0.099 seconds,    0.247 MB/s<br />AES-CCM  25 kB took 0.201 seconds,    0.121 MB/s<br />CHACHA   25 kB took 0.043 seconds,    0.568 MB/s<br />CHA-POLY 25 kB took 0.055 seconds,    0.444 MB/s<br />POLY1305 25 kB took 0.010 seconds,    2.441 MB/s<br />SHA      25 kB took 0.029 seconds,    0.842 MB/s<br />SHA-256  25 kB took 0.079 seconds,    0.309 MB/s<br />SHA-384  25 kB took 0.109 seconds,    0.224 MB/s<br />SHA-512  25 kB took 0.113 seconds,    0.216 MB/s<br />RSA 2048 public          147.000 milliseconds, avg over 1 iterations<br />RSA 2048 private         2363.000 milliseconds, avg over 1 iterations<br />ECC  256 key generation  355.400 milliseconds, avg over 5 iterations<br />EC-DHE   key agreement   352.400 milliseconds, avg over 5 iterations<br />EC-DSA   sign   time     362.400 milliseconds, avg over 5 iterations<br />EC-DSA   verify time     703.400 milliseconds, avg over 5 iterations<br />CURVE25519 256 key generation 66.200 milliseconds, avg over 5 iterations<br />CURVE25519 key agreement      65.400 milliseconds, avg over 5 iterations<br />ED25519  key generation  25.000 milliseconds, avg over 5 iterations<br />ED25519  sign   time     30.400 milliseconds, avg over 5 iterations<br />ED25519  verify time     74.400 milliseconds, avg over 5 iterations<br /><br />The code to support the LTC is currently in PR #597 here, soon to be rolled into the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a>:<br /><a href="https://github.com/wolfSSL/wolfssl/pull/597">https://github.com/wolfSSL/wolfssl/pull/597</a><br /><br />These changes are also included in the KSDK 2.0.<br /><br />See us at ARM TechCon booth #321 (Wednesday 10/26 and Thursday 10/27 - 10:30 AM - 6:30 PM)',
    'post_status' => 'publish',
    'post_date' => date('2016-10-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL + ARM + FIPS',
    'post_content' => '#ARMTechCon - If you have a need for #FIPS on an #embedded ARM device @wolfSSL offers a quick-start solution to get you up and running. @wolfSSL has certified #FIPS 140-2 on multiple ARM devices already! If you’re in town at the ARM TechCon, stop by booth 321 to find out more about this and all the other ARM support provided by @wolfSSL.<br /> <br />We can get you a #CAVP certification or #CMVP #Validation to meet your demand. See our #NIST certification here: <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-all.htm#2425">wolfCrypt FIPS Certificate</a> for already supported #operatingenvironment’s and #algorithms!<br /> <br />Contact us today<br /><a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-10-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ARM TechCon 2016',
    'post_content' => '<b>Come join wolfSSL at ARM TechCon 2016 (#ARMTechCon)<br /></b> <br />The wolfSSL Team will be in the Santa Clara area the last week of October.  The event takes place from October 25th through October 27th at the Santa Clara Convention Center in Santa Clara, California. The Expo hall hours are 10:30am to 6:30pm on Wednesday and Thursday.  If you are looking for a lightweight, portable, C-language-based SSL/TLS library then come talk to us.<br /> <br />Did you know that wolfSSL has support for ARMv8?  Do you know how many other environments wolfSSL supports?  Come talk to one of Engineers at the show. We will be at booth #321.  Find out how wolfSSL can work for you.<br /> <br />If you would like to schedule an appointment you may contact us by phone at +1-425-245-8247 or by email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /> <br />For more information about ARM TechCon or to purchase tickets you may register at:<br /><a href="https://armtechcon.tech.ubm.com/2016/registrations/Attendee">https://armtechcon.tech.ubm.com/2016/registrations/Attendee</a><br /><br />Please use the following code for a 15% discount: SvnzAc82<br />@wolfSSL, @armtechcon, #wolfSSL, #armtechcon',
    'post_status' => 'publish',
    'post_date' => date('2016-10-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Progressive Performance in wolfSSL with Curve25519 and Ed25519',
    'post_content' => 'Are you a fan of speed?  How about new, progressive, and secure algorithms?  If so, you’re in luck!  The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> embedded SSL/TLS library and <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> cryptography library have support for two high-performance algorithms for key agreement (Curve25519) and digital signatures (Ed25519).<br /><br /><b>Curve25519</b> is an elliptic curve which offers 128 bits of security, designed for use with ECDH (Elliptic Curve Diffie-Hellman) key agreement:<br /><br /><a href="https://en.wikipedia.org/wiki/Curve25519">https://en.wikipedia.org/wiki/Curve25519</a><br /><a href="https://cr.yp.to/ecdh.html">https://cr.yp.to/ecdh.html</a><br /><br /><b>Ed25519</b> is a public key signature algorithm using the <a href="https://en.wikipedia.org/wiki/Twisted_Edwards_curve">Twisted Edwards curve</a>.  It offers very fast signature verification, signing, and key generation while maintaining a high level of security:<br /><br /><a href="https://en.wikipedia.org/wiki/EdDSA">https://en.wikipedia.org/wiki/EdDSA</a><br /><a href="https://ed25519.cr.yp.to/">https://ed25519.cr.yp.to/</a><br /><br />For instructions on how you can compile wolfSSL with Curve25519 and Ed25519 support, reference the following post: “<a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2015/6/29_Memory_Optimized_Curve25519_and_Ed25519.html">Memory Optimized Curve25519 and Ed25519</a>”.  And, to hear about how these two algorithms do performance wise, take a look at “<a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2014/9/16_Benchmarks_of_curve25519.html">Benchmarks of curve25519</a>”.<br /><br />If you have any question about support for these algorithms in wolfSSL, please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-10-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'IoT Japan',
    'post_content' => '<b>Come join wolfSSL at IoT Japan 2016<br /></b><br />The wolfSSL Team, will be in Tokyo at <a href="http://expo.nikkeibp.co.jp/iot/2016/exhibition/english/">IoT Japan 2016</a> the 3rd week of October.  The event takes place on October 19th through October 21st at Tokyo Big Sight.  If you are looking for a lightweight, portable, C-language-based SSL/TLS library then come talk to us.<br /> <br />If you are attending the show please stop buy our table and talk to one of our engineers and find out how <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> can work for you.  If you would like to schedule an appointment you may contact us by phone at +1-425-245-8247 or buy email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-10-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL ARMv8 Support',
    'post_content' => 'The embedded SSL/TLS library <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a>, has support for ARMv8. Significant gains are seen when using the crypto hardware acceleration. wolfSSL is more than 10 times faster with AES and SHA256 operations on a HiKey (<a href="http://www.lemaker.org">LeMaker</a> version) board when using hardware acceleration vs software!!! If building an IoT project requiring fast, secure crypto/TLS with a small memory footprint size, contact wolfSSL at the email address <a href="mailto:wolfssl@info.com">wolfssl@info.com</a>. Come stop by the wolfSSL booth at <a href="http://www.armtechcon.com/">ARM TechCon</a>!<br /><br />For information about the board used see <a href="http://www.lemaker.org/product-hikey-specification.html">http://www.lemaker.org/product-hikey-specification.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-10-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Case Study: wolfSSL Secures EiMSIG® Smart Home Alarm System',
    'post_content' => 'The EiMSIG smart home allows users to monitor and control windows, doors, blinds, lighting, heating, and cameras all from the convenience of a smartphone.  Control and monitoring are done through the free EiMSIG® alarms app.  The EiMSIG smart home has been designed to be the logical evolution of the classic alarm, as EiMSIG <a href="https://www.alarmanlage-eimsig.de/smart-home/">explains on their website</a>.<br /><br />Because of wolfSSL’s industry reputation, product information, hardware acceleration support on the PIC32, and small footprint, EiMSIG chose the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> to secure their smart home system.  The full EiMSIG/wolfSSL case study is available from the wolfSSL <a href="perma://BLPageReference/B041BC15-002B-49EB-9993-EE890772EB7E">case studies</a> page.<br /> <br />For questions regarding the use of wolfSSL products in your embedded or IoT devices, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2016-10-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ST Developers Conference 2016',
    'post_content' => '<b>Come join wolfSSL at STDevCon 2016<br /></b> <br />Rich Kelm and David Garske of the wolfSSL Team will be in the Santa Clara area the first week of October displaying at STDevCon.  The event takes place on October 4h at the Santa Clara Convention Center in Santa Clara, California, from 9:00am to 6:00pm.<br /> <br />If you are attending or planning on attending please stop by our booth, #55, or schedule an appointment with one of our engineers to talk cryptography at the show. You can contact us by phone at (425) 245-8247 or by email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /> <br />For more information about STDevCon, or to register visit:<br /><a href="http://www.st.com/content/st_com/en/special-events/developers-conference/register.html">http://www.st.com/content/st_com/en/special-events/developers-conference/register.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-9-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wofSSL Internship Info Session: MSU Bozeman',
    'post_content' => 'wolfSSL will be holding an info session this Monday (10/3/2016) at Montana State University (Bozeman, MT) for students interested in learning more about wolfSSL and what internship opportunities we are offering.  The session will introduce wolfSSL as a company including background information, products, work environment, and more!<br /><br />We encourage any students who is interested in Internet security, SSL/TLS, cryptography, embedded security, or software development to attend.  Pizza will be served!<br /><br /><b><a href="http://calendar.msu.montana.edu/events/15410">wolfSSL Info Session</a></b><b><br /></b>Monday, October 3, 2016<br />Montana State University, Bozeman<br />Roberts 218, 5:00 - 6:00pm<br /><br />We look forward to seeing you there!  If you have any questions, please reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SWEET32 - 3DES disabled by default in wolfSSL 3.9.10',
    'post_content' => 'One of the changes in the recent wolfSSL 3.9.10 release, to mitigate against the SWEET32 attack, is that the 3DES algorithm is now disabled by default when using the Autoconf (./configure) build system.  Non Autoconf users can disable 3DES by defining <b>NO_DES3</b> when compiling wolfSSL.<br /><br />For those not familiar with SWEET32, more information can be found on the attack’s website, listed below.  In summary, SWEET32 is an attack on block cipher algorithms that use a block size of 64 bits:<br /><br /><a href="https://sweet32.info/">https://sweet32.info/</a><br /><br />For more information about the wolfSSL embedded SSL/TLS library, please contact <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Intel SGX and wolfSSL',
    'post_content' => '<a href="https://software.intel.com/en-us/sgx">Intel ® SGX</a> (Software Guard Extensions) allows for additional security and a smaller surface area for attack. One way this is accomplished is by restricting access to portions of memory even from other applications running on the same computer. This additional security is for both code that is being executed and stagnant information with “sealing” data.<br><br />Do you have a use case where cryptography with Intel’s ® SGX is needed? <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> has a port to use SGX under development. A demo version of this port was shown at the IDF conference and demonstrated the low latency for additional security gains that Intel’s ® SGX provides.<br /><br />If you have a need for an embedded SSL/TLS library with Intel ® SGX contact us today <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.9.10 Now Available',
    'post_content' => 'Version 3.9.10 of the <a href="https://www.wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a> embedded SSL/TLS library is <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">now available for download</a>. This release contains bug fixes, new features, and includes fixes for three medium level vulnerabilities.<br /><br />Vulnerabilities fixed by this release include CVE-2016-7440, CVE-2016-7439, and CVE-2016-7438, as explained in this <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2016/9/26_wolfSSL_3.9.10_Vulnerability_Fixes.html">recent wolfSSL blog post</a>. This includes fixes for<br />potential AES, RSA, and ECC side channel leaks that a local user monitoring the same CPU core cache could exploit. VM users, hyper-threading users, and users where potential attackers have access to the CPU cache will need to update if they utilize AES, RSA private keys, or ECC private keys. Thanks to Gorka Irazoqui Apecechea and Xiaofei Guo from Intel Corporation for<br />the report.<br /><br />Other changes and new features in this release are described below.<br /><br /><b>Default Configure Option Changes<br /></b><br /><b>3DES</b> (--enable-des3) is disabled by default.  3DES has been disabled for security after the <a href="https://sweet32.info/">Sweet32</a> attack was announced.<br /><br /><b>ECC Supported Curves Extension</b> (--enable-supportedcurves) is enabled by default.  The ECC Supported Curves Extension, when enabled, broadcasts the ECC curves supported by the client in the Client Hello message.<br /><br /><b>TLS Extended Master Secret</b> (--enable-extended-master) is enabled by default.  The <a href="https://mitls.org/pages/attacks/3SHAKE">3SHAKE attack</a> demonstrated how an active attacker can synchronize two TLS sessions so that they share the same "master_secret".  As per <a href="https://tools.ietf.org/html/rfc7627">RFC 7627</a>, this extension “changes the way the "master_secret" value is computed in a full handshake by including the log of the handshake messages, so that different sessions will, by construction, have different master secrets.”<br /><br /><b>Added checking CA certificate path length, and new test certs<br /></b><br />From <a href="https://tools.ietf.org/html/rfc5280">RFC 5280</a>, “the basic constraints extension identifies whether the subject of the certificate is a CA and the maximum depth of valid certification paths that include this certificate.”  The path length constraint field (pathLenConstraint) specifies the maximum number of non-self-issued intermediate certificates that may follow a given CA certificate in a certificate chain.<br /><br />wolfSSL now checks the path length between an intermediate CA certificate and its signer’s path length, always decodes the path length if present, and saves the path length into the signers list.  The path length is capped at 127 certificates.  New test certificates have been added for this scenario, located under the “./certs/test-pathlen” directory.<br /><br /><b>Fix to DSA pre padding and sanity check on R/S values<br /></b><br />This fix adds pre padding of DSA signature with zeros and adds sanity checks for R/S values during DSA sign operations to make sure they are not zero.<br /><br /><b>Added CTX level RNG for single-threaded builds<br /></b><br />In SINGLE_THREADED mode wolfSSL has a new API, wolfSSL_CTX_new_rng(), that creates an RNG object at the WOLFSSL_CTX level that is shared with each created WOLFSSL session object. This is only allowed in SINGLE_THREADED mode because otherwise locking/blocking would be needed. The benefit to this CTX-level RNG is there is only one RNG object to seed and this also saves 200 bytes or so from each WOLFSSL session. It can be called immediately after wolfSSL_CTX_new(), the example client now uses it in SINGLE_THREADED mode.<br /><br /><b>Intel RDSEED enhancements<br /></b><br />Improvements to Intel <a href="https://en.wikipedia.org/wiki/RdRand">RDSEED</a> include:<br />    + Increase RDSEED retries to 32, still an order of magnitude faster than /dev/urandom<br />    + Increase RDSEED retrieval to 64bits, halving the number of calls<br />    + Allow fallback to /dev/urandom on retry failure<br />    + Allow fallback override (that is hard failure) with FORCE_FAILURE_RDSEED which does not fallback to /dev/urandom<br /><br /><b>ARMv8 hardware acceleration support for AES-CBC/CTR/GCM, SHA-256<br /></b><br />Users running wolfSSL on <a href="http://www.arm.com/products/processors/armv8-architecture.php">ARMv8</a> now have access to increased performance through hardware acceleration integration.  More details can be found in <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2016/9/9_ARMv8_Hardware_Acceleration_with_wolfSSL.html">this blog post</a>, or by emailing us directly.<br /><br /><b>Arduino support updates<br /></b><br />Interested in securing your <a href="https://www.arduino.cc/">Arduino</a>-based project?  Arduino build instructions and build script have been updated to make building wolfSSL for Arduino environments more intuitive.  Arduino build instructions can be found in “./IDE/ARDUINO/README.md” located in the wolfSSL download package.<br /><br /><b>Added the Extended Master Secret TLS extension<br /></b><br />Support for the TLS Extended Master Secret extension has been added to wolfSSL, both at the SSL/TLS and sniffer levels.  This extension is enabled by default and can be disabled through the provided API functions (reference the wolfSSL Manual for API and usage).<br /><br /><b>OCSP fix with issuer key hash, lookup refactor<br /></b><br />This includes two fixes.  The first for the wolfSSL CertManager OCSP lookup where the issuer key hash wasn’t being set correctly and could lead to unknown responses from the lookup.  The second fix addresses the default OCSP lookup callback which previously could get blocked waiting for the server to close the socket.<br /><br /><b>Added support for Frosted OS<br /></b><br />wolfSSL now has support for the Frosted (Free POSIX OS for tiny embedded devices) operating system.  More information about FROSTED can be found in their <a href="https://github.com/insane-adding-machines/frosted">GitHub repository</a>.<br /><br /><b>Added support for DTLS over SCTP<br /></b><br />wolfSSL has added support for DTLS over SCTP (Stream Control Transmission Protocol).  If you are not familiar with SCTP, from <a href="https://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol">Wikipedia</a>, “SCTP provides some of the same service features of both [TCP and UDP]: it is message-oriented like UDP and ensures reliable, in-sequence transport of messages with congestion control like TCP; it differs from these in providing multi-homing and redundant paths to increase resilience and reliability.”<br /><br />wolfSSL has a new configure option to enable DTLS-SCTP support called “--enable-sctp”, and now includes example tools and test applications under the “./examples/sctp” directory.  These include an SCTP Client, Server, and DTLS-SCTP Client and Server.<br /><br /><b>Added support for static memory with wolfCrypt<br /></b><br />wolfCrypt now has the ability to use only static memory with the wc_LoadStaticMemory() function.  The wolfCrypt test and benchmark applications can use this functionality when WOLFSSL_STATIC_MEMORY is defined.<br /><br /><b>Fix to ECC Custom Curve support<br /></b><br />This includes a fix for wc_ecc_set_custom_curve() not setting the index as ECC_CUSTOM_IDX and also includes cleanup of the ECC test cases.<br /><br /><b>Support for asynchronous wolfCrypt RSA and TLS client<br /></b><br />Added asynchronous wolfCrypt RSA, TLS client and Cavium Nitrox V support including asynchronous wolfSSL client support for "DoServerKeyExchange", "SendClientKeyExchange", "SendCertificateVerify" and "DoCertificateVerify". This includes fixes for asynchronous DTLS, a refactor of the event and asynchronous handling for use in wolfCrypt, and a refactor of the async device support so it is hardware agnostic. <br /><br />Added Cavium Nitrox V support (Nitrox tested using SDK v0.2 CNN55XX-SDK with new configure "--with-cavium-v=/dir" option) and Nitrox specific functions have been moved to a new port file called "port/cavium/cavium_nitrox.c".<br /><br />RSA has been refactored to handle async with states including RSA optimization for using dpraw for private key decode. wolfCrypt test and benchmark support for async RSA has been added. Asynchronous mode can now be enabled using "./configure --enable-asynccrypt". If no async hardware is defined then the internal async simulator (WOLFSSL_ASYNC_CRYPT_TEST) is used. Note: Using async mode requires async.c/h files from wolfSSL. If interested in using asynchronous mode please send email to <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br /><b>Added distribution build configure option<br /></b><br />For easier creation of OS and Distribution packages, a new ./configure option has been added called “--enable-distro”.  Package maintainers should now use this option instead of hand picking options themselves for wolfSSL packages.  This will guarantee that ./configure options are enabled/disabled as the wolfSSL engineers recommend.<br /><br /><b>Update the test certificates<br /></b><br />The wolfSSL test certificates have been updated so that they now all have the same expiration date.  Additional DER formatted test certificates, including ECC ones, have been added.<br /><br />Please contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions about new features or fixes made in this release of wolfSSL.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.9.10 Vulnerability Fixes',
    'post_content' => 'wolfSSL release 3.9.10 fixes 3 medium level security vulnerabilities:<br /><br /><b>CVE-2016-7440</b> The C software version of AES Encryption and Decryption in wolfSSL 3.9.8 and earlier uses a T-table based implementation where Table lookups do not properly consider cache-bank access times.  This makes it easier for a local user to discover AES keys by running a crafted application on the same machine as a victim and leveraging cache-bank timing differences.<br /><br /><b>CVE-2016-7439</b> The C software implementation of RSA in wolfSSL 3.9.8 and earlier uses a different variable during squaring depending on the key state and does not properly consider cache bank monitoring.  This makes it easier for a local user to discover RSA keys by running a crafted application on the same CPU core as a victim and leveraging cache-bank hit differences.<br /><br /><b>CVE-2016-7438</b> The C software implementation of ECC in wolfSSL 3.9.8 and earlier uses a different variable during doubling depending on the key state and does not properly consider cache bank monitoring.  This makes it easier for a local user to discover RSA keys by running a crafted application on the same CPU core as a victim and leveraging cache-bank hit differences.<br /><br />VM users, hyper-threading users, and users where potential attackers have access to the CPU cache will need to update if they utilize AES, RSA private keys, or ECC private keys.<br /><br />Thanks to Gorka Irazoqui Apecechea and Xiaofei Guo from Intel Corporation for the reports.<br /><br />If you have a need for an embedded SSL/TLS library or any questions please contact us today at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TPM 2.0 integrated with wolfSSL embedded SSL',
    'post_content' => 'Hi!  We are currently embarking on a mission to support TPM 2.0 with the wolfSSL embedded SSL library.  If you are interested in being an alpha tester, please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Sensors Midwest 2016',
    'post_content' => 'Rod Weaver and David Garske of wolfSSL will be in Rosemont, IL on September 27st and 28th, exhibiting at the Donald E. Stephens Convention Center for Sensors Midwest.  The doors to the Convention Center open on Tuesday the 27st at 9am- 5pm and Wednesday the 28nd 9am to 4pm,  Please come say hello and join us at our booth #914 for a chat about cryptography.<br /> <br />If you would like to set up a specific meeting time, please email Rod Weaver at <a href="mailto:Rod@wolfssl.com">rod@wolfssl.com</a>.<br />To stay up to date with what is happening with wolfSSL, follow our blog at<a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html"> http://www.wolfssl.com/yaSSL/Blog/Blog.html</a><br /> <br />We look forward to seeing you at Sensors Midwest!',
    'post_status' => 'publish',
    'post_date' => date('2016-9-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ESC Minneapolis 2016',
    'post_content' => 'Rod Weaver and Chris Conlon of wolfSSL will be in Minneapolis, MN on September 21st and 22nd, exhibiting at the Embedded Systems Conference.  The doors to the Minneapolis Convention Center open on Wednesday the 21st at 9am- 5pm and Thursday the 22nd 9am to 4pm, with a happy hour in the Engineering Theater on Wednesday from 4:00pm to 5:00pm. Please come join us<br /> <br />If you would like to set up a specific meeting time, please email Rod Weaver at <a href="mailto:Rod@wolfssl.com">rod@wolfssl.com</a>.<br />To stay up to date with what is happening with wolfSSL, follow our blog at<a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html"> http://www.wolfssl.com/yaSSL/Blog/Blog.html</a><br /><br>We look forward to seeing you at ESC Minneapolis!',
    'post_status' => 'publish',
    'post_date' => date('2016-9-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ARMv8 Hardware Acceleration with wolfSSL',
    'post_content' => 'Are you looking to use cryptography on an ARMv8 board? wolfSSL is in the process of optimizing AES and SHA256 operations using ARMv8 hardware acceleration. This gives the embedded TLS/SSL library a large performance boost when enabled and using AES-SHA256 cipher suites. The current development state can be found on our GitHub repository and enabled with “./configure —enable-armasm”.<br /><br />For more information contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-9-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ENOVA Paris',
    'post_content' => '<b>Come join wolfSSL at NXP Technology Days and Smarter World Tour<br /></b> <br />The wolfSSL Team, will be in Paris at the ENOVA show the 2nd week of September.  The event takes place on September 14th and September 15th in the mobile showroom at ENOVA Paris from 9:00am to 6:00pm on Wednesday and 9:00am to 5:00pm on Thursday.  <br /> <br />If you are attending or planning on attending please stop by our table or schedule an appointment with one of our engineers to talk cryptography at the show. You can contact us by phone at (425)245-8247 or by email at info@wolfssl.com.',
    'post_status' => 'publish',
    'post_date' => date('2016-9-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Building wolfSSL using Windows Subsystem for Linux',
    'post_content' => 'Microsoft and Canonical`s new tools <i>Windows Subsystem for Linux and Bash on Ubuntu on Windows</i> brings a familiar bash environment based on the Ubuntu user-space to Windows 10.  This allows developers to use tools available on Linux and other Unix-like systems from within Windows.<br /><br />Before developers can utilize Windows Subsystem for Linux, the feature has to be installed.   <br /><br />1. Open <i>Settings</i><br />2. Click <i>Update & Security </i><br />3. Click <i>For Developers<br /></i>4. Click <i>Developer Mode </i> <br />5. Now open <i>Control Panel </i><br />6. Click <i>Programs and Features<br /></i>7. Click <i>Turn Windows features on or off</i>.<br />8. Find and check <i>Windows Subsystem for Linux (Beta)<br /></i>9. Click OK and follow prompts to finish installation.<br /><br />Now that WSL is installed it is time to install the Ubuntu image.  This is accomplished by launching the Windows Command Prompt and typing "bash.exe".  Follow the prompts to finish the installation.<br /><br />You now have a fully installed Linux image on Windows!  You can launch bash by either running a Windows command prompt and entering the command "bash" or you can find the shortcut "Bash on Ubuntu on Windows" in your start menu.<br /><br />To setup your environment to build wolfSSL you`ll need the following:<br /><br />- make<br />- autoconf<br />- gcc<br /><br />These can be installed with “<i>$ sudo apt-get install make autoconf gcc</i>” in bash.  Finally, the steps to build and install wolfSSL for Linux are:<br /><br />1.  $ ./autogen.sh<br />2.  $ ./configure<br />3.  $ make<br />4.  $ make install<br /><br />This was tested and verified with GCC version 4.8.4 and Linux kernel 3.4.0.  make in our test environment was able to build wolfSSL in 28.415s.<br /><br />Additional references:<br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL Embedded SSL/TLS Library</a><br /><a href="https://blogs.windows.com/buildingapps/2016/07/22/fun-with-the-windows-subsystem-for-linux/">https://blogs.windows.com/buildingapps/2016/07/22/fun-with-the-windows-subsystem-for-linux/</a><br /><a href="https://msdn.microsoft.com/en-us/commandline/wsl/about">https://msdn.microsoft.com/en-us/commandline/wsl/about</a><br /><a href="https://msdn.microsoft.com/en-us/commandline/wsl/install_guide">https://msdn.microsoft.com/en-us/commandline/wsl/install_guide</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-8-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Job Posting: Embedded Systems Software Engineer',
    'post_content' => '<b>wolfSSL</b> is a growing company looking to add a top notch embedded systems software engineer to our organization. We develop, market and sell the leading Open Source embedded SSL/TLS protocol implementation, <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a>. Our users are primarily building devices or applications that need security. Other products include <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> embedded cryptography engine, <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a> client library, and <a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a>.<br /><br />Operating environments of particular interest to us include Embedded Linux and RTOS varieties (VxWorks, QNX, ThreadX, uC/OS, MQX, FreeRTOS, etc). Experience with mobile environments like Android and iOS is a plus.<br /><br />Currently, we are seeking to add a senior level C engineer interested in a fun company with tremendous upside. Backgrounds that are useful to our team include networking, security, and hardware optimizations. Assembly experience is a plus. Experience with encryption software is a plus. RTOS experience is a plus.<br /><br />Location is flexible. For the right candidate, we’re open to this individual working from virtually any location.<br /><br /><b>How To Apply<br /></b><br />To apply or discuss, please send your resume and cover letter to <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-8-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Job Posting: wolfSSL Web Developer',
    'post_content' => '<b>wolfSSL</b> is interested in hiring an experienced web developer to redesign and maintain the wolfSSL website. This will be a full time position as an employee of wolfSSL. Responsibilities will include website redesign, development, and maintenance as well as writing and improving product documentation. The website will have both static and dynamic content, including a blog and product download pages.<br /><br />The ideal candidate will have experience with modern web tools and frameworks, experience with web server setup and maintenance, good technical writing skills, and have a passion for cryptography and security fields.<br /><br /><b>Responsibilities:<br /></b><br />+ Redesign of the wolfSSL website, based on a modern web framework<br />+ Integration of a dynamic blogging platform<br />+ Creation and maintenance of software documentation<br />+ Maintenance, expansion, and optimization of the wolfSSL website and forums<br /><br /><b>Requirements:<br /></b><br />+ Knowledge of HTML, CSS, PHP, and modern web languages<br />+ Familiarity and experience with web and blog frameworks<br />+ Knowledge of web design best practices<br />+ Knowledge of back end database systems, such as MySQL<br />+ Knowledge of SEO and search engine compatibility<br />+ Team player, able to work well either individually or in a group<br />	+	Interest in cryptography and security software<br />	+	Proficient technical writing skills<br /><br /><b>How to Apply:<br /></b><br />If interested in applying, please send your resume to <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.  wolfSSL product and company details can be found online at <a href="http://www.wolfssl.com/">www.wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-8-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Microchip Releases End-to-End Security Solution for IoT Devices Connected to AWS',
    'post_content' => 'Microchip recently released an end-to-end security solution for IoT devices that connects to the Amazon Web Services (AWS).  The kit, AT88CKECC, allows users to easily and securely connect to AWS out of the box.  It includes the ECC508 device which provides secure key generation and storage.<br /><br />Full details and product links can be found in the <a href="https://www.microchip.com/en/pressreleasepage/microchip-releases-industry-first-security-solution-amazon-web-services-cloud">Microchip press release</a>, or on the <a href="http://www.atmel.com/tools/at88ckecc-aws-xstk.aspx">Microchip website</a>.<br /><br />wolfSSL has partnered with Microchip / Atmel to add support for the ATECC508A module in wolfSSL’s embedded SSL/TLS library.  Please visit our <a href="perma://BLPageReference/6DBB1B99-3783-41DB-95E9-D36415423A7D">ATECC508A webpage</a> for complete details and a link to our downloadable package.<br /><br />wolfSSL is happy to help answer any questions you may have about using wolfSSL with Microchip or Atmel platforms.  Please reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> to get in touch.',
    'post_status' => 'publish',
    'post_date' => date('2016-8-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Atmel ATECC508A Integration',
    'post_content' => 'The <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL embedded SSL/TLS library</a> and <a href="https://wolfssl.com/wolfSSL/Products-wolfcrypt.html">wolfCrypt embedded crypto engine</a> have been integrated into the Atmel ATECC508A crypto element, adding support for ECC hardware acceleration and protected private key storage on the ATECC508A.<br /><br /><br />Using wolfSSL, ATECC508A users can benefit from both increased ECC performance and secure key storage, thus hardening their TLS connections.  The wolfCrypt ATECC508A port adds:<br /><br />+ wolfCrypt support for ECC hardware acceleration using the ATECC508A.  The new defines for this port are WOLFSSL_ATMEL and WOLFSSL_ATECC508A<br />+ New PK callback for Pre Master Secret<br /><br />For more info please visit: <a href="https://wolfssl.com/wolfSSL/wolfssl-atmel.html">https://wolfssl.com/wolfSSL/wolfssl-atmel.html</a><br /><br />wolfSSL is dual licensed under both the GPLv2 as well as a standard commercial license.  For licensing information, please see the wolfSSL <a href="https://wolfssl.com/wolfSSL/License.html">License Page</a>, or contact us <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or call us at (425) 245-8247',
    'post_status' => 'publish',
    'post_date' => date('2016-8-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Exhibiting at Microchip MASTERS 2016',
    'post_content' => 'wolfSSL will be attending and exhibiting at the 2016 Microchip Masters conference in Phoenix, AZ next week.  We will be visiting with Microchip users about integrating and leveraging the wolfSSL embedded SSL/TLS library and wolfCrypt cryptography engine to secure PIC32-based applications.<br /><br />wolfSSL has some exiting new products to discuss this year!<br /><br />+ New Cipher Suites<br />+ wolfMQTT Client<br />+ FIPS<br />+ Asynchronous Cryptography with support for Intel Quick Assist and Cavium<br />+ wolfSSL Version 3.9.8. and all of its new features<br /><br />From the conference website, “Celebrating its 20th consecutive year, Microchip’s MASTERs Conference<br>has become the premiere technical training conference for embedded control engineers. The Conference<br />has now expanded to locations in 8 countries and provides training classes at all technical levels.<br />Engineers can choose from classes about Microchip’s products as well as general embedded control topics<br />such as motor control, power supply design, lighting control, communication protocols like USB and<br />TCP/IP, C programming, graphic display technologies, touch sense methods and analog system design.<br />Most of these classes are taught by the same application and design engineers who create the products,<br />application notes and demo boards that are used in the classrooms. So come join us for the unique<br />engineer-to-engineer experience that Microchip’s Masters Conference provides.”<br /><br /><b>References:<br /></b><br />Microchip Masters 2016: <a href="https://secure.microchip.com/usmasters/home.aspx">https://secure.microchip.com/usmasters/home.aspx</a><br />Microchip: <a href="http://www.microchip.com/">http://www.microchip.com</a>/<br /><br />If you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at (425) 245-8247. Stay up to date with what is happening with wolfSSL, follow our blog at<a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html"> http://www.wolfssl.com/yaSSL/Blog/Blog.html</a><br><br> We look forward to hearing from you!<br />',
    'post_status' => 'publish',
    'post_date' => date('2016-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL At IDF',
    'post_content' => 'wolfSSL will be at<a href="http://www.intel.com/content/www/us/en/intel-developer-forum-idf/san-francisco/2016/idf-2016-san-francisco-sponsors-and-exhibitors.html"> IDF</a> running a live demo with using Intel® SGX. The demo will show <a href="https://www.wolfssl.com/wolfSSL/benchmarks-wolfssl.html">benchmark</a> values for SHA256, RSA, and AES-GCM with and without using SGX. This is a combination of wolfSSL’s superior IoT library and the progressive Intel® SGX. Come stop by our booth #429 to see the benchmark values and learn more about wolfSSL’s embedded TLS/SSL library. For more information contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br /><br /><a href="http://www.intel.com/content/www/us/en/intel-developer-forum-idf/san-francisco/2016/idf-2016-san-francisco-sponsors-and-exhibitors.html">Intel Developer Forum</a><br /><a href="https://www.wolfssl.com/wolfSSL/benchmarks-wolfssl.html">wolfSSL Benchmarks</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Black Hat USA 2016',
    'post_content' => 'For the fifth year running, wolfSSL is a Black Hat sponsor. Black Hat is held the 1st week in August.  We will have five of our engineering staff on hand to answer all of your deepest technical questions for crypto and SSL/TLS. wolfSSL is displaying at booth 1236. Stop by and check out all our exciting products.<br /><br />Here are some of the topics we will be covering at Black Hat 2016:<br /><br />New Cipher Suites<br />FIPS <br />Asynchronous Cryptography with support for Intel Quick Assist and Cavium<br />wolfSSL Version 3.9.8. and all of its new features<br /><br />If you are planning on attending please stop by, say hello and chat with us about cryptography, SSL/TLS, and hardware encryption. Unlike most exhibitors, we will have our engineering staff on hand to handle your most technical questions. If you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at (425) 245-8247. Stay up to date with what is happening with wolfSSL, follow our blog at<a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html"> http://www.wolfssl.com/yaSSL/Blog/Blog.html</a><br><br>We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2016-8-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Version 3.9.8 is Here!',
    'post_content' => 'wolfSSL’s progressive embedded TLS/SSL library has a new release available for download by our community. This new release contains new features, updates to existing code, and bug fixes. Some of the additional features added to wolfSSL version 3.9.8 are the use of custom ECC curves, support for Brainpool curves, and RSA blinding for private key operations. With the addition of RSA binding comes increased protection against timing attacks for users that have static RSA suites on their server. Static RSA cipher suites are not recommended and are turned off by default with wolfSSL.<br /><br>Some fixes were also made to the IoT wolfSSL library. A few of these fixes were dealing with sanity checks on malformed certificates outside of a TLS connection, revisions to the recent static memory feature, and updated handling of math operations with compressed ECC keys. It is recommended that users update to the most recent wolfSSL release. Users that have server side static RSA cipher suites enabled should update to this version of wolfSSL for RSA blinding, and create new RSA private keys.<br /><br />Here is a full list of highlighted changes for this release of our embedded SSL library.<br /><br />- Add support for custom ECC curves. This allows use of non-standard ECC curves.<br />- Add cipher suite ECDHE-ECDSA-AES128-CCM.<br />- Add compkey enable option. This option is for enabling and disabling compressed ECC keys.<br />- Add in the option to use test.h without gettimeofday function using the macro WOLFSSL_USER_CURRTIME. This makes test.h more portable.<br />- Add RSA blinding for private key operations. Enable option of harden which is on by default. This negates timing attacks.<br />- Add ECC and TLS support for all SECP, Koblitz and Brainpool curves.<br />- Add helper functions for static memory option to allow getting optimum buffer sizes. This calculates the size of the needed buffer to have it completely used with no excess unused memory at the end.<br />- Update wolfSSL for use with MYSQL v5.6.30.<br />- Update LPCXpresso eclipse project to not include misc.c when not needed.<br />- Updates to DTLS 1.2.<br />- Fixes for code in math sections with compressed ECC keys. This includes edge cases for buffer size on allocation and adjustments for compressed curves build.<br />- Fix function argument mismatch for build with secure renegotiation.<br />- X.509 bug fixes for reading in malformed certificates, reported by researchers at Columbia University<br />- Fix GCC version 6 warning about hard tabs in poly1305.c. This was a warning produced by GCC 6 trying to determine the intent of code.<br />- Fixes for static memory option. These fixes include avoiding potential race conditions with<br />counters and decrementing handshake counter in the case of a failed client connection attempt.<br />- Fix for a possible output buffer overrun when using anonymous cipher and Diffie Hellman key exchange on the server side.<br /><br />For more information contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.  Support questions can be directed to <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>.<br /><br />',
    'post_status' => 'publish',
    'post_date' => date('2016-7-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Black Hat USA 2016',
    'post_content' => 'The wolfSSL team will be exhibiting and attending the Black Hat conference in Las Vegas, NV.<br /><br />We’re excited to visit with attendees about securing devices and applications using the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> embedded SSL/TLS library and <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> cryptography engine.  If you’re going to be at the conference, stop by and see us at booth #1236!<br /><br />Black Hat USA 2016: <a href="https://www.blackhat.com/us-16/">https://www.blackhat.com/us-16/</a><br />Briefings Schedule: <a href="https://www.blackhat.com/us-16/briefings/schedule/index.html">https://www.blackhat.com/us-16/briefings/schedule/index.html</a><br /><br />If you you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at (425) 245-8247.',
    'post_status' => 'publish',
    'post_date' => date('2016-7-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Announcing wolfSSH v0.2.0!',
    'post_content' => 'wolfSSL Inc., makers of the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> (formerly CyaSSL) and <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> libraries for embedded applications and the IoT, are proud to announce our new library: <b>wolfSSH</b>. Do you have an embedded device using a serial port for configuration or logging? How would you like a secure tunnel into it to get at the logs and configuration, or even copy new firmware into it? wolfSSH is the solution for you!<br /><br />wolfSSH keeps a small footprint by using the wolfCrypt cryptography library. If you need FIPS 140-2, wolfCrypt has you covered.<br /><br /><a href="perma://BLPageReference/99132613-FF5B-48F1-8368-2082C93D704C">wolfSSH</a> is currently dual licensed. You may <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download</a> from our website and use it for free, so long as you abide by the GPLv3 licensing terms. Commercial licensing terms are also available. Please contact <a href="mailto:sales@wolfssl.com?subject=">our sales team</a> for more information.',
    'post_status' => 'publish',
    'post_date' => date('2016-7-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Updated TLS 1.3 Draft on GitHub',
    'post_content' => 'Hi!  The IETF TLS Working Group released the next draft of the TLS 1.3 protocol specification on July 12th, 2016.  We wanted to update our users with this for those interested in tracking the protocol’s progress with us.<br /><br />The updated specification can be found on GitHub at:<br /><a href="https://tlswg.github.io/tls13-spec/">https://tlswg.github.io/tls13-spec/</a><br /><br />We are eager to implement TLS 1.3 as it gets closer to its final specification!  We think this new protocol iteration will add a lot of improvement!  As such, we`re excited to get going and need user feedback.  Please contact us to let us know what parts of the spec are most important to you.  We will consider adding pieces of TLS 1.3  to our current TLS 1.2 implementation, should users of wolfSSL need them.  Let us know your thoughts at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-7-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'FIPS + FreeRTOS (OpenRTOS)',
    'post_content' => 'wolfSSL Inc has received 3 more FIPS certifications for wolfSSL’s wolfCrypt Implementation on <b>ATMEL’s SAM4L w/ OpenRTOS v9.0.0!!</b> These certificates can be viewed here: <a href="http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.html#3310">SHS (SHA) certificate #3310</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/mac/hmacval.html#2617">HMAC certificate #2617</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html#4012">AES certificate #4012</a>.<br /><br />wolfSSL Inc is in the process of certifying CMAC, AES, SHS, and HMAC on <b>NXP’s LPC43S20 w/ OpenRTOS v8.2.3</b>.  The lab tests have all passed and we are simply awaiting our CAVP certificates to be given a number and publish on the NIST site!<br /><br />wolfSSL has successfully tested FIPS on <b>NXP’s LPC43S37 w/ FreeRTOS v8.0.1</b> and previously wolfSSL received FIPS certifications on <b>STMicro’s STM32F w/ FreeRTOS 7.6</b>: <a href="http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.html#2882">SHS (SHA) certificate #2882</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/mac/hmacval.html#2228">HMAC certificate #2228</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html#3490">AES certificate #3490</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/des/tripledesnewval.html#1966">Triple DES certificate #1966</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/dss/rsanewval.html#1791">RSA certificate #1791</a>, <a href="http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgnewval.html#863">DRBG certificate #863</a><br /><br />If you have a need for FIPS on FreeRTOS/OpenRTOS please do not hesitate to contact us.<br /><br /><a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a><br /><a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><a href="mailto:support@wolfssl.com">support@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-7-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with Keil MDK5 and RTX',
    'post_content' => 'If you are a Keil MDK-ARM user, we’re happy to remind our users that the wolfSSL embedded SSL library is integrated into the Keil MDK5 as an easy-to-use software pack.  <br /><br />This integration means that MDK5 users can easily pull in SSL/TLS support directly to their Keil projects without going out to the web to do a separate download.  In addition to the library itself, several example projects using wolfSSL are also available.<br /><br />As stated by Reinhard Keil, ARM’s Director of MCU Tools, "The Keil and wolfSSL teams have successfully collaborated to fully integrate wolfSSL Embedded SSL into MDK 5. The result is the most seamless tool combination available for developers wishing to secure their device communications with SSL."<br /><br />To read more, the press release can be found here: <a href="http://www.prweb.com/releases/2013/10/prweb11215195.htm">http://www.prweb.com/releases/2013/10/prweb11215195.htm</a>.  We’re excited to hear user feedback and field any questions that may come up.  Let us know what you think at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />wolfSSL also supports Keil RTX.  Keil RTX is a Real-Time Operating System (RTOS) that supports ARM and Cortex-M.  It is a royalty free RTOS designed for embedded systems with deterministic behavior.  Read more about Keil RTX here: <a href="http://www.keil.com/rl-arm/kernel.asp">http://www.keil.com/rl-arm/kernel.asp</a> and <a href="http://www.keil.com/rl-arm/rtx_benefits.asp">http://www.keil.com/rl-arm/rtx_benefits.asp</a><br /><br />Documentation for wolfSSL with Keil MDK-ARM can be found here: <a href="https://wolfssl.com/wolfSSL/wolfssl-keil-mdk-arm.html">https://wolfssl.com/wolfSSL/wolfssl-keil-mdk-arm.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Intel Quick Assist and wolfSSL',
    'post_content' => 'wolfSSL has begun adding support for the Intel Quick Assist 8950 PCIe adapter. By utilizing our new asynchronous support and the quick assist’s cryptography acceleration we should yield performance many times better than what can be achieved in software alone. This adapter retails for about $800 and is capable of 40K RSA 2048-bit operations per second. If you’d like more information please contact <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />Product Brief: <a href="http://www.intel.com/content/dam/www/public/us/en/documents/product-briefs/quickassist-adapter-8950-brief.pdf">http://www.intel.com/content/dam/www/public/us/en/documents/product-briefs/quickassist-adapter-8950-brief.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Upcoming Whitewood Webinar: Three Critical Steps to Maximize Crypto Security',
    'post_content' => 'One of wolfSSL’s partners, Whitewood, is holding a webinar next Tuesday (June 28, 2016) at 12:00pm EST. They will be talking about the importance of random numbers and ways to generate entropy:<br /><br /><b>Three critical steps to maximize crypto security<br /></b>When: June 28, 2016, 12:00pm EST<br />Presenter: Richard Moulds, Vice President, Whitewood<br /><br />If you are interested in attending the webinar, you can register at the following URL:<br /><br /><a href="https://www.brighttalk.com/webcast/13385/212435">https://www.brighttalk.com/webcast/13385/212435</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New FIPS Operating Environments',
    'post_content' => 'wolfSSL fans! Do you like FIPS? Do you like virtual machines? Guess what. wolfSSL`s crypto library, wolfCrypt, has been validated for FIPS 140-2 mode running on three different virtual operating environments. We now have wolfCrypt validated for Microsoft® Windows® 7 running on VMware ESXi™ and SUSE® Linux Enterprise Server running on both VMware ESXi™ and Microsoft® Hyper-V®. If you are interested in getting a FIPS 140-2 approved crypto library running in your virtual operating environment, or any operating environment, please don`t hesitate to send us an email at <a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a>. We look forward to hearing from you.',
    'post_status' => 'publish',
    'post_date' => date('2016-6-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Version 3.9.6 Released!',
    'post_content' => '    Many new additions and updates have been introduced in wolfSSL 3.9.6. For IoT and embedded SSL/TLS there was the addition of embOS and uTasker ports, each of these ports allowing for easily building wolfSSL on the respective environments. Updates were also done to STM32 crypto for using AES-GCM and AES-CCM, and updates were made to the MDK5 projects.<br /><br />    AES-NI saw an update for AES-CBC decrypt with wolfSSL version 3.9.6. This update decrypts 6 or 8 blocks at a time, greatly speeding up decryption times while using AES-NI. Additions that overlap both IoT and desktop platforms were also added like the addition of static memory. Compiling wolfSSL with <b>--enable-staticmemory </b>allows for using no dynamic memory while creating a SSL/TLS connection. This is useful for applications that wish to have a fixed amount of memory ahead of time and want more control over memory management. In addition to using static memory, compiling with <b>--enable-sessionexport</b> allows for serializing and exporting DTLS session information after the handshake is completed - giving the option of performing DTLS handshakes on one device and then sending that connection over to another device to handle throughput.<br /><br />    wolfSSL`s wrapper and OpenSSL compatibility layer were both expanded with the recent release. Version 3.9.6 introduced Python wrappers for crypto operations, allowing for integrating wolfSSL in Python projects. This easy to build wrapper is found in the directory “<i>wolfssl-3.9.6/wrapper/python</i>” along with a set of instructions for building it. Expansion to the OpenSSL compatibility layer was made with the introduction of dynamic session tickets. This makes it even easier for plug and replace when switching to use wolfSSL.<br /><br />    Furthering the progressiveness of wolfSSL, there was the addition of using the <i>netRandom</i> quantum random number generator from Whitewood. Now a quantum resistant cipher suite using NTRU can also be using a quantum random number generator. Making wolfSSL an excellent choice for quantum resistant security.<br /><br />    If looking to gain more speed with SSL/TLS connections operating in parallel to each other, check out the asynchronous operations addition to wolfSSL with this version. This keeps wolfSSL from blocking on SSL/TLS operations, such as RSA for example, in addition to non blocking on socket read/writes. If interested in using the new asynchronous features of wolfSSL please contact <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />    Along with all the additions and updates, some fixes were made to wolfSSL code with release 3.9.6. One fix was some edge case bugs with ECC when using ALT_ECC_SIZE and with key sizes over 256 bits. Additional code and comments on these ECC fixes can be found on our github page with pull requests #411, #416, and #428. The following list shows highlighted feature additions, updates and fixes.<br /><br>Expanded list of release 3.9.6 for wolfSSL including new features and bug fixes:<br /><br />- Add staticmemory feature, for using no dynamic memory allocation with wolfSSL<br />- Add public wc_GetTime API with base64encode feature<br />- Add AES CMAC algorithm, enabled using --enable-cmac<br />- Add DTLS sessionexport feature to serialize and send connection information. This allows for another system to take up the connection after the DTLS handshake has been performed<br />- Add python wolfCrypt wrapper. Located in directory wolfssl-3.9.6/wrapper/python.<br />- Add ECC encrypt/decrypt benchmarks. Can be ran with “./configure --enable-eccencrypt --enable-hkdf && make && ./wolfcrypt/benchmark/benchmark”<br />- Add dynamic session tickets to be used with openSSL compatibility<br />- Add eccshamir to configure.ac giving the option to compile without using ECC_SHAMIR. Can be used with ./configure --disable-eccshamir<br />- Add quantum RNG support with Whitewood netRandom, --with-wnr<br />- Add embOS port. Located in the directory wolfssl-3.9.6/IDE/IAR-EWARM/embOS<br />- Add minimum key size checks for RSA and ECC during TLS connection<br />- Add STARTTLS support to example client with ‘-M’ argument<br />- Add uTasker port. Macro define for uTasker can be found in wolfssl-3.9.6/wolfssl/wolfcrypt/settings.h<br />- Add asynchronous crypto and wolf event support<br />- Add compile check for misc.c with inline, this helps developers working in IDEs to not compile misc.c when not needed<br />- Add RNG benchmark to wolfcrypt/benchmark/benchmark.c<br />- Add reduction to stack usage with hash-based RNG<br />- Update STM32F2_CRYPTO port with additional algorithms supported, AES-GCM and AES-CCM<br />- Update MDK5 projects<br />- Update AES-NI to allow decrypting AES-CBC by 6 and 8 blocks at a time<br />- Fix for STM32 missing wc_ShaUdate return code with STM32F2_HASH defined<br />- Fix for function visibility warnings when building with MinGw<br />- Fix ECC math bugs with ALT_ECC_SIZE and key sizes over 256 bit. Code changes for ECC fix can be found at pull requests #411, #416, and #428<br />- Fix mismatch of certificate buffers to certificate files, github issue #422<br />- Fix decrypt max size with RSA OAEP. Previously in the case that the max message size allowed was being decrypted a bad padding error was returned<br />- Fix DTLS sanity check with DTLS timeout notification<br />- Fix free of WOLFSSL_METHOD on failure to create CTX<br />- Fix potential memory leak in failure case with wc_RsaFunction. Builds using RSA with using normal math and not RSA_LOW_MEM should update<br /><br>Note: the tag v3.9.6w is for a simple port value fix with the echo server on a windows OS. This is with using Visual Studio as a development and testing environment.<br /><br />For more information about any of the items on this list or information in general about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com<br /></a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New Cipher Suite, ECDHE-ECDSA-AES128-CCM',
    'post_content' => 'In the interest of supporting the lightweight cipher suites used in the IoT, wolfSSL has added ECDHE-ECDSA-AES128-CCM. This is an AEAD cipher suite with the perfect forward secrecy that ECDHE provides, using AES128 counter mode to encrypt the data and provide the 16-byte MAC. If there are any new ciphers or cipher suites you would be interested in having support for in the wolfSSL embedded SSL/TLS library, let wolfSSL know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-6-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfMQTT v0.8 (06/13/16)',
    'post_content' => 'We’ve added an <a href="https://azure.microsoft.com/en-us/services/iot-hub/">Azure IoT Hub</a> example to <a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT</a> in the v0.8 release. For this example we setup an Azure cloud server to demonstrate the IoT Hub. This example demonstrates how to connect/authenticate (creation of a SasToken), how to publish events and how to listening for device bound messages.<br /><br /><b>Release Notes:<br /></b>* Fixed stdin capture bug and improved signal (ctrl+c) handling.<br />* Added Azure IoT hub MQTT client example.<br />* Added support for MQX / RTCS.<br />* Added "--disable-tls" and "--disable-examples" configure options.<br />* Added comment about max packet size.<br />* Added example for how to load a client certificate to mqttclient example.<br />* Added return code for firmware and azure examples that are not compiled in due to older / incompatible version of wolfSSL.<br />* Moved the support for custom printf/line endings into the mqtt_types.h for use throughout the project.<br />	*	Updated README.md with information about the examples.<br /><br />If you have any questions about wolfMQTT or the wolfSSL embedded SSL/TLS library, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at NXP FTF 2016 with Embedded Computing Design',
    'post_content' => 'During the NXP FTF 2016 conference in Austin, TX last month, Brandon Lewis from Embedded Computing Design stopped by the wolfSSL booth.  He talked with Chris Conlon about how the wolfSSL embedded SSL/TLS library enables secure communication on embedded, resource-constrained devices.<br /><br />To listen to the interview, follow the link below to Slide 7 of Brandon’s “Floored: NXP FTF 2016” article:<br /><br /><a href="http://embedded-computing.com/28205-floored-nxp-ftf-2016/?slide=7">http://embedded-computing.com/28205-floored-nxp-ftf-2016/?slide=7</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL from the Swift Programming Language',
    'post_content' => 'The <a href="https://developer.apple.com/wwdc/live/#/">Apple Worldwide Developers Conference</a> (WWDC) is currently underway in San Francisco, CA this week.  One of the conference topics, also mentioned in the Keynote, is the <a href="https://developer.apple.com/swift/">Swift</a> programming language.<br /><br />Swift, introduced roughly two years ago, is a programming language for macOS, iOS, watchOS, and tvOS that is gaining popularity with developers.  This year at WWDC, several announcements were made including the introduction of the <a href="https://developer.apple.com/swift/playgrounds/">Swift Playgrounds</a> app for iPad.<br /><br />We would like to ask our user base if there is any interest in a Swift wrapper for the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a>.  wolfSSL currently has language wrappers for <a href="perma://BLPageReference/D0737266-F03A-4E82-9E5D-E89083891FA0">Java</a>, <a href="perma://BLPageReference/9677042D-6590-4167-8F8B-802067DABABF">C#</a>, and <a href="https://wolfssl.github.io/wolfcrypt-py/">Python</a>, and is generally portable across devices and operating systems.  Are you interested in using wolfSSL from Swift?  If so, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!<br /><br /><a href="https://developer.apple.com/wwdc/live/#/">WWDC16</a><br /><a href="https://developer.apple.com/swift/">Swift Programming Language (Apple)</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-6-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with PikeOS and ElinOS',
    'post_content' => 'We were recently reading about PikeOS and ElinOS, embedded operating systems from SYSGO AG and were curious if any wolfSSL users are interested in the wolfSSL embedded SSL/TLS library and wolfCrypt cryptography libraries running on these operating systems.  If you aren’t familiar with these operating systems, here’s a quick summary via Wikipedia:<br /><br /><b><a href="https://en.wikipedia.org/wiki/PikeOS">PikeOS</a></b><b>:<br /></b><br />“PikeOS is a microkernel-based real-time operating system made by SYSGO AG. It is targeted at safety and security critical embedded systems. It provides a partitioned environment for multiple operating systems with different design goals, safety requirements, or security requirements to coexist in a single machine.”<br /><br /><b><a href="https://en.wikipedia.org/wiki/ELinOS">ElinOS</a></b><b>:<br /></b><br />“ELinOS is a commercial development environment for embedded Linux. It consists of a Linux distribution for the target embedded system and development tools for a development host computer. ELinOS provides embedded Linux as a standalone operating system or it can be integrated into the PikeOS virtualization platform if safety and security demands cannot be met by Linux alone.”<br /><br />If you are interested in seeing support in wolfSSL for these OS’s, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2016-6-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Python Wrapper for wolfCrypt',
    'post_content' => 'We are pleased to inform that wolfCrypt has a new wrapper!<br /><br />The wolfCrypt Python Wrapper allows use of the wolfCrypt embedded crypto library in a Python project. This will let users take advantage of the low footprint size of wolfCrypt in IoT projects that use the Python language.<br /><br />Check out the wolfCrypt Documentation (<a href="https://wolfssl.github.io/wolfcrypt-py">https://wolfssl.github.io/wolfcrypt-py</a>) and try it out.<br /><br />For more info about using wolfCrypt with Python, or the wolfSSL embedded SSL/TLS library, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-6-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL + embOS',
    'post_content' => 'wolfSSL has added support for embOS in the wolfCrypt embedded cryptography library. We have example projects in the “<wolfssl_root>/IDE/IAR-EWARM/embOS/” directory which include a library to link against, a benchmark, and wolfcrypt_test that are preconfigured for Atmel’s SAMV71 Xplained Ultra when using IAR Embedded Workbench for ARM (EWARM). These examples are set up to build and run with no user modifications by default (After you download the documented software and have on hand the necessary hardware).<br /><br />The examples will be available in the next stable release of the wolfSSL embedded SSL/TLS library and are currently available in the wolfSSL development branch at: <a href="https://github.com/wolfssl/wolfssl">https://github.com/wolfssl/wolfssl</a><br /> <br />There is a README_custom_port that will assist in creating a project that targets a different MPU as well. As always we are more than willing to help anyone get setup and going so please feel free to contact us <a href="mailto:support@wolfssl.com">support@wolfssl.com</a> if you ever have any questions!',
    'post_status' => 'publish',
    'post_date' => date('2016-5-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Patch for MYSQL 5.6.30',
    'post_content' => 'When using wolfSSL with MYSQL the portability and robustness refined in the IoT realm meets databases. The patch has been updated to MYSQL version 5.6.30 and allows for easy replacement of the bundled TLS/SSL library to a recent version of wolfSSL. Using the patch leverages the progressive, lightweight wolfSSL embedded SSL/TLS library when securing database connections. The patch, along with instructions on how to apply it, can be found on github at this repository <a href="https://github.com/wolfSSL/mysql-patch">https://github.com/wolfSSL/mysql-patch</a>.<br /><br />For more information contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-5-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Whitewood Quantum RNG Support in wolfSSL',
    'post_content' => 'Are you interested in seeding wolfSSL with quantum entropy?  wolfSSL has recently partnered with <a href="http://www.whitewoodencryption.com/">Whitewood Encryption Systems</a> to bring support for the Whitewood netRandom client library to wolfSSL.<br /><br />Whitewood netRandom is a client/server solution for delivery true random numbers.  The netRandom server includes the Whitewood Entropy Engine - a hardware-based high-performance, quantum random number generator.  A netRandom client securely connects to this server to retrieve quantum entropy.  This is beneficial in environments where it is tough or impossible to locally generate good random numbers.  Since the security of a cryptosystem is dependent on true random numbers, this is very important for users of wolfSSL and wolfCrypt.<br /><br />When <a href="https://www.wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a> is compiled with support for the netRandom client library API, wolfSSL’s PRNG will be seeded with quantum random numbers from the netRandom server.  Users can compile wolfSSL with netRandom support by using the following ./configure option or by defining <b>HAVE_WNR</b> when compiling wolfSSL:<br /><br />--with-wnr=PATH      Path to Whitewood netRandom install (default /usr/local)<br /><br />netRandom support adds the following two functions to the wolfSSL API, through the <i><wolfssl/wolfcrypt/random.h></i> header:<br /><br />int wc_InitNetRandom(const char* configFile, wnr_hmac_key hmac_cb, int timeout);<br />int wc_FreeNetRandom(void);<br /><br />An application should call <i>wc_InitNetRandom()</i> once during startup, passing it the netRandom configuration file, optional HMAC callback, and entropy timeout.  <i>wc_FreeNetRandom()</i> should be called upon application shutdown to free the netRandom context.<br /><br />Usage examples can be found in the wolfSSL example applications, located in under the “./examples” directory of the wolfSSL download.  netRandom support is currently available in the <a href="https://github.com/wolfssl/wolfssl">development branch of wolfSSL</a> and will be incorporated into the next stable release as well.<br /><br />For more information about using the wolfSSL embedded SSL/TLS library with the Whitewood netRandom client library, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />References:<br /><a href="http://www.whitewoodencryption.com/">Whitewood Encryption Systems</a><br /><a href="http://www.whitewoodencryption.com/products/net-random-number-generation/">Whitewood netRandom</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-5-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL unaffected by May 3rd, 2016 OpenSSL high severity security fixes',
    'post_content' => 'OpenSSL released a security advisory on May 3rd 2016: <a href="https://www.openssl.org/news/secadv/20160503.txt">https://www.openssl.org/news/secadv/20160503.txt</a>.  Some wolfSSL embedded TLS users are probably wondering if similar security fixes are needed in wolfSSL.  The answer to that is no.  Specifically, CVE-2016-2107 and CVE-2016-2108 are OpenSSL implementation bugs.  Since wolfSSL and CyaSSL embedded SSL libraries have a completely different code base from OpenSSL we do not share these defects. <br /><br />Please contact wolfSSL by email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at 425 245 8247 if you have any security related questions.',
    'post_status' => 'publish',
    'post_date' => date('2016-5-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Webinar: Building Trust and Keeping Secrets in the IoT',
    'post_content' => '<a href="perma://BLPageReference/25AA33A4-DA94-4D66-843C-2655C87DA9D9">wolfSSL</a> and <a href="http://www.whitewoodencryption.com/">Whitewood</a> will be holding a webinar tomorrow, April 20, 2016 to talk about securing the IoT with the wolfSSL embedded SSL/TLS library and Whitewood netRandom.<br /><br /><b>Title: </b>Building Trust and Keeping Secrets in the IoT<br /><b>When: </b>April 20, 10:00am PDT<br /><br /><b>Description:<br /></b>“When devices in the Internet of Things (IoT) handle sensitive data or perform safety critical tasks, it’s essential that they can be trusted. Devices need to be able to store data and communicate confidentially. They need to prove their identity and verify that messages they send and receive have not been tampered with. These critical security capabilities all rely on cryptography – and all cryptography relies on secrets. Whether using encryption, digital IDs or signatures keeping secrets is still only a part of the challenge. Implementing the core crypto algorithms and protocols can be error prone, resource hungry and slow in operation – all of which can impact user confidence and vendor credibility.<br /><br />During this webinar, experts from Whitewood and wolfSSL will highlight the pitfalls and solutions for crypto enabling your IoT security to build trust, minimize risk and accelerate time to market.”<br /><br />If you are interested in watching the webinar, you can register at the following link:<br /><a href="https://www.brighttalk.com/webcast/288/201735">https://www.brighttalk.com/webcast/288/201735</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-4-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Securing uTasker with wolfSSL',
    'post_content' => 'wolfSSL is happy to announce that the wolfSSL embedded SSL/TLS and wolfCrypt cryptography libraries have been ported to the uTasker operating system!<br /><br /><a href="http://www.utasker.com/index.html">uTasker</a> is an operating system, stack, and collection of services designed for embedded devices.  It includes an OS, filesystem, device drivers, and TCP/IP stack among other features.  The uTasker package includes a device simulator, allowing developers to test and debug code faster than would be possible on physical hardware itself.  Complete details on the uTasker stack can be found on the project website: <a href="http://www.utasker.com/">http://www.utasker.com/</a>.<br /><br />wolfSSL has added a new preprocessor define to enable the uTasker port layer called <b>WOLFSSL_UTASKER</b>.  The port currently includes example client and server uTasker tasks which make use of the wolfSSL I/O abstraction layer to send and receive data over a secure SSL/TLS connection using uTasker RAW sockets.  The example tasks have been tested using the uTasker device simulator contained in the “uTasker_M522XX_V1.4-6” distribution.<br /><br />What this means for projects using uTasker is that network connections can now communicate securely over SSL/TLS, using the progressive and lightweight wolfSSL SSL/TLS library.  Applications can also take advantage of the underlying wolfCrypt cryptography library to access crypto operations directly (block ciphers, stream ciphers, AEAD ciphers, hash functions, public key algorithms, and certificate verification routines).<br /><br />The wolfSSL uTasker example client and server task are located in the ‘wolfssl-examples’ GitHub repository, linked below.  Documentation for these examples and on using wolfSSL with uTasker can be found on the wolfSSL website:<br /><br /><a href="https://wolfssl.com/wolfSSL/Docs-wolfssl-utasker.html">Using wolfSSL with uTasker</a><br /><a href="https://github.com/wolfSSL/wolfssl-examples/tree/master/utasker">wolfSSL uTasker Examples</a><br /><br />If you are interested in using wolfSSL on a uTasker-based project, feel free to reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2016-4-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'C# Wrapper for wolfSSL',
    'post_content' => 'wolfSSL has a new C# wrapper, allowing use of the wolfSSL embedded SSL/TLS library in a C# project. This will let users take advantage of the low footprint size of wolfSSL in IoT spaces that use the .NET framework. A Visual Studio project, along with server examples can be found in the directory “<wolfssl_root>/wrapper/CSharp/”.<br /><br />The wolfSSL C# wrapper is included in versions of wolfSSL beginning with 3.8.0.  To download wolfSSL, visit the <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page</a>. More information about the wrapper and documentation can be found at the following links:<br /><br /><a href="perma://BLPageReference/9677042D-6590-4167-8F8B-802067DABABF">wolfSSL C# Wrapper</a><br /><a href="perma://BLPageReference/234E3919-4E13-4ABC-BAC0-DE92CFD9B3CC">wolfSSL C# Manual</a><br /><a href="https://www.wolfssl.com/documentation/wolfSSL-CSharp-API-Reference.pdf">wolfSSL C# API Reference</a><br /><br />For more info about using C# with wolfSSL, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-4-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with ECDHE-PSK Cipher Suites',
    'post_content' => 'The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> embedded SSL/TLS library has added the option for using ECDHE-PSK cipher suites. This opens up using the small memory size ECC keys with PSK on embedded devices.<br /><br />PSK (pre shared keys) is a viable option when controlling both ends of the connection. It allows for saving memory and computation time when performing a TLS handshake. Adding ECDHE gives the cipher suite perfect forward secrecy with using an ephemeral ECC key during the TLS handshake. Previously wolfSSL had DHE-PSK cipher suites but using ECDHE-PSK cipher suites will save even more memory, beneficial in resource-constrained, IoT devices.<br /><br />The ECDHE-PSK cipher suites available to users include:<br /><br />ECDHE-PSK-NULL-SHA256<br />ECDHE-PSK-AES128-CBC-SHA256<br />ECDHE-PSK-CHACHA20-POLY1305',
    'post_status' => 'publish',
    'post_date' => date('2016-4-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL announces wolfCLU (a command line utility)',
    'post_content' => 'wolfSSL has laid the groundwork for a portable command line utility. We wanted our community to be aware so you have the opportunity to begin using it with the wolfSSL embedded SSL/TLS library!<br /> <br />wolfCLU currently has the following features:<br /> <br />	-	Autoconf for portability<br />	-	Encrypt a file and store it locally on your computer<br />	-	Decrypt that file after it has been encrypted, or send it via email to your friend, if he/she knows the password and algorithm used for encryption, they can then decrypt it on their computer<br />	-	Hash a single file (IE a zip archive) for verification<br />	-	Benchmark the currently configured Algorithms<br /> <br />On the wolfCLU to-do-list:<br /> <br />	-	X509 Certificate generation<br />	-	X509 Certificate pem-to-der/der-to-pem<br />	-	FIPS certified build option<br />	-	Integration into wolfSSL distribution<br /><br />Location:<br /><a href="https://github.com/wolfSSL/wolfssl-examples/tree/master/wolfCLU">https://github.com/wolfSSL/wolfssl-examples/tree/master/wolfCLU</a><br /><br />Please head on over and check out the README!<br /><a href="https://github.com/wolfSSL/wolfssl-examples/blob/master/wolfCLU/README.md">https://github.com/wolfSSL/wolfssl-examples/blob/master/wolfCLU/README.md</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-4-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ESC Boston 2016',
    'post_content' => '<b>Are you in the Boston area? Will you be attending ESC?<br /></b><br />wolfSSL will be attending ESC this coming week and in the Boston area from Tuesday the 12th until Thursday the 14th of April, to visit with customers, prospects and/or those who need a lightweight, portable embedded SSL/TLS solution.<br /><br />Our East Account Manager Rich Kelm will be making the rounds at the show. We will also have one of our engineers at the show and both would welcome the opportunity to discuss your interest in wolfSSL as well as touch on some of the following topics:<br /> <br />	-	2016 wolfSSL Roadmap<br />	-	Secure Firmware Update<br />	-	wolfMQTT - Secure Firmware Update System<br />	-	Quantum-Safe wolfSSL<br />	-	wolfSSL Max Strength Build<br />	-	wolfCrypt API Reference Now Available<br />	-	wolfCrypt with FIPS certification<br />	-	wolfSSL with Memory Optimized Curve22519 and Ed22519<br />	-	Kerberos to Andriod with wolfCrypt<br />	-	wolfSSL on Intel Galileo<br />	-	wolfSSL in MySQL    <br />	-	wolfSSL with ChaCha20 / Poly1305 AEAD cipher suites<br /><br />If you you would like to set up a specific meeting time, please contact Rich Kelm at <a href="mailto:rich@wolfssl.com">rich@wolfssl.com</a> or call (360)556-9718.<br />Stay up to date with what is happening with wolfSSL, follow our blog at<a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html"> https://www.wolfssl.com/yaSSL/Blog/Blog.html</a><br /><br />We look forward to hearing from you!',
    'post_status' => 'publish',
    'post_date' => date('2016-4-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with the Atmel Hardware-TLS Platform',
    'post_content' => 'wolfSSL has partnered with Atmel to provide users of the wolfSSL embedded SSL/TLS library the ability to take advantage of the Atmel ATECC508A crypto element.  From the Atmel page:<br /><br />“Due to lack of better alternatives, TLS implementations have historically stored private keys and authentication credentials in software where they are more vulnerable to attack. In addition, the mathematics used for authentication and asymmetric key agreement were also done in software which is less feasible in small IoT devices that have limited code space and processing power.<br /><br />The Atmel Hardware-TLS platform provides an interface between software TLS packages and the ATECC508A cryptographic co-processor. wolfSSL and OpenSSL implementations can now utilize hardware-based secure storage for private keys and authentication data and also allow resource-constrained IoT nodes to implement full elliptic curve authentication and Diffie-Hellman key agreement and session key derivation. With Atmel HW-TLS, TLS communications links can have hardened security even out to the smallest IoT edge node.”<br /><br />Full details can be found on the Atmel website:<br /><a href="http://www.atmel.com/tools/Atmel-HW-TLS.aspx">http://www.atmel.com/tools/Atmel-HW-TLS.aspx</a><br /><br />Contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions or to inquire about using wolfSSL on the Atmel ATECC508A.',
    'post_status' => 'publish',
    'post_date' => date('2016-3-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Version 3.9.0 Released',
    'post_content' => 'A new release of wolfSSL is now available. Version 3.9.0 of the industry leading embedded SSL/TLS library has a number of additions, updates, and fixes. With the addition of ports to both Arduino boards and to the Nordic nRF51 board wolfSSL is adding to its ever increasing IoT use. This release version also has an update to the progressive ChaCha20-Poly1305 cipher suites, allowing for use with PSK and increased interoperability.<br><br>There is no high level, urgent, fixes but we always suggest keeping up to date with the most current version of wolfSSL. By default FP_ECC is turned off, but users who have manually enabled this feature should update to wolfSSL 3.9.0 for the fix of a zero hash bug.<br><br>- Add new leantls configuration<br />- Add RSA OAEP padding at wolfCrypt level<br />- Add Arduino port and example client<br />- Add fixed point DH operation<br />- Add CUSTOM_RAND_GENRATE_SEED_OS and CUSTOM_RAND_GENERATE_BLOCK<br />- Add ECDHE-PSK cipher suites<br />- Add PSK ChaCha20-Poly1305 cipher suites<br />- Add option for fail on no peer cert except PSK suites<br />- Add port for Nordic nRF51<br />- Add additional ECC NIST test vectors for 256, 384 and 521<br />- Add more granular ECC, Ed25519/Curve25519 and AES configs<br />- Update to ChaCha20-Poly1305<br />- Update support for Freescale KSDK 1.3.0<br />- Update DER buffer handling code, refactoring and reducing memory<br />- Fix to AESNI 192 bit key expansion<br />- Fix to C# wrapper character encoding<br />- Fix sequence number issue with DTLS epoch 0 messages<br />- Fix RNGA with K64 build<br />- Fix ASN.1 X509 V3 certificate policy extension parsing<br />- Fix potential free of uninitialized RSA key in asn.c<br />- Fix potential underflow when using ECC build with FP_ECC<br />- Fixes for warnings in Visual Studio 2015 build<br /><br />For more information about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-3-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and CyaSSL are Not Vulnerable to DROWN Attack',
    'post_content' => 'The recently-announced <a href="https://drownattack.com/">DROWN attack</a> allows attackers to decrypt TLS sessions by taking advantage of servers that support SSLv2 and EXPORT cipher suites.  SSL 2.0 was the first version of the SSL/TLS protocol standard released, and has been known to be insecure for many years now.<br /><br />wolfSSL has never supported SSL 2.0 and has never had support for EXPORT grade cipher suites.  As such, users of wolfSSL (formerly CyaSSL) are safe from DROWN.<br /><br />Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> if you have further concerns or questions.<br /><br /><b>References:<br /></b><a href="https://drownattack.com/">DROWN Attack</a><br /><a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0800">CVE-2016-0800</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-3-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Free Early Warning on Breaches',
    'post_content' => 'Hi!  Please email us if you want to join our Free Early Warning list.  We will put you on our list of people to tell when there is a breach or vulnerability.  Email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with the subject Free Early Warning in the subject, and we’ll add you to the list.',
    'post_status' => 'publish',
    'post_date' => date('2016-3-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'RSA USA 2016',
    'post_content' => 'Come join wolfSSL at RSA 2016<br /><br />The wolfSSL Team, will be in the San Francisco area the next week. February 29th - March 4th.  The event takes place from March 1st through March 3rd at the Moscone Center in San Francisco, California from 10:00 am to 6:00pm on Tuesday, and Wednesday and 10:00am to 3:00pm on Thursday.  <br /><br />If you are attending or planning on attending please stop by our table or schedule an appointment with one of our engineers to talk cryptography at the show. You can contact us by phone at (425) 245-8247 or by email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />For more information about the RSA Conference or to purchase tickets you may register at:<br /><a href="http://www.rsaconference.com/events/us16">http://www.rsaconference.com/events/us16</a><br /><br />Please use the following code for a discount: XEWLFSSL16.  This code must used by today, February 26th.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Attending Montana State University’s 11th Annual "Almost" Spring Job & Internship Fair, 2016',
    'post_content' => 'Stop by booth H2 to apply for an internship or career with wolfSSL!<br /><br /><b>When:<br /></b>Thursday, February 25, 2016 from 9:00am to 3:00pm<br /><br /><b>Where:<br /></b>Booth H2 - Montana State University Strand Union Building Sub Ballrooms<br /><br /><b>Description:<br /></b>We are hiring for our software engineering Summer internship program! Interns will be working with our state-of-the-art SSL/TLS and MQTT libraries implemented in a wide range of platforms ranging from embedded and IoT to enterprise security solutions.<br /><br />If you would like to apply, please bring an updated resume and be prepared to have a 5 - 10 minute conversation with a current wolfSSL Software Engineer.<br /><br />If you would like to learn more about other opportunities at wolfSSL and what we do, please stop by our booth or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2016-2-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Embedded World 2016',
    'post_content' => 'wolfSSL is exhibiting this week at <a href="https://www.embedded-world.de/en">Embedded World</a> 2016 in Nürnberg, Germany.  The conference is being held the 23-25 of February at the Nürnberg Exhibition Centre (90471 Nürnberg, Germany).  The wolfSSL booth is located in Hall 5, booth <b>5-246g</b>.  Members of the wolfSSL team are there talking about the wolfSSL embedded SSL/TLS library, wolfCrypt cryptography engine, wolfMQTT, secure firmware updates, and best practices for securing connected devices and applications.<br /><br />wolfSSL also has a booth in the Microchip Village where we are giving a daily presentation on secure connectivity with wolfSSL on Microchip PIC32 platforms.  This presentation is held at 10am each day.<br /><br /><b><a href="https://www.embedded-world.de/en">Embedded World 2016<br /></a></b>Exhibition Centre Nuremberg<br />February 23-25, 2015<br /><br /><b><a href="https://www.embedded-world.de/en/ausstellerprodukte/embwld16/exhibitor-18047254/wolfssl-inc">wolfSSL Booth</a></b>: Hall 5 / 5-246g<br /><br />If you are attending Embedded World, we welcome you to stop by our booth.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Adds Secure SSL/TLS Encryption to MQTT IoT Protocol in Lightweight wolfMQTT Library',
    'post_content' => 'wolfSSL recently published a press released talking about the release of wolfMQTT, and its use with the wolfSSL embedded SSL/TLS library:<br /><br />“3.6 kB MQTT client implementation easily integrates with the wolfSSL embedded SSL library for resource-constrained Internet of Things devices and connected applications.<br /><br />wolfSSL, a leading provider of security and connectivity solutions for the embedded, machine-to-machine (M2M), and Internet of Things (IoT) markets, has announced the release of wolfMQTT, a client implementation of the Message Queuing Telemetry Transport (MQTT) protocol that provides lightweight, portable, and secure publish/subscribe messaging for developers of connected applications. Developed from scratch and written in native C, wolfMQTT has a compiled size of only 3.6 kB and is available for use under commercial or open source (GPLv 2) licenses.<br /><br />By design, MQTT relies solely on the transmission control protocol (TCP) to limit overhead in resource-constrained embedded devices, but offers no provisions for security or encryption. Based on the MQTT v3.1.1 specification and supporting quality of service (QoS) levels 0-2, wolfMQTT provides SSL/TLS (Secure Sockets Layer/Transport Layer Security) encryption through the wolfSSL library, adding as little as 20-30 kB when paired with hardware acceleration to prevent eavesdropping and man-in-the-middle attacks. In addition, techniques like TLS session resumption can further reduce connection costs for sensor devices or other platforms with limited resources.”<br /><br />You can read the entire article <a href="http://www.prweb.com/releases/2016/02/prweb13221670.htm">here</a>.  If you would like more information about running wolfMQTT or wolfSSL in your environment, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><br />Reference: <a href="http://www.prweb.com/releases/2016/02/prweb13221670.htm">http://www.prweb.com/releases/2016/02/prweb13221670.htm</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-2-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Transport-level security tradeoffs using MQTT',
    'post_content' => 'By Todd Ouska, wolfSSL<br /><br />The <a href="http://mqtt.org/">Message Queuing Telemetry Transport</a> protocol, or MQTT, has become a favorite of Internet of Things (IoT) developers, and why not? It’s incredibly lightweight (on the order of a couple Kb for client implementations), has easy-to-use APIs, and is available for free under the Eclipse Public License (EPL). If your connected application is something simple and relatively contained – like remote monitoring the temperature in your living room, for example – that much is probably enough to make you happy.<br /><br />But what if your application is a little more complex? Say you’re combining multiple sensors, an HVAC system, a little intelligence, and MQTT to automatically adjust the climate in your home based on occupancy, and you’ve also configured remote management into the application so you can manually override instances where your dog tripped the infrared proximity sensor (sorry, Spot). Or maybe after some hard work you’re deploying a similar commercial system and need to update a sensor platform’s firmware to provide more precise measurements. So at what point is “enough” good enough? The answer depends on you and your application.<br /><br />MQTT is a publish/subscribe protocol, meaning that would-be “clients” in the traditional networking model can act as both publishers of and subscribers to messages related to particular topics. Messages are distributed using the transmission control protocol (TCP), but rather than being indiscriminately broadcast, clients send messages through a central MQTT broker that accepts messages from a publisher and distributes them to the subscriber(s) to that topic at varying quality of service (QoS) levels.<br /><br />However, in order to keep the protocol as lightweight as possible for resource-constrained IoT edge devices, the MQTT specification offers nothing on top of TCP for security outside of a recommendation that the transport layer security (TLS) protocol be used for applications that require additional levels of authentication. As a result, MQTT communications that rely on TCP alone are unencrypted and susceptible to man-in-the-middle attacks.<br /><br />To illustrate what this means in more detail, let’s go back to our two “complex” examples from earlier. Say a proximity sensing platform publishes a message to the MQTT broker with the topic “home/occupancy.” The MQTT protocol does allow the use of a username and password for client identification, but these are displayed in text if some form of encryption isn’t used. Therefore, an eavesdropper could potentially impersonate a client subscriber and decrypt a message payload, or even imitate a client publisher and issue fake or modified messages. In terms of the personal home application this could signal to prospective thieves that no one is home, and in the commercial deployment scenario has serious implications on processes like remote firmware updates.<br /><br /><b>TLS tradeoffs<br /><br /></b>As mentioned, the MQTT protocol does recommend the use of TLS for more sensitive MQTT implementations, and a network port (port 8883) has even been reserved for this purpose. TLS is the successor of the secure sockets layer (SSL) protocol, and provides an encrypted communication channel over which MQTT messages can be sent. Before the channel is established TLS uses a handshake to pass certificates (or keys) from the publisher to the broker, but also between the broker and subscribers. If successful a secure channel is established, if not, the connection is aborted. Easy enough, right?<br />Well, maybe not. The downside of using TLS, SSL, and other methods of encryption is that they can add significant overhead, which is probably why you chose to use MQTT in the first place. For example, at wolfSSL we recently released an MQTT client library (<a href="https://www.wolfssl.com/wolfSSL/Products-wolfmqtt.html">wolfMQTT</a>) with a compiled size of 3.6 kB. A TLS handshake alone can consume that much, without accounting for the encryption overhead on the individual packets themselves. For certain resource-constrained embedded devices, particularly those based on small microcontrollers, this added workload can simply consume too much in terms of CPU resources.<br /><br />Techniques such as session resumption can compensate for some of the connection costs of TLS, and hardware acceleration is also a method for reducing the size penalty for encryption. Another important consideration is selecting an optimized encryption library when securing system communications, and in the case of wolfMQTT, integrating the lightweight <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a> embedded SSL/TLS library resulted in a compiled size of 20-30 kB when paired with hardware acceleration.<br />In the end, the decision when and how to implement security in your MQTT-based IoT system depends on you and your application. If you decide to move forward with transport-layer encryption, some best practices include working with MQTT libraries that are open source and allow you to look under the hood, but also provide documentation and examples of how encryption could be implemented in your application. If you’re a commercial entity using MQTT, make sure to partner with a vendor that has security credentials and also supports the widest range of operating systems and embedded chipsets possible in order to avoid lock-in. <br /><br />For more, check out our <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2015/11/30_wolfMQTT_v0.3_and_MQTT_Secure_Firmware_Update_Example.html">secure firmware update example</a> written in C that demonstrates encrypted communications to and from an MQTT broker using TLS.<br /><br />Todd Ouska is Co-Founder and CTO of wolfSSL. <br /><br />wolfSSL<br /><a href="http://www.wolfssl.com">www.wolfssl.com</a><br /><a href="https://twitter.com/wolfSSL">@wolfSSL</a><br />LinkedIn: <a href="http://www.linkedin.com/company/461500">www.linkedin.com/company/461500</a> <br />Facebook: <a href="http://www.facebook.com/wolfssl">www.facebook.com/wolfssl</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-2-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Secure Email Client with Freescale KSDK + wolfSSL + FRDM-K64F',
    'post_content' => 'Are you interested in having a secure email client on your Freescale Kinetis device?  How about one that uses wolfSSL too!<br /><br />A member of the Freescale/NXP community (Denis Shimizu) recently adapted the original SMTP protocol implementation that is included with KSDK 1.3 to add in secure connections using the wolfSSL lightweight SSL/TLS library.<br /><br />The example software is currently ported to the FRDM-K64F Kinetis board, but can be implemented on other boards as well.  This demo sends an email using the GMail SMTP server (smtp.gmail.com, port 465) through a secure SSL/TLS channel.<br /><br />For the details and code, please visit the following page on the Freescale/NXP Community website:<br /><a href="https://community.freescale.com/docs/DOC-329650">https://community.freescale.com/docs/DOC-329650</a><br /><br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> has been ported to the Freescale Coldfire and Kinetis processors, and can take advantage of the hardware cryptography offered by the CAU, and mmCAU.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wofSSL Internship Info Session: MSU Bozeman',
    'post_content' => 'wolfSSL will be holding an info session this Tuesday at Montana State University (Bozeman, MT) for students interested in learning more about wolfSSL and what internship opportunities we are offering.  The session will introduce wolfSSL as a company including background information, products, work environment, and more!<br /><br />We encourage any students who is interested in Internet security, SSL/TLS, cryptography, embedded security, or software development to attend.  Pizza will be served!<br /><br /><b><a href="http://calendar.msu.montana.edu/events/15410">wolfSSL Info Session</a></b><b><br /></b>Tuesday, February 16, 2016<br />Montana State University, Bozeman<br />Roberts 102, 5:00 - 6:00pm<br /><br />We look forward to seeing you there!  If you have any questions, please reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Overview of Testing in wolfSSL',
    'post_content' => 'The security of wolfSSL products is always on our mind and holds high importance.  Conducting regular, diligent, and well-planned testing helps maintain <a href="https://wolfssl.com/wolfSSL/Products-wolfssl.html">wolfSSL</a>’s robustness and security.  We strive to write and maintain clean, readable, and understandable code.<br /><br />Like the halting problem, we know it is impossible to test every single possible path through the software, but we practice an approach that is focused on lowering risk of failure. In addition to extensive automated testing, we make sure that we specifically test well-known use cases. This post outlines some of our internal testing process.<br /><br />	1.	<b>API Unit Testing</b>:  We have unit tests in place that test API functions for correct behavior. This helps maintain library consistency across releases and as the code evolves.  It helps us to deliver a high quality well tested API to our end users with each software release.  API unit tests are run with each “make check” of wolfSSL.<br /><br />	1.	<b>Cipher Suite Testing</b>: wolfSSL supports an extensive list of cipher suites, which are all tested with every “make check” using the wolfSSL example client and example server.  Each cipher suite is tested not only in the default configuration, but also in non-blocking mode and with client authentication both turned on/off.<br /><br />	1.	<b>Algorithm Testing</b>: The security of our SSL/TLS implementation depends on the correctness and robustness of our underlying cryptography library, wolfCrypt.  We test all algorithms using NIST test vectors in addition to running our CAVP test harness used for our <a href="https://wolfssl.com/wolfSSL/fips.html">FIPS 140-2 validations</a>.  We also test on both big and little endian platforms for portability.<br /><br />	1.	<b>Benchmark Testing</b>: We engage in another ever expanding universe of benchmark testing, where we look at sizing, transmission rates, connection speeds, and cryptography performance.  A version of our benchmark suite is included in every download for users to enjoy!<br /><br />	1.	<b>Static Analysis</b>: We do static analysis on our entire codebase using not only one, but multiple different static analysis tools.  We currently use <a href="https://scan.coverity.com/">Coverity Scan</a>, <a href="http://clang-analyzer.llvm.org/scan-build.html">clang scan-build</a>, and <a href="http://fbinfer.com/">Facebook infer</a>.  These tools help us to automatically find bugs including ones on low-traffic code paths.<br /><br />	1.	<b>Detecting Memory Errors</b>:  We mitigate memory errors by using <a href="http://valgrind.org/">valgrind</a> on a regular and automated basis.  This helps find memory errors including invalid access, use of undefined values, incorrect freeing of dynamic memory, and memory leaks.<br /><br />	1.	<b>Interop Testing</b>: We test for interoperability with other Open Source TLS implementations, including <a href="https://www.openssl.org/">OpenSSL</a>, <a href="https://boringssl.googlesource.com/boringssl/">BoringSSL</a>, and <a href="http://www.gnutls.org/">GnuTLS</a>.  This helps us to catch any protocol implementation errors in either wolfSSL or the implementation being tested against.  We also test outside of a closed environment by connecting to servers in the real world running unknown SSL/TLS implementations.<br /><br />	1.	<b>Real World Builds</b>: We build with a series of `real` applications, like <a href="https://curl.haxx.se/">cURL</a>, <a href="https://www.gnu.org/software/wget/">wget</a>, <a href="https://en.wikipedia.org/wiki/Point-to-Point_Protocol_daemon">pppd</a>, <a href="http://www.openssh.com/">OpenSSH</a>, <a href="https://www.stunnel.org/index.html">stunnel</a>, <a href="https://www.lighttpd.net/">lighttpd</a>, etc.  For some of our customers with top level support, we build new releases with their application.<br /><br />	1.	<b>Compiler Testing</b>: We have users who compile wolfSSL with a variety of different compilers.  As such, we test compiling wolfSSL with many different compilers and toolchains including <a href="https://gcc.gnu.org/">gcc/g++</a>, <a href="http://clang.llvm.org/">clang</a>, <a href="https://software.intel.com/en-us/c-compilers">icc</a>, <a href="https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx">Visual Studio</a>, <a href="http://www.nxp.com/products/software-and-tools/software-development-tools/codewarrior-development-tools:CW_HOME">CodeWarrior</a>, <a href="http://www.nxp.com/products/software-and-tools/run-time-software/kinetis-software-and-tools/ides-for-kinetis-mcus/kinetis-design-studio-integrated-development-environment-ide:KDS_IDE">KDS</a>, <a href="https://www.lpcware.com/lpcxpresso/home">LPCXpresso</a>, <a href="https://www.microchip.com/pagehandler/en_us/devtools/mplabxc/">MPLAB XC</a>, <a href="http://www.ti.com/tool/ccstudio">TI CCS</a>, <a href="http://www.keil.com/">Keil</a>, <a href="https://www.iar.com/iar-embedded-workbench/">IAR</a>, <a href="https://www.cygwin.com/">Cygwin</a>, <a href="http://www.mingw.org/wiki/msys">MinGW</a>, <a href="http://www.rowley.co.uk/arm/">CrossWorks</a>, <a href="https://www.arduino.cc/">Arduino</a>, <a href="http://www.windriver.com/products/development-tools/">Wind River Workbench</a>, and more.<br /><br />	1.	<b>Peer Review</b>: More eyes on a codebase reduces bugs that end up in a final product.  Internally, we operate using a “Fork and Pull Request” model.  This means that every commit that makes it into our <a href="https://github.com/wolfssl/wolfssl">master branch</a> has been reviewed and tested by at least two separate engineers.<br /><br />	1.	<b>Third Party Testing</b>: Our code is regularly reviewed by university researchers, customer and user security teams, FIPS and certification labs, and our Open Source user base.  This helps put more eyes on our code and product architecture.<br /><br />	1.	<b>Fuzz Testing</b>: We test using several different software fuzzers, including an in-memory fuzzer and a network fuzzer.  This bombards the program with invalid, unexpected, and random data that then allows for observing if there is potential memory leaks or logic errors.  This allows us to catch bugs that could turn into potential vulnerabilities if released in a final release.<br /><br />	1.	<b>Continuous Integration (CI)</b>: Leveraging <a href="https://jenkins-ci.org/">Jenkins</a>, we run tests on each commit submitted to the wolfSSL code repository.  Tests run on each commit include testing of our FIPS build, numerous build options (customer/user/common), running valgrind, and doing static analysis with scan-build.<br /><br />	1.	<b>Nightly Test Cycle</b>: Each night we run extended tests that last longer than the typical ones during the work day.  These are more in-depth than our CI testing and puts results in our engineers’ inboxes each morning.  Some tests included in our nightly cycle include extended build option testing on multiple platforms with multiple compilers, and extended fuzz testing.<br /><br />If you have specific questions about how we test, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.  If you would like us to include your SSL/TLS or crypto implementation in our interop testing, please let us know!  Likewise, if you would like to include wolfSSL in your own test framework, we would be happy to discuss.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2015 Annual Report',
    'post_content' => 'Hello wolfSSL stakeholders!  2015 was another fantastic year of progress for wolfSSL, and as we strive to provide transparency for our customers, users, employees, and open source community, we are again reporting on our progress for the year.  It was a good year!  We accomplished a lot in building towards our goals.  <br /><br />Our goals at the start of 2015 included:<br /><br />	1.	Continued build out of our community of open source users and customers,<br />	2.	Continuous enhancement of our massive test rigs,<br />	3.	Enhancing and extending our FIPS 140-2 support and FIPS user base,<br />	4.	Making wolfSSL even easier to do business with than before,<br />	5.	Maintaining our lightning fast response to fixing bugs,<br />	6.	Extending our support for open source projects like <a href="https://curl.haxx.se/">cURL</a>, <a href="http://www.openssh.com/">OpenSSH</a>, <a href="https://w1.fi/wpa_supplicant/">wpa_supplicant</a>, <a href="http://devkitpro.org/">devkitPro</a>, and others,<br />	7.	Forming new industry partnerships, and extending our existing partnerships, and<br />	8.	Growing and building our engineering team and its capabilities.<br /><br />We are pleased to report that we made dramatic progress on all of these 2015 goals!  We have:<br /><br />	1.	Grown our open source user base and our commercial customer base dramatically, <br />	2.	Doubled the number of tests in our test rigs,<br />	3.	Added a host of new FIPS customers,<br />	4.	Maintained our responsiveness,<br />	5.	Nearly doubled our engineering horsepower.<br /><br />We feel really good about the year, as 2015 sets the stage for further success in 2016.  This year, we plan to continue more of the same, and come into the year with a wealth of confidence that we can do it again!  Our stage is well set as the leading provider of cryptography and embedded SSL/TLS for the emerging IoT and appliance markets.<br /><br />The rest of this note is a more detailed summary of our 2015 progress.  Thank you for your support, and again, never hesitate to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, as we’re here to help.  <br /><br /><b>wolfSSL Technical Progress<br /></b><br />A total of seven <a href="https://wolfssl.com/wolfSSL/Docs-wolfssl-changelog.html">wolfSSL releases</a> were delivered in 2015, each with bug fixes, enhancements, and new feature additions.  Highlights of these releases included:<br /><br />	1.	wolfSSL name change from CyaSSL, including new wolfSSL and wolfCrypt API<br />	2.	<a href="https://wolfssl.com/wolfSSL/fips.html">FIPS validation</a> of the wolfCrypt cryptography module for iOS, Android, Windows, Linux, and FreeRTOS<br />	3.	New algorithms: <a href="https://cr.yp.to/ecdh.html">Curve25519</a>, <a href="http://ed25519.cr.yp.to/">Ed25519</a>, <a href="https://en.wikipedia.org/wiki/International_Data_Encryption_Algorithm">IDEA</a><br />	4.	Enhanced benchmarking with cycle counts and throughput<br />	5.	Reduced memory usage for ECC (heap) and post handshake memory (less than 1kB)<br />	6.	Intel Assembly Enhancements for RNG, SHA-2, and public key algorithms as well as support for AES-NI with AES-GCM<br />	7.	Security fixes: RC4 and SSL 3.0 disabled by default, AEAD ciphers enabled by default, static key cipher suites disabled by default<br />	8.	New “<a href="https://wolfssl.com/wolfSSL/Blog/Entries/2015/7/10_wolfSSL_Max_Strength_Build.html">Max Strength</a>” build with TLS 1.2, AEAD, and Perfect Forward Secrecy<br />	9.	Server side session ticket support<br />	10.	 Support for Texas Instruments hardware cryptography<br />	11.	 DTLS fragmentation, duplicate message, and retransmission fixes<br />	12.	 Addition of <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2015/7/13_Quantum-Safe_wolfSSL.html">QSH</a> (Quantum-Safe Hybrid) handshake extension<br />	13.	 Addition of <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2015/8/10_wolfCrypt_now_Supports_Secure_Remote_Password.html">SRP</a> (Secure Remote Password) support in wolfCrypt<br />	14.	 Support for new Freescale I/O and KSDK updates<br />	15.	 Enhanced certificate generation with support for new extensions and SHA-512 certificate signing request generation<br />	16.	 ALPN extension support added for HTTP/2 connections<br />	17.	 SSL/TLS Sniffer enhancements with addition of AES-GCM, reassembly fixes, additional stats<br />	18.	 Addition of a <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2015/12/2_User_Crypto_Modules.html">pluggable crypto architecture</a> for RSA<br />	19.	 Addition of a single-shot hash and signature/verify API<br />	20.	 New C# wrapper to support wolfSSL use by C# programs<br />	21.	 Addition of OCSP Stapling support<br /><br /><b>wolfSSL Porting Progress<br /></b><br />	1.	Platform support updates: PIC32MZ, TI-RTOS, PowerPC, FreeRTOS, VxWorks, Cavium NITROX<br />	2.	IDE/Compiler support updates: <a href="https://developer.apple.com/xcode/">XCode</a>, Freescale <a href="http://www.nxp.com/products/software-and-tools/software-development-tools/codewarrior-development-tools:CW_HOME">CodeWarrior</a>, Rowley <a href="http://www.rowley.co.uk/arm/">Crossworks</a>, Keil <a href="http://www2.keil.com/mdk5/">MDK5-ARM</a>, NXP <a href="https://www.lpcware.com/lpcxpresso">LPCXpresso</a><br />	3.	Improved support for <a href="http://www.picotcp.com/">PicoTCP</a><br />	4.	<a href="http://www.openssh.com/">OpenSSH</a> compatibility<br />	5.	Updated <a href="https://www.stunnel.org/index.html">stunnel</a> compatibility<br />	6.	Updated <a href="https://www.lighttpd.net/">lighttpd</a> compatibility<br /><br /><b>wolfSSL Events and Tradeshows<br /></b><br />The wolfSSL team participated in a total of 12 events in 2015, including:<br />	1.	FOSDEM (Brussels, Belgium)<br />	2.	Embedded World (Nuremberg, Germany)<br />	3.	RSA USA (San Francisco, CA)<br />	4.	ESC Boston (Boston, MA)<br />	5.	Big Sky DevCon (Bozeman, MT)<br />	6.	Freescale Technology Forum (Austin, TX)<br />	7.	O’Reilly SOLID (San Francisco, CA)<br />	8.	ESC Silicon Valley (Santa Clara, CA)<br />	9.	Black Hat USA (Las Vegas, NV)<br />	10.	 Microchip MASTERS (Phoenix, AZ)<br />	11.	 ESC Minneapolis (Minneapolis, MN)<br />	12.	 ARM TechCon (Santa Clara, CA)<br />	13.	 Embedded Technology (Yokohama, Japan)<br /><br />In summary, we had a great year!  2015 was successful for us on multiple fronts, and we look forward to serving our customers and community with ever more secure and functional software in 2016!  As always, your feedback is welcome at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2016-2-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Embedded World 2016',
    'post_content' => 'wolfSSL will be exhibiting at the 2016 <a href="https://www.embedded-world.de/en">Embedded World</a> conference in Nürnberg, Germany.  The conference will be held the 23-25 of February at the Nürnberg Exhibition Centre (90471 Nürnberg, Germany).  The wolfSSL booth will be located in Hall 5, booth <b>5-246g</b>.  Members of the wolfSSL team will be talking about the wolfSSL embedded SSL/TLS library, wolfCrypt cryptography engine, wolfMQTT, secure firmware updates, and best practices for securing connected devices and applications.<br /><br />wolfSSL will also have a booth in the Microchip Village where we will be giving a daily presentation on secure connectivity with wolfSSL on Microchip PIC32 platforms.<br /><br /><b><a href="https://www.embedded-world.de/en">Embedded World 2016<br /></a></b>Exhibition Centre Nuremberg<br />February 23-25, 2015<br /><br /><b><a href="https://www.embedded-world.de/en/ausstellerprodukte/embwld16/exhibitor-18047254/wolfssl-inc">wolfSSL Booth</a></b>: Hall 5 / 5-246g<br /><br />If you are attending Embedded World, we welcome you to stop by our booth.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Users SAFE from Recent OpenSSL Vulnerabilities (DH Primes, SSLv2)',
    'post_content' => 'OpenSSL recently released patches for two vulnerabilities [1] - one related to how OpenSSL generates Diffie-Hellman prime values and the other that potentially allowed a malicious client to negotiate old SSLv2 ciphers that had been disabled on the server.  Since both of these are OpenSSL implementation vulnerabilities, wolfSSL users are SAFE.<br /><br />For reference, the two OpenSSL vulnerabilities that were patched were:<br /><br />CVE 2016-0701<br />CVE 2015-3197<br /><br />[1] <a href="http://openssl.org/news/secadv/20160128.txt">http://openssl.org/news/secadv/20160128.txt</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-2-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL adds NXP LPCXpresso IDE support and LPC18S37 reference project',
    'post_content' => 'New in wolfSSL v3.8.0 we have added support for NXP’s <a href="https://www.lpcware.com/lpcxpresso">LPCExpresso IDE</a> and a reference project using the LPC18S37 on the <a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-processors/lpc-cortex-m-mcus/lpc-cortex-m3/lpc1800-series/lpcxpresso18s37-development-board:OM13076">OM13076</a> (LPCXpresso18S37) board. The reference project and README.md are located in the repository at:<br /><br /><wolfssl_package>/IDE/LPCXPRESSO<br /><br />Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or <a href="mailto:support@wolfssl.com">support@wolfssl.com</a> with any questions about using the wolfSSL embedded SSL/TLS library with LPCExpresso.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with ChaCha20-Poly1305 Cipher Suites',
    'post_content' => 'We have recently updated our ChaCha20-Poly1305 cipher suites. The ChaCha20-Poly1305 AEAD cipher suites are performant and use low amounts of memory, making it a good fit for IoT devices. This recent update allows for interoperability with the current OpenSSL, GnuTLS, and BoringSSL libraries when using ChaCha20-Poly1305 in a TLS connection and continues interoperability with libraries using the older version of RFCs like LibreSSL and the <a href="http://www.google.com/">www.google.com</a> server. For connection with the older RFC there has been an addition of ChaCha20-Poly1305 cipher suites ending with “-OLD” for example ECDHE-RSA-CHACHA20-POLY1305-OLD.<br><br>This most recent addition to the wolfSSL embedded SSL/TLS library is on our GitHub account located at <a href="https://github.com/wolfSSL/wolfssl">https://github.com/wolfSSL/wolfssl</a> and will be coming to the wolfSSL website <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">https://wolfssl.com/wolfSSL/download/downloadForm.php</a> in our next release, scheduled for the end of February.<br><br>For any questions contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Top Seven Reasons to use the wolfSSL patch in MySQL instead of yaSSL or OpenSSL',
    'post_content' => '1.  You want more robust security.<br /><br />2.  You want to avoid the steady stream of security updates required by using OpenSSL.<br /><br />3.  You are <a href="https://www.youtube.com/watch?v=hkXHsK4AQPs">paranoid</a>, and want to use <a href="https://www.wolfssl.com/wolfSSL/Blog/Entries/2015/7/13_Quantum-Safe_wolfSSL.html">quantum safe crypto</a>.<br /><br />4.  You are performance driven, and want to leverage the latest hardware crypto, or tune in <a href="https://www.wolfssl.com/wolfSSL/Products-wolfcrypt.html">progressive ciphers</a>.<br /><br />5.  You want direct support for the crypto you use in MySQL or MariaDB.<br /><br />6.  You need <a href="https://www.wolfssl.com/wolfSSL/fips.html">FIPS 140-2</a> support for your MySQL install.<br /><br />7.  You want to use <a href="http://cr.yp.to/chacha.html">ChaCha/Poly</a>.<br /><br />You can check out the patch <a href="https://github.com/wolfSSL/mysql-patch">here</a>.  If you have questions or need support, then give us a call at +1 425 245 8247 or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-2-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at FOSDEM 2016',
    'post_content' => 'In a matter of weeks, hundreds of Open Source developers will gather in Brussels, Belgium for FOSDEM 2016.  FOSDEM is a two day event organized by volunteers to promote the widespread use of Open Source software, and is considered by many to be the best open source conference in Europe [1].<br /><br />wolfSSL will be attending FOSDEM this year, will have a stand in the “H” building, and will be giving a talk on <a href="https://fosdem.org/2016/schedule/event/testingcrypto/">Testing Cryptography</a> in the <a href="https://fosdem.org/2016/schedule/track/security/">security devroom</a>.  The wolfSSL stand will have information about several of wolfSSL’s open source projects including the wolfSSL lightweight SSL/TLS library and wolfCrypt cryptography engine.  We’ll also be talking about our recent ports to the <a href="https://www.mysql.com/">MySQL</a>, <a href="https://www.stunnel.org/index.html">stunnel</a>, <a href="http://www.openssh.com/">OpenSSH</a>, and <a href="https://www.lighttpd.net/">lighttpd</a> projects.  Members of the wolfSSL team will be on hand to answer developers’ questions first hand.<br /><br />If you or your team is considering integrating wolfSSL or wolfCrypt with a project and would like to set up a time to sit down and talk at FOSDEM, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> and we can pencil you into our schedule while in Brussels.  We enjoy working with Open Source projects, and offer them free support from our technical staff when working with wolfSSL or wolfCrypt.<br /><br /><b>FOSDEM 2016<br /></b>ULB Solbosch Campus<br />Brussels, Belgium<br />January 30 - 31, 2016<br /><br /><b><a href="https://fosdem.org/2016/schedule/event/testingcrypto/">Testing Cryptography</a></b><b><br /></b>Saturday, 01/30/2016, security devroom (H.1309)<br />17:00 - 17:25<br />Speaker: Chris Conlon<br /><br /><b>wolfSSL Booth</b>: H-5<br /><a href="https://fosdem.org/2016/stands/">https://fosdem.org/2016/stands/</a><br /><br />We look forward to seeing you there!<br /><br />[1] <a href="https://fosdem.org/2016/about/">https://fosdem.org/2016/about/</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-1-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Safe from SLOTH Attack',
    'post_content' => 'A new year, another attack on TLS.  Karthikeyan Bhargavan and Gaetan Leurent of INRIA recently announced the new attack.  TLS 1.2 allows negotiation of the hashing algorithm used for signatures, typically to “upgrade” the hash to a higher security level.  Before TLS 1.2 a combination of MD5 and SHA1 were used for signatures.  TLS 1.2 allows SHA1, SHA-256, SHA-384, SHA-512, but also MD5 to be chosen for signatures.  Fortunately for users of the wolfSSL embedded SSL/TLS library <br />we’ve never supported MD5 based signatures in TLS 1.2.<br /><br />To be clear, wolfSSL is not vulnerable to key strength loss because it does not allow MD5 based signatures for the server or client.  Several implementations are affected by the attack: <a href="http://www.mitls.org/pages/attacks/SLOTH">http://www.mitls.org/pages/attacks/SLOTH</a> .  <br /><br />For any questions about TLS security in wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-1-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'CES Big Story #3:  Internet of Things Hyper Mania Hits Hard Reality - Security',
    'post_content' => 'Everybody with a pulse is excited about the IoT, for all of the right reasons, but the market is starting to recognize the challenges of security.  See the following EE Times article by John Curran of Accenture for a description of the security challenges of IoT:  <a href="http://www.eetimes.com/author.asp?section_id=36&doc_id=1328584&">http://www.eetimes.com/author.asp?section_id=36&doc_id=1328584&</a>.<br /><br />Fortunately, wolfSSL is here to help secure your IoT designs.  We currently have staff at CES, so let us know if you would like to get together at the show by emailing us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-1-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'IoT Security: Start with the Fundamentals',
    'post_content' => 'Securing connected devices, including the IoT, is very important to us at wolfSSL.  Larry Stefonic, CEO and Co-Founder of wolfSSL, recently published a guest post on the Xively blog that talks about the fundamentals of device security.<br /><br />This post includes commentary on securing the connection, device authentication, secure firmware updates, and securing the data on the device.  To read the article in full, visit the link below:<br /><br /><a href="https://blog.xively.com/guest-blog-iot-security-start-with-the-fundamentals-2/">https://blog.xively.com/guest-blog-iot-security-start-with-the-fundamentals-2/</a><br /><br />If you have any questions about using the wolfSSL embedded SSL/TLS library or wolfCrypt cryptography engine to secure your IoT device, you can contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2016-1-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Roadmap for 2016',
    'post_content' => 'Curious about new features and additions to wolfSSL technologies for the coming year?<br /><br />Some items on our current roadmap include:<br />	-	Early TLS 1.3 adoption<br />	-	Non-blocking Crypto support<br />	-	DTLS robustness improvements<br />	-	Curve25519 / Ed25519 integration at the TLS level<br />	-	Increased IoT platforms<br />	-	More resource reduction options<br /><br />In terms of new environments we’ll have:<br />	-	More FIPS platforms<br />	-	Additional hardware acceleration options<br />	-	Easier integration with event programming<br />	-	Data plane development support<br /><br />More Open Source project plugins including:<br />	-	<a href="http://www.haproxy.org/">HAProxy</a><br />	-	<a href="http://www.openssh.com/">OpenSSH</a><br />	-	<a href="http://nginx.org/en/">nginx</a><br /><br />New product offerings will include:<br />	-	wolfSSH<br />	-	wolfSFUS (secure firmware update system)<br />	-	wolfCrypt as a separate library<br />	-	wolfCLU (command line utility)<br />	-	wolfMQTT enhancements<br /><br />We also anticipate offering our testing and security audit programs as services. Keep an eye out for connected home white papers and case studies.<br /><br />Something we missed, or something you would like to see on our roadmap?  Please <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">let us know</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-1-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with devkitPro',
    'post_content' => 'wolfSSL has a port to devkitPro, giving an option to game developers to secure information with the embedded, lightweight, wolfSSL TLS/SSL library. The low memory footprint size of wolfSSL allows for efficient use of security while leaving plenty of room for the game itself. The low memory size of wolfSSL is something that has been perfected in the IoT realm and those benefits that are seen in IoT transfer nicely into the game development realm. We have updated and verified the port to devkitPPC with the most recent <a href="perma://BLPageReference/3488DAC3-2A7C-4F36-AEB3-59579B942808">release of wolfSSL</a>.<br /><br />For more information, or an example of use, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-1-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release Version 3.8.0',
    'post_content' => 'wolfSSL version 3.8.0 has been released and is <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">now available for download</a>. The release has many new feature additions and some minor fixes. One of the new feature additions is that there have been APIs added for single shot hashing, creating a signature, and verifying a signature. This allows users to easily create a hash or signature for single time use by just calling one API. Cutting out the time needed to manage structs for the algorithms used in the process. Another feature added is a C# wrapper to allow using the wolfSSL embedded TLS/SSL library when working with C#.<br><br>A couple of the fixes in release 3.8.0 were for IDEA on 16 and 32-bit systems along with a fix for LowResTimer on Microchip ports. No high level security fixes were needed with this release but we always recommend updating to the latest release version.<br /><br />The full list of changes in this release, taken from the README are listed below:<br /><br />- Example client/server with VxWorks<br />- AES-NI use with AES-GCM<br />- stunnel compatibility enhancements<br />- Single shot hash and signature/verify API added<br />- Update Cavium NITROX port<br />- LPCXpresso IDE support added<br />- C# wrapper to support wolfSSL use by a C# program<br />- (BETA version)OCSP stapling added<br />- Update OpenSSH compatibility<br />- Improve DTLS handshake when retransmitting finished message<br />- fix idea_mult() for 16 and 32bit systems<br />	-	fix LowResTimer on Microchip ports<br /><br />For more information about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2016-1-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Partners with Renesas to Deliver SSL/TLS Based Secure Communications',
    'post_content' => 'wolfSSL Inc, embedded SSL/TLS and cryptography provider for the IoT, has partnered with Renesas Electronics, a global leader of semiconductor manufacture. Through the support for their high performance microprocessor series of RX and RZ, wolfSSL delivers secure connections of IoT solution with a lightweight high throughput secure communication library.<br /><br /><a href="http://am.renesas.com/">Renesas Website</a><br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL Embedded SSL/TLS Library</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-12-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'When to use Pre Shared Key (PSK) Cipher Suites',
    'post_content' => 'PSK cipher suites are a superb choice in low resource environments where both ends of the connection can be controlled. With PSK, each side of the connection has an already agreed upon key to use rather than agreeing on one during the TLS handshake. This reduces resource consumption for each session using PSK. <br /><br />For example, on one of wolfSSL’s test machines the cipher suite DHE-PSK-AES128-CBC-SHA256 has an average connection time of 3.498 milliseconds with a peak byte usage of 6,335. On the same machine a similar cipher suite DHE-RSA-AES128-SHA256, not using PSK, has an average connection time of 7.146 milliseconds and peak byte usage of 19,431. wolfSSL always recommends using ephemeral keys (DHE or ECDHE) to maintain forward secrecy but in an ultra limited resource environment, memory and speed can be further improved by using a static PSK cipher suite such as PSK-AES128-CBC-SHA.<br /><br />In addition to RAM reduction, using PSK can reduce the library footprint size as well. One of the smallest wolfSSL builds to date has been the LeanPSK build, which comes in at around 21kB.  For comparison, a typical build on an embedded, optimized compiler will be 60-100kB.<br /><br />For information regarding the use of PSK cipher suites or general inquiries about <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL’s embedded SSL/TLS library</a> <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a>!<br /><br />Wikipedia: <a href="https://en.wikipedia.org/wiki/TLS-PSK">https://en.wikipedia.org/wiki/TLS-PSK</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-12-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL JNI 1.3.0 Released',
    'post_content' => 'Version 1.3.0 of wolfSSL JNI is now available for download.  wolfSSL JNI provides Java applications with a convenient Java API to the widely-used wolfSSL embedded SSL/TLS library, including support for TLS 1.2 and DTLS 1.2.<br /><br />Release 1.3.0 has bug fixes and new features including:<br /><br />	-	Updated support to wolfSSL 3.7.0<br />	-	Added finalizers for WolfSSLContext and WolfSSLSession classes<br />	-	Fix for SSLv3 now disabled by default in wolfSSL proper<br />	-	SSLv3 now marked as @Deprecated<br />	-	PSK (pre-shared key) support for client and server<br />	-	Better error checking and exception handling<br />	-	New WolfSSLJNIException class<br />	-	WolfSSLSession now cached in native WOLFSSL struct for callbacks<br />	-	Easier inclusion of junit4 in build.xml<br /><br />wolfSSL JNI 1.3.0 can be downloaded from the <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">wolfSSL download page</a> and the wolfSSL JNI Manual can be found <a href="perma://BLPageReference/08E0BE4C-B9E0-4351-88B7-ADC59155FC56">here</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-12-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'User Crypto Modules',
    'post_content' => '<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> has a new feature to allow for users to plug in their own crypto for RSA if they so choose. This is a great feature for students looking to test their own RSA operations in a SSL/TLS connection or for those wanting to see if they can speed up operations in the IoT realm and on embedded devices. This option can be used with the build flag “--with-user-crypto”. An example of building a module can be found in the directory “wolfssl_root/wolfcrypt/user-crypto/” and built with the commands:<br><br>cd wolfcrypt/user-crypto/<br />./autogen.sh<br />./configure<br />make<br />sudo make install<br /><br />This example makes use of Intel’s IPP libraries and needs them installed and existing on the system before being able to build.  For any questions on use, or about the wolfSSL embedded SSL/TLS library in general, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><br />Intel IPP libraries <a href="https://software.intel.com/en-us/intel-ipp">https://software.intel.com/en-us/intel-ipp</a> .',
    'post_status' => 'publish',
    'post_date' => date('2015-12-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfMQTT v0.3 and MQTT Secure Firmware Update Example',
    'post_content' => 'The wolfMQTT v0.3 release adds a new example for secure firmware update. This example uses the wolfSSL embedded SSL/TLS library to hash/sign the binary image and send it over MQTT. The example has two applications. One is called fwpush, which hashes, signs and publishes the firmware image over TLS to an MQTT broker. The second is called fwclient, which subscribes to the example firmware update topic, receives the firmware image and validates the signature of it. This example is located in examples/firmware.<br /><br />The latest wolfMQTT releases can be downloaded at: <br /><a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">https://wolfssl.com/wolfSSL/download/downloadForm.php</a><br /><br />Documentation for wolfMQTT can be found here:<br /><a href="https://wolfssl.com/wolfSSL/Docs-wolfmqtt-manual.html">https://wolfssl.com/wolfSSL/Docs-wolfmqtt-manual.html</a><br /><br />The latest source code can be found on our GitHub repo at:<br /><a href="https://github.com/wolfSSL/wolfMQTT">https://github.com/wolfSSL/wolfMQTT</a><br /><br />For questions please contact support at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-11-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL new wrappers for signature generation / verification and hashing',
    'post_content' => 'We’ve added some useful wrappers to the wolfSSL embedded SSL/TLS library for signature generation/verification and hashing. The signature wrappers support ECC and RSA. The hashing wrappers support MD5 and SHA, SHA256, SHA384 and SHA512.<br /><br />Documentation for these new wrapper functions is in the <a href="perma://BLPageReference/8BA8E440-829C-4013-B179-B43C227966A0">"wolfCrypt API Reference” section 18.36</a>.<br /><br /><b>New API functions:<br /></b><i><br />#include <wolfssl/wolfcrypt/signature.h><br /></i>wc_SignatureGetSize<br />wc_SignatureVerify<br />wc_SignatureGenerate.<br /><br /><i>#include <wolfssl/wolfcrypt/hash.h><br /></i>wc_HashGetDigestSize<br />wc_Hash<br /><br />An example for these new wrapper functions can be found here <a href="https://github.com/wolfSSL/wolfssl-examples/tree/master/signature">https://github.com/wolfSSL/wolfssl-examples/tree/master/signature</a>. There is also an example for the wc_Hash function in wolfcrypt/src/signature.c.<br /><br />For questions please contact support at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-11-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What’s up with TLS 1.3?',
    'post_content' => 'We are receiving questions on TLS 1.3 with greater frequency during the last 6 months.  This note is intended to answer those questions and make clear our positions on TLS 1.3, so here are our thoughts:<br /><br />1.  We intend to have an implementation of TLS 1.3 available when the specification goes final from the IETF.  Our big challenge is that since we will be the first to offer TLS 1.3, our interoperability testing will be limited at that time.<br /><br />2.  We will implement some of the individual features of TLS 1.3 as they become consensus and subsequently final from the IETF TLS working group.  This will give us and our users a jump on the process of migrating to the new standard.<br /><br />3.  FIPS 140-2:  We will be working with our lab to ensure that our TLS 1.3 implementation also supports FIPS.<br /><br />4.  As the leading embedded SSL/TLS, we will continue to maintain our lean and fast like a wolf design philosophy, such that our TLS 1.3 implementation will consume minimal resources.<br /><br />As always, you are welcome to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or at +1 425 245 8247 with your comments or questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-11-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at ARM TechCon',
    'post_content' => 'wolfSSL is exhibiting at <a href="http://www.armtechcon.com/">ARM TechCon</a> at the Santa Clara Convention Center. Visit the wolfSSL Team at Booth #321 to discuss the wolfSSL embedded SSL/TLS library and wolfCrypt crypto solutions for your embedded projects. Security is a top priority for the attendees visiting our booth on day 1. <br /><br />Find out why wolfSSL is securing over 1 billion connections worldwide!  If you would like to schedule a meeting with the wolfSSL team, email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-11-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New wolfMQTT Client Library',
    'post_content' => 'wolfSSL has released version 0.2 of the wolfMQTT client library. This addition to the wolfSSL product portfolio provides a Pub/Sub client for use in M2M and IoT. The wolfMQTT client library is written in C and was built from the ground up to be multi-platform, space conscience and extensible.<br /><br /><b>Features<br /></b>-  Built from scratch by wolfSSL engineers<br />-  Based on MQTT v3.1.1 specification<br />-  Supports all client side packet types and protocol options<br />-  QoS Levels 0-2 (guarenteed delivery)<br />-  Supports plain TCP or TLS (via the wolfSSL library)<br />-  Single threaded model and single message callback<br />-  Written in Native C89 with portability/compatibility in mind<br />-  Space conscience design (Compiled size is about 3.6KB)<br />-  User manual with build instructions, example overview and API documentation<br />-  Example MQTT client implementations<br />-  Network interface is abstracted via callbacks for extensibility<br />-  Packet parsing encoding/decoding structured for custom use<br />-  Minimal external dependencies (strlen, memcpy, memset)<br />-  Detailed error checking/handling<br />-  Doxygen style inline documentation<br />-  Less than 1200 lines of well structured C code<br />-  Tested on multiple variants of MQTT broker servers, QoS levels 0-2 with/without TLS.<br />-  Tested on Linux, Mac OS X and Freescale Kinetis K64.<br />-  Inherits wolfSSL library features such as lightweight TLS using ChaCha20/Poly1305 AEAD, small size and portability.<br />-  Open source (GPLv2)<br /><br /><a href="perma://BLPageReference/7A4CEDDC-DD13-4CBD-A758-17BA1257CB96">wolfMQTT Product Page</a><br /><a href="perma://BLPageReference/7827960C-024F-4135-8E63-2261E659065F">wolfMQTT User Manual</a><br /><a href="https://www.wolfssl.com/wolfSSL/download/downloadForm.php">Download wolfMQTT</a><br /><br />For questions or additional information please contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-11-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Digital Signature Algorithm (DSA) Support in wolfSSL',
    'post_content' => 'Did you know that the wolfSSL embedded SSL/TLS library has support for the Digital Signature Algorithm (DSA)? Many of us in security are familiar with Ron Rivest, Adi Shamir, and Leonard Adleman (RSA). DSA is a public key operation like RSA. When using keys of the same length RSA and DSA are considered to be of equivalent strength.<br /><br />DSA is faster than RSA at decryption and signature generation.<br /><br />Why might this matter to you? If you are designing an application that will use encryption and decryption, you might want to consider which operation it will do most frequently. For heavy decryption and light encryption, the more optimal public key operation by performance would be DSA.<br /><br />More details on DSA can be found on the <a href="https://en.wikipedia.org/wiki/Digital_Signature_Algorithm">DSA wikipedia page</a>.<br /><br />For more information about DSA support in wolfSSL and wolfCrypt, please reference Section 10.5.4 of the <a href="https://wolfssl.com/wolfSSL/Docs-wolfssl-manual-10-wolfcrypt-usage-reference.html">wolfSSL Manual</a>.  Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-11-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ChaCha20 and Poly1305 in wolfSSL',
    'post_content' => 'Have you heard about the recent ChaCha20-Poly1305 AEAD supported by wolfSSL embedded SSL/TLS and are wondering how secure it is? It`s comprised of two ciphers: ChaCha20 and Poly1305, designed to be constant time, making it naturally resistant to timing attacks. The AEAD is being used by many notable companies that also trust it for their security, such as Google Chrome and Apple’s HomeKit. ChaCha20-Poly1305 has gone through security analysis and is considered secure.<br /><br />To view a formal security analysis done on Adam Langley`s IETF protocol using ChaCha20-Poly1305 seehttps://eprint.iacr.org/2014/613.pdf<br /><br />For added analysis done on Salsa (what ChaCha is based from) see section 5 from <a href="http://cr.yp.to/snuffle/salsafamily-20071225.pdf">http://cr.yp.to/snuffle/salsafamily-20071225.pdf</a><br /><br />For any questions about wolfSSL please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-11-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded Technology 2015',
    'post_content' => '<b>Come join wolfSSL at Embedded Technology 2015<br /></b><br />Mark Minnoch and Takashi Kojo from the wolfSSL Team, will be in Japan the 3rd week of November.  They will be displaying at the Embedded Technology Conference and Exhibition 2015.  The event takes place from November 18th through November 20th at the Pacifico Yokohama Convention Complex in Yokohama City, Japan. The doors are open Wednesday through friday from 10:00am to 5:00pm. <br /><br />If you are attending or planning on attending please stop by our table or schedule an appointment with one of our engineers to talk Cryptography at the show. You can contact us by phone at (425) 245-8247 or you can email Mark Minnoch at <a href="mailto:Mark@wolfssl.com">Mark@wolfssl.com</a>.<br /><br />For more information about Embedded Technology 2015 or to purchase tickets you may register at:<br /><a href="http://www.embeddedtech.net/">http://www.embeddedtech.net/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-11-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ARM TechCon 2015',
    'post_content' => '<b>Come join wolfSSL at ARM TechCon 2015<br /></b><br />The wolfSSL Team, will be in the Santa Clara area the 2nd week of November.  The event takes place from November 10th through November 12th at the Santa Clara Convention Center in Santa Clara, California from 8:30am to 4:20pm on Tuesday and 8:30am to 5:30pm on Wednesday and Thursday.  <br /><br />If you are attending or planning on attending please stop by our table or schedule an appointment with one of our engineers to talk Cryptography at the show. You can contact us by phone at (425) 245-8247 or buy email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />For more information about ARM TechCon or to purchase tickets you may register at: <a href="https://armtechcon.tech.ubm.com/">https://armtechcon.tech.ubm.com</a> <br />Please use the following code for a 15% discount: <b>YYxoWO60</b>',
    'post_status' => 'publish',
    'post_date' => date('2015-11-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ESC Minneapolis 2015',
    'post_content' => '<b>Come join wolfSSL at the Embedded Systems Conference<br /></b><br />Rod Weaver and Chris Conlon, of the wolfSSL Team, will be in the Minneapolis area the 1st week of November.  On November 4th and November 5th for the Embedded Systems Conference. This event will be held at the Minneapolis Convention Center in Minneapolis, Minnesota from 9:00am to 5:00pm Thursday and Friday.  <br /><br />If you are attending or planning on attending please stop buy our table or schedule an appointment with Rod or Chris to talk Cryptography at the show. You can contact either of them by phone at (425) 245-8247 or by email at <a href="mailto:rod@wolfssl.com">rod@wolfssl.com</a>.<br /><br />For more information about ESC Minneapolis or to purchase tickets you may register at: <a href="https://escm.tech.ubm.com/2015/?_mc=EM_DB_LE_ESCMINN15_VIP26">https://escm.tech.ubm.com/2015/?_mc=EM_DB_LE_ESCMINN15_VIP26</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-11-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ICMC 2015',
    'post_content' => '<b>Come join wolfSSL at the International Cryptographic Module Conference<br /></b><br />Rich Kelm and Mark Minnoch, of the wolfSSL Team, will be in the Washington DC area the week of November 4th to November 6th  for the International Cryptographic Module Conference. This event will be held at the Hilton Washington DC in Rockville Maryland from 9:00am to 5:00pm Wednesday, Thursday and Friday.  <br /><br />If you are attending or planning on attending please stop by our table or schedule an appointment with Rich or Mark to talk about Cryptography and the wolfSSL embedded SSL/TLS library at the show. You can contact either of them by phone at (425) 245-8247 or by email: Rich at <a href="mailto:rich@wolfssl.com">rich@wolfssl.com</a> and Mark at <a href="mailto:mark@wolfssl.com">mark@wolfssl.com</a> . <br /><br />For more information about ICMC or to purchase tickets you may register at:<a href="http://icmconference.org/">http://icmconference.org/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-11-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release 3.7.0',
    'post_content' => 'wolfSSL has a new release out, version 3.7.0. In this release we have added features and bug fixes to the wolfSSL embedded SSL/TLS library and further increased its ease of use on platforms in the realm of IoT, with the addition of a Rowley Crossworks example. Along with additions for Rowley there has been an update to the MDK5-ARM and FreeRTOS project keeping wolfSSL at the cutting edge of embedded TLS/SSL.<br /><br />Some of the features added to our TLS and wolfCrypt layer are: the IDEA cipher, an example of plugging in user choice of external RSA cryptography, and support for the ALPN, which allows making connections over HTTP2.<br /><br />For a full list of features, and to try them out, download wolfSSL 3.7.0 from the <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">download page</a>, or follow our development branch on <a href="https://github.com/wolfSSL/wolfssl">GitHub</a>.<br /><br />For more information about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-10-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'MQTT with wolfSSL',
    'post_content' => 'MQTT (Message Queuing Telemetry Transport) is a light weight open messaging protocol that was developed for constrained environments such as M2M (Machine to Machine) and IoT (Internet of Things), where a small code footprint is required. MQTT is based on the Pub/Sub messaging principle of publishing messages and subscribing to topics. The protocol efficiently packs messages to keep the overhead very low. The MQTT specification recommends TLS as a transport option to secure the protocol using port 8883 (secure-mqtt). Constrained devices can benefit from using TLS session resumption to reduce the reconnection cost.<br /><br />We have posted an example implementation of MQTT with TLS (MQTTS) on mbed:<br /><a href="https://developer.mbed.org/users/wolfSSL/code/HelloMQTTS/">https://developer.mbed.org/users/wolfSSL/code/HelloMQTTS/</a><br /><a href="https://developer.mbed.org/users/wolfSSL/code/MQTTS/">https://developer.mbed.org/users/wolfSSL/code/MQTTS/</a><br /><br />wolfSSL is also working on an open source secure MQTT client for IoT security that will be released soon which will work seamlessly with the wolfSSL embedded SSL/TLS library.<br /><br />The MQTT Version 3.1.1 Specification can be found here on OASIS:<br /><a href="http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html">http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-10-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL supports National Cyber Security Awareness Month',
    'post_content' => 'wolfSSL has become a <a href="https://www.staysafeonline.org/ncsam/champions/all-champions/">Champion of National Cyber Security Awareness Month</a> (NCSAM) 2015, joining a growing global effort among colleges and universities, businesses, government agencies, associations, nonprofit organizations and individuals to promote online safety awareness. <br /><br />Celebrated every October, <a href="https://www.staysafeonline.org/ncsam/landing-page/">National Cyber Security Awareness Month</a> was created as a collaborative effort between government and industry to ensure everyone has the resources needed to stay safer and more secure online.<br /><br />Coordinated and led by the <a href="https://www.staysafeonline.org/">National Cyber Security Alliance</a> (NCSA) and the <a href="http://www.dhs.gov/">Department of Homeland Security</a>, NCSAM has grown exponentially since its inception, reaching consumers, small and medium-sized businesses, corporations, educational institutions and young people across the nation and internationally. This year marks the 12th year of NCSAM.<br />',
    'post_status' => 'publish',
    'post_date' => date('2015-10-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SHA-3 Algorithm Validation Testing',
    'post_content' => '<a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf">The SHA-3 Standard (FIPS PUB 202)</a> is now included in <a href="http://csrc.nist.gov/publications/fips/fips140-2/fips1402annexa.pdf">Annex A: Approved Security Functions for FIPS PUB 140-2, Security Requirements for Cryptographic Modules</a>. <br /><br />SHA-3 Hash Algorithms (SHA3-224, SHA3-256, SHA3-384, SHA3-512) and SHA-3 Extendable-Output Functions (XOF) (SHAKE128, SHAKE256) are FIPS Approved and may be implemented in a FIPS 140-2 cryptographic module. The SHA-3 functions are based on the Keccak algorithm selected by NIST as the winner of the SHA-3 competition.<br /><br />wolfSSL is performing early testing of SHA-3 through the Cryptographic Algorithm Validation Program (CAVP) at NIST. <br /><br />Please contact <a href="mailto:fips@wolfSSL.com">fips@wolfSSL.com</a> if your project plans include SHA-3.',
    'post_status' => 'publish',
    'post_date' => date('2015-10-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wofSSL Internship Info Session: MSU Bozeman',
    'post_content' => 'In preparation for the <a href="http://www.montana.edu/wwwcp/events/employer_info/index.php">Montana State University Fall Career Fair</a>, wolfSSL will be holding an info session this upcoming Monday at Montana State University in Bozeman, MT for students interested in learning more about wolfSSL.  The session will introduce wolfSSL as a company including background information, product lineup, work environment, and more.<br /><br />We encourage any students who will be in the area and are interested in Internet security, SSL/TLS, cryptography, embedded security, or software development to attend!  Pizza will be served.<br /><br /><b><a href="http://calendar.msu.montana.edu/events/15410">wolfSSL Info Session</a></b><b><br /></b>Monday, October 5, 2015<br />Montana State University, Bozeman<br />5-6pm, Reid Hall 108<br /><br />We look forward to seeing you there!  Feel free to contact us at <a href="mailto:chris@wolfssl.com">chris@wolfssl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-10-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL in stunnel TLS Proxy',
    'post_content' => 'With release 3.6.8, wolfSSL renewed its support for <a href="https://www.stunnel.org/">stunnel</a>, a lightweight TLS proxy, designed to add SSL/TLS encryption to unsecured applications without changes to the program`s source code. Licensed under GNU GPLv2 and with an alternative commercial option, stunnel can be utilized to secure a host of different applications, including: mail exchange (SMTP, IMAP, POP3), web hosting (HTTP), remote shell, and virtually any other unprotected protocol desired.<br /><br />Porting stunnel to use wolfSSL`s embedded SSL/TLS library means taking advantage of wolfSSL`s minimal footprint and high speed crypto implementation to increase performance and decrease required resources when compared to the previous SSL library. Not only that, but using wolfSSL with stunnel combines these benefits with the peace of mind that your application is secured by a progressive, transparent and stable SSL/TLS library, known for its quality, integrity and efficiency.<br /><br />To build wolfSSL for use with stunnel, simply configure wolfSSL with: "./configure --enable-stunnel" from wolfSSL`s main directory, then make and make install. <br /><br />For a version of stunnel that links to the wolfSSL library, or for more information, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-10-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be at Xively Xperience',
    'post_content' => 'wolfSSL will be at the Xively Xperience event this week in Boston, MA.  Xperience 2015, October 1-2, at the Seaport Hotel in Boston is a 200-person, invite only IoT forum dedicated to helping executives learn about the early challenges and successes of connected product initiatives from commercial IoT pioneers, industry experts, and visionaries.<br /><br />If you are going to be attending Xperience, would like to schedule a meeting, or have questions about using the wolfSSL embedded SSL/TLS library or wolfCrypt cryptography library in your IoT device, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!<br /><br /><a href="https://xperience.xively.com/">Xively Xperience</a><br /><a href="https://business.facebook.com/events/880699905332378/">Xperience Facebook Event</a><br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-9-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OpenSSH with wolfCrypt FIPS ',
    'post_content' => 'Many technology vendors implement <a href="http://www.openssh.com/">OpenSSH</a> with OpenSSL in their embedded system or appliance prior to starting a FIPS 140-2 validation. During the FIPS testing process, the vendor discovers that the FIPS Laboratory must verify the OpenSSH implementation:<br /><br />	1.	Uses FIPS Approved cryptographic algorithms (with CAVP certificates)<br />	2.	Includes self-tests for the FIPS Approved algorithms<br />	3.	Prevents use of non-approved algorithms<br />	4.	Enters an error state upon self-test failure<br /><br />This strategy of implementing OpenSSH with OpenSSL creates additional challenges for the vendor in an already complex and time-consuming FIPS testing process. <br /><br />wolfSSL Inc.’s <b>wolfCrypt FIPS Module for OpenSSH</b> provides a fast path to a FIPS 140-2 validation by meeting all of the FIPS requirements. Only FIPS Approved algorithms are available to OpenSSH. The self-tests are optimized. And the wolfSSL team will perform the CAVP algorithm testing (including SSH KDF and FIPS 186-4 KeyGen) for you on your target platform.<br /><br />Streamline and simplify your OpenSSH implementation by using the <b>wolfCrypt FIPS Module for OpenSSH</b>. Please contact <a href="mailto:fips@wolfSSL.com">fips@wolfSSL.com</a> to receive expert guidance on your FIPS 140-2 project.',
    'post_status' => 'publish',
    'post_date' => date('2015-9-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.6.8 is Now Available',
    'post_content' => 'Version 3.6.8 of the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> has been released and is now <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">available for download</a>.  Release 3.6.8 of wolfSSL fixes two high severity vulnerabilities.  It also includes bug fixes and new features including:<br /><br />	-	Two High level security fixes, all users SHOULD update.<br /><br />	a)	If using wolfSSL for DTLS on the server side of a publicly accessible machine you MUST update.<br />	b)	If using wolfSSL for TLS on the server side with private RSA keys allowing ephemeral key exchange without low memory optimizations you MUST update and regenerate the private RSA keys.<br /><br />Please see our <a href="perma://BLPageReference/50818D96-05DE-43B9-A602-A3DF3DB9A153">recent vulnerability blog post</a> for more details<br /><br />	-	No filesystem build fixes for various configurations<br />	-	Certificate generation now supports several extensions including KeyUsage, SKID, AKID, and Certificate Policies<br />	-	CRLs can be loaded from buffers as well as files now<br />	-	SHA-512 Certificate Signing generation<br />	-	Fixes for sniffer reassembly processing<br /><br />For more information about using and compiling wolfSSL, please visit the <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">wolfSSL Documentation</a> page or <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a>.  If you have questions about the wolfSSL embedded SSL/TLS library, or about using it in your project, please <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">Contact Us</a>.<br /><br /><b>Download wolfSSL 3.6.8</b>:  <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">https://www.wolfssl.com/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-9-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Two Vulnerabilities Recently Found, An Attack on RSA using CRT and DoS Vulnerability With DTLS',
    'post_content' => '<b>Attack on RSA CRT:<br /></b><br />A recent paper written by Florian Weimer of the Red Hat Product Security group shows a fault attack on RSA. Many cryptographic libraries that perform RSA operations use an optimization called CRT (Chinese Remainder Theorem). The attack is based off of creating a fault during the CRT process, for example; by causing the system to overheat, using a race condition, or simply a faulty CPU. With the introduction of this attack the function wc_RsaSSL_VerifyInline is now used to verify no fault has happened, this verify function is now automatically used on all TLS connections that were previously affected.<br><br>Only a small subset of wolfSSL embedded SSL/TLS builds were affected by the attack on RSA CRT. Those using wolfSSL for TLS connections on the server side with private RSA keys, allowing the use of ephemeral key exchange and without using the low memory setting are affected. An example of this is a wolfSSL TLS server side that uses the suite ECDHE-RSA-AES256-SHA256 having ephemeral key exchange and loading in a private RSA to create the connection, the client side of this connection is not affected. We recommend updating to the most recent wolfSSL release 3.6.8 and renewing all RSA private keys if you meet the affected criteria. If using wolfSSL on the client side this attack is not an issue.<br /><br />CVE-2015-7744 has been assigned to this vulnerability.<br /><br /><b>DoS on DTLS:<br><br /></b>Recently a researcher (thanks to Sebastian Ramacher from the Institute for Applied Information Processing and Communications at Graz University of Technology) notified wolfSSL of the potential to amplify a DTLS denial of service attack. The original cookie generation callback used a hash of the current socket peer’s IP address and port number. Now the cookie is based on the client’s hello message per the RFC (client IP address, client port number, version, random, cipher suites, compression) and HMACed with an application provided secret.<br /><br />Only those using DTLS on the server side of a publicly accessible machine are affected. We recommend affected servers to update to release 3.6.8 which now generates an unpredictable cookie using HMAC.<br /><br />CVE-2015-6925 has been assigned to this vulnerability.<br /><br />For any questions contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com<br></a>Link to paper written about the RSA-CRT attack <a href="https://people.redhat.com/~fweimer/rsa-crt-leaks.pdf">https://people.redhat.com/~fweimer/rsa-crt-leaks.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-9-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Attending the 2015 Grace Hopper Conference',
    'post_content' => 'wolfSSL is sending Leah Thompson, a wolfSSL software developer and graduate student at Montana State University, to the Grace Hopper Conference Wednesday, October 14 through Friday October 16. The conference will be hosted at the <a href="http://gracehopper.org/location/">George R. Brown Convention Center</a> in Houston, TX. If you will be attending and would like to discuss anything related to the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a>, cryptography, or IoT security, feel free to stop by the Montana State University booth to meet with Leah. MSU will be exhibiting in booth 828. More details will be posted as the conference approaches. We look forward to seeing you there!<br /><br />For more information regarding upcoming conferences wolfSSL will be attending, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2015-9-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Inc. completed FIPS 140-2 revalidation testing to add the Windows 7 operating environment to the wolfCrypt FIPS cryptographic module',
    'post_content' => 'FIPS 140-2 revalidation testing requires the implemented algorithms to successfully complete the cryptographic algorithm validation process on the target operating environment (algorithm certificates for tested operating environments are here: <a href="http://csrc.nist.gov/groups/STM/cavp/validation.html">http://csrc.nist.gov/groups/STM/cavp/validation.html</a>). <br /><br />The cryptographic module must also successfully complete operational testing on the operating environment with a FIPS testing laboratory.<br /><br />The <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-all.htm">wolfCrypt FIPS 140-2 certificate #2425</a> will soon include all of the following tested environments:<br />	•	Windows 7<br />	•	FreeRTOS<br />	•	iOS<br />	•	Android<br />	•	Linux<br /><br />If you do not see your operating environment of choice, the wolfSSL team can add yours to our list. We accelerate FIPS projects by providing validated cryptography and testing services to our customers. <br /><br />Please contact <a href="mailto:fips@wolfSSL.com">fips@wolfSSL.com</a> to receive expert guidance on your FIPS 140-2 project.',
    'post_status' => 'publish',
    'post_date' => date('2015-9-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL in Lighttpd',
    'post_content' => '<a href="http://www.lighttpd.net/">Lighttpd</a> (pronounced lighty) is a web server that has a small footprint size in comparison to other web servers. Setting up Lighttpd allows for handling HTTP requests and with the addition of TLS/SSL also handling HTTPS requests. The benefit of having a small footprint size is that it takes up less memory for total installation and for each connection made. This allows it to be more scalable and also use less resources. <br><br />Combining the small footprint size of <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> with Lighttpd makes for an extremely light weight web server. Perfect for use on IoT devices with constrained amounts of memory and on large servers looking for scalability. With the use of wolfSSL, users can get the progressiveness and solid security that the embedded TLS/SSL library offers on their web servers. To build wolfSSL for use with Lighttpd simply run the configure option “./configure --enable-lighty” from wolfSSL`s main directory, then make and make install.<br /><br />For a version of Lighttpd that links to the wolfSSL library, or for more information, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-9-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'NSA Begins Transition to Recommending Quantum Resistant Algorithms',
    'post_content' => 'Strong cryptographic algorithms and secure protocol implementations are a vital foundation to securing the Internet of today and tomorrow.  Securing over a billion active connections on the Internet today, wolfSSL knows this very well.  A recent <a href="https://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml">announcement</a> by the National Security Agency conveyed their plans to transition from recommending the Suite B set of algorithms to a quantum resistant solution.<br /><br /><a href="https://en.wikipedia.org/wiki/NSA_Suite_B_Cryptography">Suite B</a> is currently specified by <a href="http://www.nist.gov/">NIST</a> and used by NSA’s Information Assurance Directorate in solutions approved for protecting classified and unclassified National Security Systems (NSS).<br /><br />During the transition phase, the NSA is recommending that the following algorithms and key sizes be used to protect up to TOP SECRET:<br /><br /><a href="http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf">Advanced Encryption Standard</a> (AES) with 256-bit keys<br /><a href="http://csrc.nist.gov/groups/ST/toolkit/documents/SP800-56Arev1_3-8-07.pdf">Elliptic Curve Diffie-Hellman</a> (ECDH) Key Exhange, with Curve P-384<br /><a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf">Elliptic Curve Digital Signature Algorithm</a> (ECDSA), with Curve P-384<br /><a href="http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf">Secure Hash Algorithm</a> (SHA-384)<br />Diffie-Hellman Key Exchange (DH), with a minimum of 3072-bit modulus<br />RSA, with a minimum of 3072-bit modulus<br /><br />The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> supports all of the above cryptographic algorithms, curves, and key sizes.  In addition to these algorithms, wolfSSL supports the NTRU public key algorithm which is quantum resistant.  As of version 3.6.6, wolfSSL includes support for <a href="https://wolfssl.com/wolfSSL/Blog/Entries/2015/7/13_Quantum-Safe_wolfSSL.html">“Quantum-safe hybrid” ciphersuites</a> through the partnership with <a href="https://www.securityinnovation.com/">Security Innovation</a>.<br /><br />NSA Announcement: <a href="https://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml">https://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml</a><br />Ars Technica Article: <a href="http://arstechnica.com/security/2015/08/nsa-preps-quantum-resistant-algorithms-to-head-off-crypto-apocolypse/">http://arstechnica.com/security/2015/08/nsa-preps-quantum-resistant-algorithms-to-head-off-crypto-apocolypse/</a><br />Wikipedia, Post-Quantum Cryptography: <a href="https://en.wikipedia.org/wiki/Post-quantum_cryptography">https://en.wikipedia.org/wiki/Post-quantum_cryptography</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-8-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.6.6 is Now Available',
    'post_content' => 'Version 3.6.6 of the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL/TLS library</a> has been released and is now <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">available for download</a>.  Release 3.6.6 of wolfSSL has bug fixes and new features including:<br /><br /><b>- OpenSSH, stunnel, and lighttpd Compatibility<br /></b><br />    <a href="http://www.openssh.com/">OpenSSH</a> compatibility with “<b>--enable-openssh</b>”<br />    <a href="https://www.stunnel.org/index.html">stunnel</a> compatibility with “<b>--enable-stunnel</b>”<br />    <a href="http://www.lighttpd.net/">lighttpd</a> web server compatibility with “<b>--enable-lighttpd</b>”<br /><br /><b>	-	SSL 3.0 is now disabled by default<br /></b><br />We have <a href="perma://BLPageReference/2DC14EA2-3A37-4E25-B0C6-FEEDCA9413AD">previously announced our plans</a> to deprecate and remove support for SSL 3.0 in the wolfSSL library, encouraged to do so by the <a href="perma://BLPageReference/ED111239-99EB-4165-9D5A-C2002F02BD6F">POODLE attack</a>.  With this release, we have disabled SSL 3.0 support by default.  Users who still want to use SSL 3.0 can enable it by using the “--enable-sslv3” ./configure option.<br /><br /><b>	-	Ephemeral key cipher suites only are now supported by default<br /></b><br />    To enable static ECDH cipher suites define WOLFSSL_STATIC_DH<br />    To enable static  RSA cipher suites define WOLFSSL_STATIC_RSA<br />    To enable static  PSK cipher suites define WOLFSSL_STATIC_PSK<br /><br /><b>	-	Added QSH (Quantum-Safe Handshake) Extension<br /></b><br />wolfSSL, in partnership with Security Innovation, <a href="perma://BLPageReference/F7C3715A-BC19-49DC-A19C-DDD007BF7B66">has added support for the proposed "Quantum-safe hybrid" ciphersuite</a>. Having this cipher suite supported in the wolfSSL embedded TLS library allows two parties to use any existing ciphersuite and "quantum-safe" any traffic protected by that ciphersuite. This means that an attacker who records the traffic and later develops a quantum computer cannot go back and crack the session.<br /><br />    Support for QSH extension can be enabled by using the “<b>--enable-ntru</b>” ./configure option.<br /><br /><b>	-	SRP is now part of wolfCrypt<br /></b><br /><a href="perma://BLPageReference/8CCAE80D-9F0F-4D73-8432-E955CD113ACA">SRP</a> is a password authentication and key-exchange protocol suitable for authenticating users and exchanging keys over an untrusted network designed by Thomas Wu at the Computer Science Department of Stanford University.<br /><br />    Support for SRP in wolfCrypt can be enabled with the “<b>--enable-srp</b>” ./configure option.<br /><br /><b>	-	Certificate handshake message fragmentation support<br /></b><br />Certificate handshake messages can now be sent fragmented if the record size is smaller than the total message size, no user action required.<br /><br /><b>	-	DTLS duplicate message fixes<br /></b><b><br /></b><b>	-	Visual Studio project files now support DLL and static builds for 32/64bit<br /></b><b><br /></b>For information on compiling wolfSSL with Visual Studio, reference <a href="perma://BLPageReference/FD352C90-E273-4482-8F1A-931053F7C82D">Chapter 2</a> of the wolfSSL Manual, or the “<a href="perma://BLPageReference/DA5D3493-A4E5-4A36-80CC-0BEA98EF3A35">Using wolfSSL with Visual Studio</a>” webpage.<b><br /><br /></b><b>	-	Support for new Freesacle I/O<br /></b><b><br /></b><a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=KINETIS-SDK">Freescale KSDK</a> and Kinetis Design Studio users can now compile wolfSSL for the new KSDK version of MQX by defining FREESCALE_KSDK_MQX in settings.h or by adding it to the list of preprocessor defines.<br /><b><br />- FreeRTOS FIPS suppor</b>t<br /><br />    This release includes FIPS support for FreeRTOS platforms.<br /><br />This release contains no high level security fixes that requires an update though we always recommend updating to the latest version of wolfSSL.<br /><br />For more information about using and compiling wolfSSL, please visit the <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">wolfSSL Documentation</a> page or <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a>.  If you have questions about the wolfSSL embedded SSL/TLS library, or about using it in your project, please <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">Contact Us</a>.<br /><br /><b>Download wolfSSL 3.6.6</b>:  <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">https://www.wolfssl.com/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-8-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Microchip MASTERS',
    'post_content' => 'The wolfSSL team is attending and exhibiting at Microchip MASTERS this week in Phoenix, AZ.  Today was day number one of the conference, and filled with interesting classes, people, and conversations.<br /><br />Are you attending MASTERS this year?  If so, stop by our booth and let us help answer your SSL/TLS, crypto, and device security questions!',
    'post_status' => 'publish',
    'post_date' => date('2015-8-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt Receives FIPS 140-2 Certificate #2425',
    'post_content' => 'The <a href="http://csrc.nist.gov/groups/STM/cmvp/">Cryptographic Module Validation Program</a> (CMVP) has issued FIPS 140-2 Certificate <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-all.htm#2425">#2425</a> for the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfCrypt Module</a> developed by <a href="https://www.wolfssl.com/">wolfSSL Inc</a>. The CMVP was established by the National Institute of Standards and Technology (NIST) to validate FIPS 140-2 cryptographic modules and oversee the independent laboratories performing the cryptographic module testing.<br /><br />FIPS 140-2 requires the use of validated cryptography in the security systems implemented by federal agencies to protect sensitive information.<br /><br />The wolfCrypt Module is a comprehensive suite of FIPS Approved algorithms. All key sizes and modes have been implemented to allow flexibility and efficiency. The wolfCrypt Module was initially tested on Linux, iOS, and Android platforms. FreeRTOS and Windows platforms (including Windows Kernel) will soon be included on the FIPS 140-2 certificate. <br /><br />"The wolfCrypt Module successfully completed the rigorous FIPS 140-2 Level 1 validation process. This process includes verification of proper documentation, configuration management review, algorithm testing, source code review, operational testing, and coordination with the CMVP,” said Marc Ireland, FIPS Program Manager at InfoGard Laboratories. <br /><br />“wolfSSL customers are using our software FIPS cryptographic module in small embedded devices, network appliances, and large server systems,” said Larry Stefonic, Founder and CEO of wolfSSL Inc. “We are committed to adding new platforms and performing custom FIPS validations to offload the certification testing burden from our customers.”<br /><br />Important differentiators in the wolfCrypt Module include the implementation of a Default Entry Point and DRBG Health Testing. <br /><br />wolfCrypt implements a Default Entry Point to meet <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-2/FIPS1402IG.pdf">FIPS 140-2 Implementation Guidance 9.10</a>. Many other software FIPS modules require the calling application to initiate the power-on self-tests. Those previously validated modules do not meet current guidance from the CMVP and unnecessary risk is being forced on the users of those modules.<br /><br />In May 2015, the CMVP provided strict guidance to all of the Testing Laboratories that Health Testing is required for FIPS Approved DRBGs. During the wolfCrypt FIPS validation process, InfoGard Laboratories verified through source code review and operational testing that the DRBG Health Testing (described in <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-90Ar1.pdf">SP800-90A</a> Section 11.3) was implemented to the requirements.<br /><br />Please contact wolfSSL Inc. (<a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a>) to accelerate your FIPS 140-2 project.',
    'post_status' => 'publish',
    'post_date' => date('2015-8-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Exhibiting at Microchip MASTERS 2015',
    'post_content' => 'wolfSSL will be attending and exhibiting at the 2015 Microchip Masters conference in Phoenix, AZ next week.  We will be visiting with Microchip users about integrating and leveraging the wolfSSL embedded SSL/TLS library and wolfCrypt cryptography engine to secure PIC32-based applications.<br /><br />From the conference website, “Now in its 19th consecutive year, Microchip’s MASTERs Conference has become the premiere technical training conference for embedded control engineers. The Conference has now expanded to locations in 7 countries and provides training classes at all technical levels. Engineers can choose from classes about Microchip’s products as well as general embedded control topics such as motor control, power supply design, lighting control, communication protocols like USB, TCP/IP and Bluetooth, C programming, graphic display technologies, Android and iOS application development, touch sense methods and analog system design.”<br /><br />wolfSSL will be co-presenting a class on both Friday (8/21/15) from 1:15pm - 5:15pm CDT and Saturday (8/22/15) from 8:00am - 12:00pm CDT:<br /><br /><b>Title:<br /></b>19067 IoT6 : Enabling Internet Security for PIC32 Applications with MPLAB® Harmony<br /><br /><b>Class Description:<br /></b>Communications security is a vital part of the growing connected world. With the complexity of embedded devices growing, it is even more important that they provide a level of security to fend off malicious attacks. This course will teach the basics of Transport Layer Security (TLS), the most popular way of securing communications, and will introduce the CyaSSL library that can be integrated with an MPLAB® Harmony application to provide this type of security.<br /><br /><b>References:<br /></b><br />Microchip Masters 2015: <a href="https://secure.microchip.com/usmasters/home.aspx">https://secure.microchip.com/usmasters/home.aspx</a><br />Microchip: <a href="http://www.microchip.com">http://www.microchip.com</a>/<br /><br />If you’re going to be attending the conference and want to set up a meeting time, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-8-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using a Custom Logging Function with wolfSSL',
    'post_content' => 'If you are working on integrating wolfSSL into an application that already has existing logging functionality, but still want access wolfSSL`s built-in debug messaging, you can register a custom logging callback with wolfSSL to output wolfSSL`s detailed debug messaging.<br /><br />To enable this functionality, add the configure option “<b>--enable-debug”</b> to wolfSSL. Then, in your application simply:<br />	•	Include <wolfssl/wolfcrypt/logging.h><br />	•	Call wolfSSL_Debugging_ON();<br />	•	Call wolfSSL_SetLoggingCb(&custom_logging_cb);<br /><br />The custom logging function provided to wolfSSL_SetLoggingCb should be of type:<br /><br />void wolfSSL_Logging_cb(const int logLevel, const char *const logMessage);<br /><br />Adding this logging support will enable wolfSSL debug messaging with general information (including which function is currently executing), notes about function execution and code path, as well as additional information on any errors occurring during execution. It`s a great tool to help track down any bugs you run into when integrating wolfSSL. For more information please see the debugging section in the wolfSSL embedded SSL/TLS manual: <a href="https://wolfssl.com/wolfSSL/Docs-wolfssl-manual-8-debugging.html">https://wolfssl.com/wolfSSL/Docs-wolfssl-manual-8-debugging.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-8-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Speed Up Development: Code Composer Studio with TI-RTOS and wolfSSL',
    'post_content' => 'Thanks to the continued efforts of the Texas Instruments Team there is now a Wiki Page for using the wolfSSL embedded SSL/TLS library with TI-RTOS.<br /><a href="http://processors.wiki.ti.com/index.php/Using_wolfSSL_with_TI-RTOS">http://processors.wiki.ti.com/index.php/Using_wolfSSL_with_TI-RTOS</a><br /><br />Members of the wolfSSL team have worked through this wiki and created a step-by-step guide for customers unfamiliar with Code Composer Studio (CCS), SSL/TLS, or TI-RTOS. This guide will assist our customers by exposing them to important parts of the CCS API, ushering them through the setup and familiarization process, and speeding them on their way to development for their own projects.<br /><br />This guide can be found in the wolfssl-examples repository on github under the tirtos_ccs_examples directory:<br /><a href="https://github.com/wolfSSL/wolfssl-examples/blob/master/tirtos_ccs_examples/README.md">https://github.com/wolfSSL/wolfssl-examples/blob/master/tirtos_ccs_examples/README.md</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-8-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Fixed Point ECC with wolfSSL Embedded SSL/TLS',
    'post_content' => 'On applications using ECC with <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> where total memory footprint is a secondary factor to performance, consider enabling fixed point ECC with wolfSSL. This configure option generates a large lookup table for use with ECC that can increase performance time by as much as 5 times. This comes at the cost of runtime memory, but can be well worth it, especially when doing many ECC key operations. <br /><br />To enable this option with wolfSSL, at compile time append “<b>--enable-fpecc</b>” to your list of ./configure options.<br /><br />To read more about the math behind fixed point ECC, please see this article: <a href="http://www.mdpi.com/1424-8220/13/7/9483">http://www.mdpi.com/1424-8220/13/7/9483</a> which discusses the potential size advantages and disadvantages of fixed point ECC.',
    'post_status' => 'publish',
    'post_date' => date('2015-8-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Not Vulnerable to Pandora’s Box Attack',
    'post_content' => 'Researchers Clemens Hlauschek, Markus Gruber, Florian Fankhauser, and Christian Schanes of Germany`s Research Industrial Systems Engineering are presenting a TLS Man in the Middle attack at this week’s USENIX conference in Washington D.C: <a href="https://www.usenix.org/system/files/conference/woot15/woot15-paper-hlauschek.pdf">https://www.usenix.org/system/files/conference/woot15/woot15-paper-hlauschek.pdf</a> .  This is a protocol level attack that has a few requirements; a static (EC)DH cipher suite, client authentication with a static (EC)DH private key, and the injection of a known certificate/key pair into the client.  The wolfSSL embedded SSL library does support static ECDH cipher suites, whereas static DH cipher suites are not supported.  While client authentication is supported in wolfSSL ecdsa_fixed_ecdh is not supported, meaning yaSSL / CyaSSL / wolfSSL are not vulnerable to the attack.<br /><br />We still recommend the use of our max strength build to ensure the highest level of security, max strength ensures Perfect Forward Secrecy cipher suites only: <a href="http://www.wolfssl.com/wolfSSL/Blog/Entries/2015/7/10_wolfSSL_Max_Strength_Build.html">http://www.wolfssl.com/wolfSSL/Blog/Entries/2015/7/10_wolfSSL_Max_Strength_Build.html</a> .  The next release of wolfSSL disables all static cipher suites by default and documents their use as deprecated and insecure as the paper suggests.<br /><br />Please contact wolfSSL by email at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at 425 245 8247 if you have any security related questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt now Supports Secure Remote Password',
    'post_content' => 'We are pleased to announce that wolfCrypt now has support for SRP6a (Secure Remote Password Protocol version 6a).<br /><br />SRP is a password authentication and key-exchange protocol suitable for authenticating users and exchanging keys over an untrusted network designed by Thomas Wu at the Computer Science Department of Stanford University.<br /><br />The SRP implementation can be enabled with either:<br /><br />./configure --enable-srp<br /><br />OR<br /><br />defining WOLFCRYPT_HAVE_SRP if you`re not using autotools.<br /><br />The wolfCrypt SRP documented api can be found directly in the srp.h file in our repository at github.<br /><br />If you have any questions about using SRP with wolfCrypt or the wolfSSL embedded SSL/TLS library please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-8-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Black Hat USA 2015',
    'post_content' => 'As we <a href="perma://BLPageReference/F8C14855-08C1-49E4-A999-557F62A4CB5A">mentioned in our previous post</a>, the wolfSSL team will be exhibiting and attending the Black Hat conference this week in Las Vegas, NV.<br /><br />We’re excited to visit with attendees about securing devices and applications using the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a> embedded SSL/TLS library and <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt</a> cryptography engine.  If you’re going to be at the conference, stop by and see us at booth #464!<br /><br />Black Hat USA 2015: <a href="http://www.blackhat.com/us-15/">http://www.blackhat.com/us-15/</a><br />Briefings Schedule: <a href="https://www.blackhat.com/us-15/briefings.html">https://www.blackhat.com/us-15/briefings.html</a><br /><br />If you you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at (425) 245-8247.',
    'post_status' => 'publish',
    'post_date' => date('2015-8-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Black Hat USA 2015',
    'post_content' => 'Black Hat returns to Las Vegas for the 18th year and once again wolfSSL will be one of the sponsors for the event.  Black Hat is from August 1st  through August 6th. wolfSSL will be displaying at booth number 464 please stop by and check out all our exciting products.<br /><br />Here are some of the topics we will be covering at Black Hat 2015:<br />	•	Quantum-Safe wolfSSL<br />	•	wolfSSL Max Strength Build <br />	•	wolfCrypt API Reference Now Available<br />	•	wolfCrypt with FIPS certification <br />	•	wolfSSL with Memory Optimized Curve22519 and ED22519<br />	•	Kerberos to Andriod with wolfCrypt <br />	•	wolfSSL on Intel Galileo<br />	•	wolfSSL in MySQL    <br />	•	wolfSSL with ChaCha20 / Poly1305 AEAD cipher suites<br /><br />Dont miss out register today. <a href="https://www.blackhat.com/us-15/registration.html">https://www.blackhat.com/us-15/registration.html</a><br /><br />If you are already planning on attending please stop by, say hello and chat with us about cryptography, SSL/TLS, and hardware encryption. Unlike most exhibitors, we will have our engineering staff on hand to handle your most technical questions.<br /><br />If you you would like to set up a specific meeting time, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at (425) 245-8247.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Testing wolfSSL with Infer, Facebook`s new Static Analyzer',
    'post_content' => 'On Thursday, June 11th, Facebook open-sourced a new software development tool called Infer--a next generation static analyzer. Static analysis is the process of using a tool to scan for bugs in source code without actually running a program. Infer has the ability to detect null pointer access errors, as well as resource and memory leaks. Facebook estimates that Infer can catch up to 80% of these errors. <br /><br />At wolfSSL we were quick to adopt this new opportunity to validate our code, and we ran Infer against the wolfSSL embedded SSL/TLS library codebase. The results were good:<br /><br />$ inferTraceBugs<br />No issues found<br /><br />As you can see, infer did not find any additional errors in wolfSSL`s codebase, giving us one more reason to be confident in the safety and quality of our code. <br /><br />Going forward, we will integrate Facebook`s Infer into our arsenal of code analysis and testing tools. We run these tools throughout the development cycle to help ensure that we only release the safest possible product.<br /><br />To read more about infer, visit <a href="http://fbinfer.com/">fbinfer.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'A Comparison of Differences in TLS 1.1 and TLS 1.2',
    'post_content' => 'As stated in the TLS 1.1 and 1.2 protocol definitions (RFC 4346, RFC 5246), “The primary goal of the TLS protocol is to provide privacy and data integrity between two communicating applications.”  TLS 1.2 is an improvement to the TLS 1.2 standard, but how exactly do they differ?  What was changed in TLS 1.2 to warrant a new version of the protocol?<br /><br />Listed below are the changes made to both version 1.1 and 1.2 of the TLS protocol.  TLS 1.2 support is making headway in more and more new projects today.  The wolfSSL embedded SSL/TLS library fully supports SSL 3.0 (disabled at runtime by default), TLS 1.0, TLS 1.1, and TLS 1.2.<br /><b><br /></b><b>	A.	 TLS 1.1<br /></b><b><br /></b>This protocol was defined in RFC 4346 in April of 2006, and is an update to TLS 1.0.  The major changes are:<br /><br />	-	The Implicit Initialization Vector (IV) is replaced with an explicit IV to protect against Cipher block chaining (CBC) attacks.<br />	-	Handling of padded errors is changed to use the bad_record_mac alert rather than the decryption_failed alert to protect against CBC attacks.<br />	-	IANA registries are defined for protocol parameters<br />	-	Premature closes no longer cause a session to be non-resumable.<br /><br />RFC 4346:  <a href="http://tools.ietf.org/html/rfc4346#section-1.1">http://tools.ietf.org/html/rfc4346#section-1.1</a><br /><br /><b>	A.	 TLS 1.2<br /></b><b><br /></b>This protocol was defined in RFC 5246 in August of 2008.  Based on TLS 1.1, TLS 1.2 contains improved flexibility. One of the primary goals of the TLS 1.2 revision was to remove the protocol’s dependency on the MD5 and SHA-1 digest algorithms.  The major differences include:<br /><br />	-	The MD5/SHA-1 combination in the pseudorandom function (PRF) was replaced with cipher-suite-specified PRFs.<br />	-	The MD5/SHA-1 combination in the digitally-signed element was replaced with a single hash.  Signed elements include a field explicitly specifying the hash algorithm used.<br />	-	There was substantial cleanup to the client`s and server`s ability to specify which hash and signature algorithms they will accept.<br />	-	Addition of support for authenticated encryption with additional data modes.<br />	-	TLS Extensions definition and AES Cipher Suites were merged in.<br />	-	Tighter checking of EncryptedPreMasterSecret version numbers.<br />	-	Many of the requirements were tightened<br />	-	Verify_data length depends on the cipher suite<br />	-	Description of Bleichenbacher/Dlima attack defenses cleaned up.<br />	-	Alerts must be sent in many cases<br />	-	After a certificate_request, if no certificates are available, clients now MUST send an empty certificate list.<br />	-	TLS_RSA_WITH_AES_128_CBC_SHA is now the mandatory to implement cipher suite.<br />	-	Added HMAC-SHA256 cipher suites.<br />	-	Removed IDEA and DES cipher suites.  They are now deprecated.<br /><br />RFC 5246:  <a href="http://tools.ietf.org/html/rfc5246">http://tools.ietf.org/html/rfc5246</a><br /><br /><b>C.  Goals of the TLS Protocol<br /></b><br /><b>	-	Cryptographic security</b>: TLS should be used to establish a secure connection between two parties.<br /><b>	-	Interoperability</b>: Independent programmers should be able to develop applications utilizing TLS that can successfully exchange cryptographic parameters without knowledge of one another`s code.<br /><b>	-	Extensibility</b>: TLS seeks to provide a framework into which new public key and bulk encryption methods can be incorporated as necessary.  This will also accomplish two sub-goals: preventing the need to create a new protocol (and risking the introduction of possible new weaknesses) and avoiding the need to implement an entire new security library.<br /><b>	-	Relative efficiency</b>: Cryptographic operations tend to be highly CPU intensive, particularly public key operations.  For this reason, the TLS protocol has incorporated an optional session caching scheme to reduce the number of connections that need to be established from scratch.  Additionally, care has been taken to reduce network activity.<br /><br /><b>Resources:<br /></b>If you would like to read more about SSL or TLS, here are several resources that might be helpful:<br />wolfSSL Manual (<a href="https://www.wolfssl.com/wolfSSL/Docs-wolfssl-manual-toc.html">https://www.wolfssl.com/wolfSSL/Docs-wolfssl-manual-toc.html</a>)<br />TLS - Wikipedia (<a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">http://en.wikipedia.org/wiki/Transport_Layer_Security</a>)<br />SSL vs TLS - What`s the Difference? (<a href="http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html">http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html</a>)<br />Cisco - SSL: Foundation for Web Security (<a href="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html">http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html</a>)<br /><br />If you have any questions or would like to talk to the wolfSSL team about more information, please contact <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Exhibiting at ESC Silicon Valley 2015',
    'post_content' => 'wolfSSL will be exhibiting at ESC Silicon Valley this week in Santa Clara, CA.  Topics at ESC include all aspects of embedded systems development - ranging from design through hardware, systems, and connected devices.<br /><br />We encourage attendees to stop by the wolfSSL booth to say hello! We`ll be talking about the wolfSSL embedded SSL/TLS library, wolfCrypt crypto library, and how to best secure your embedded project.  wolfSSL is at <b>pedestal 46</b>.<br /><br /><b>ESC Demo Hall Hours:<br /></b>Tuesday, July 21, 2015: 11:00AM - 5:30PM<br />Wednesday, July 22, 2015: 11:00AM - 5:30PM<br /><br />To schedule a meeting during ESC, email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Quantum-Safe wolfSSL',
    'post_content' => 'wolfSSL, in partnership with Security Innovation, has added support for the proposed "Quantum-safe hybrid" ciphersuite. Having this cipher suite supported in the wolfSSL embedded TLS library allows two parties to use any existing ciphersuite and "quantum-safe" any traffic protected by that ciphersuite. This means that an attacker who records the traffic and later develops a quantum computer cannot go back and crack the session.<br /><br />The super-fast NTRU algorithm, featuring efficient key generation, encryption, and decryption, is a quantum computer resistant algorithm currently being used with the quantum-safe ciphersuite. By using a one-time NTRU key to encrypt extra secret material, the handshake allows users to continue using their existing ciphersuites (which may be necessary for certificate support or because they have regulations that require it) while at the same time benefiting from the true long-term security that NTRU gives. Because NTRU is fast, the additional processing load from the use of this ciphersuite is low. The ciphersuite is provably as secure as classical ciphersuites. Users can use it without concern that it is reducing their security, making this genuinely a zero-risk, near-zero-cost approach to obtaining protection against government or other actors, now and in the future.<br /><br />"We`re excited to continue our partnership with wolfSSL and applaud wolfSSL`s vision in being first to market with this innovative, future-proof approach," said William Whyte, Chief Scientist at Security Innovation. "wolfSSL has a name for being best in the field for embedded devices; with this approach, WolfSSL is enabling their customers to protect data on any device, not just now but for years to come."<br /><br />To view and use the quantum safe handshake extensions first download and install NTRU (which an Open Source version can be found at <a href="https://github.com/NTRUOpenSourceProject/ntru-crypto">https://github.com/NTRUOpenSourceProject/ntru-crypto</a>) then download the most recent wolfSSL from GitHub ( <a href="https://github.com/wolfSSL/wolfssl">https://github.com/wolfSSL/wolfssl</a> ) and compile using ./configure --with-ntru. The QSH ciphersuite specification will be available from the IETF website the week of July 19th. A security proof for the approach is provided in <a href="https://eprint.iacr.org/2015/287">https://eprint.iacr.org/2015/287</a>.<br /><br />For more information about the implementation or use contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-7-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Max Strength Build',
    'post_content' => 'wolfSSL (formerly CyaSSL) recently added a build option called “Max Strength”. This build option forces most cipher suites to be disabled at compile time to prevent their accidental use during run time. Options such as MD5, 3DES, and ARC4 are left out of the build completely.<br /><br />The cipher suites that are enabled by default have Perfect Forward Security (PFS) and Authenticated ciphers (AEAD). The remaining suites have the AEAD ciphers including at least one of AES-GCM, AES-CCM, or CHACHA-POLY1305; ECDHE or DHE; ECDSA or RSA; SHA-256 and SHA-384. The minimum allowed DHE key bit-size is set to 2048 bits.<br /><br />To enable the maximum strength build with wolfSSL, on the configure command line add the option “--enable-maxstrength”, or add “#define WOLFSSL_MAX_STRENGTH” to your settings.h file. ',
    'post_status' => 'publish',
    'post_date' => date('2015-7-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL unaffected by OpenSSL July 9th Security Advisory',
    'post_content' => 'OpenSSL released a security advisory on July 9th 2015: <a href="https://www.openssl.org/news/secadv_20150709.txt">https://www.openssl.org/news/secadv_20150709.txt</a> .  Some wolfSSL embedded TLS users are probably wondering if similar security fixes are required in wolfSSL.  The answer to that is no.  Specifically, Alternative chains certificate forgery (CVE-2015-1793) is an OpenSSL implementation bug.  Faulty logic allowed untrusted certificates to appear as trusted.  Since wolfSSL, CyaSSL, and yaSSL embedded SSL libraries have a completely different code base from OpenSSL we do not share this defect.<br /><br />Please contact wolfSSL by email at <a href="mailto:info@wolfssl.com">info</a><a href="mailto:fips@wolfssl.com/">@wolfssl.com</a>, or call us at 425 245 8247 if you have any security related questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Inc. scores 100% in support satisfaction',
    'post_content' => 'Hi!  As many of our users know, we use Zendesk to track our support tickets.  Zendesk includes some sweet tools that we enjoy, including an automated user satisfaction tool.  The tool surveys users after they have submitted a support case to us.  Upon review of our support statistics for the first half of this year, we were pleased to find that 100% of our users who completed our satisfaction survey are happy!<br />  <br />Our response times and resolution times were also ahead of benchmarks.<br /><br />This note is also an opportunity to remind our open source users out there that wolfSSL support for open source projects is 100% available, and still 100% free.  Just let us know how we can help.  If you need support, new features or enhancements, you are always welcome to email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt API Reference Now Available',
    'post_content' => 'For those who want to use wolfCrypt separately to do cryptography operations, we are happy to announce that the first version of the wolfCrypt API documentation is now available.  The wolfCrypt API Reference is available to browse online and also available for download in PDF format.<br /><br />Link: <a href="perma://BLPageReference/2771614E-3CF0-49A1-A3C8-C6D1C301CBE1">wolfCrypt API Reference</a><br /><br />wolfCrypt has a broad range of support for current and progressive algorithms as well as support for a number of different hardware crypto modules.<br /><br />Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-7-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Memory Optimized Curve25519 and Ed25519',
    'post_content' => 'If working on a memory constrained device we now have memory optimized Ed25519 and Curve25519 options. This can be enabled with using the configure setting “./configure –enable-ed25519=small –enable-curve25519=small –enable-sha512”.<br /><br />The new feature allows for a trade off in memory usage versus speed. All of the operations in the memory optimized build, except for SHA-512, use types that are equal to or less than 32 bits in size. On a Raspberry Pi the size of Ed25519 and Curve25519 is just under 18k for the memory optimized build versus 83k for the standard. The trade off for less memory does come at a hit to run time but for use cases that don`t generate many keys and have very little memory to work with this is a great option.<br /><br />For more info please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Inc Partners with Freescale to Deliver Advanced, High Performance IoT Security Solutions, Complete with Embedded SSL and Hardware Based Encryption',
    'post_content' => '<i>“wolfSSL enables Freescale`s hardware encryption for embedded tls, embedded cryptography, and the IoT”<br /><br /></i>wolfSSL Inc, the most popular embedded SSL, cryptography, and FIPS 140-2 provider for the IoT, has partnered with Freescale to deliver high performance, hardware enabled cryptography for Freescale`s MQX RTOS on the Kinetis platform. The hardware cryptography is enabled through wolfSSL`s well integrated and deeply tested support for the Kinetis platform`s MMCAU, which supports AES, SHA, and 3DES.<br /><br />Larry Stefonic, wolfSSL Inc CEO noted that "Our support for the latest hardware cryptography from Freescale affords IoT developers a world of security and performance advantages. By combining forces with Freescale to leverage the Kinetis based crypto, we support the IoT community by providing smaller footprint, dramatically increased performance, and faster time to market. Securing a new IoT device can be daunting, but our joint effort with Freescale makes it much easier."<br />More details and benchmarks for wolfSSL running on Kinetis can be found at:<br /><br /><a href="http://www.prweb.net/Redirect.aspx?id=aHR0cDovL3dvbGZzc2wuY29tL3dvbGZTU0wvd29sZnNzbC1mcmVlc2NhbGUuaHRtbA==">http://wolfssl.com/wolfSSL/wolfssl-freescale.html</a> and<br /><br /><a href="http://www.prweb.net/Redirect.aspx?id=aHR0cDovL3d3dy5mcmVlc2NhbGUuY29tL3dlYmFwcC9jb25uZWN0L2Rpc3BsYXlQYXJ0bmVyUHJvZmlsZS5zcD9wYXJ0bmVySWQ9NzQyMCZmc3JjaD0xJnNyPTEmcGFnZU51bT0x">http://www.freescale.com/webapp/connect/displayPartnerProfile.sp?partnerId=7420&fsrch=1&sr=1&pageNum=1</a><br /><br /><b>About wolfSSL: <br /></b>Founded in 2004, wolfSSL Inc provides high-end security, while also having a small enough footprint to be perfect for the IoT. <br /><br />Reference: <a href="http://www.prweb.com/releases/2015/06/prweb12795767.htm">http://www.prweb.com/releases/2015/06/prweb12795767.htm</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2015-6-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Expert Interview: Is the future of wearables now?',
    'post_content' => 'Larry Stefonic, our CEO, was recently interviewed by <a href="http://technologyadvice.com/">TechnologyAdvice</a> on the future of wearables: an important space for embedded SSL/TLS and cryptography.<br /><br />With the advent of the Internet of Things we are increasingly using connected devices throughout our day.  Unsecured, these devices leave us vulnerable in ways not even imaginable 20 years ago.  Larry talks about wolfSSL’s role in meeting customer demand for securing these varied devices from diverse and dedicated attackers.<br /><br />With medical devices in particular becoming connected, he positions us as having exciting challenges securing new attack surfaces that have never before existed.  As doctors and medical companies push the boundaries of what devices can be built, we work on ensuring that those devices and their patients are secure.  Read more below.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Solid Con',
    'post_content' => 'If you’re in San Francisco’s Marina District today come see wolfSSL at the O’Reilly Solid Conference, we’re at booth P5.  The focus of the show is IoT hardware and software.  We’ve talked to lots of people about getting TLS into their designs.  If you have a FIPS question, embedded SSL issue, or general Crypto problem stop by and talk to us',
    'post_status' => 'publish',
    'post_date' => date('2015-6-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.6.0 Released',
    'post_content' => 'The new release of the wolfSSL embedded SSL library has bug fixes and new features including:<br /><br />- Max Strength build that only allows TLSv1.2, AEAD ciphers, and PFS (Perfect<br />   Forward Secrecy).  With --enable-maxstrength.<br />- Server side session ticket support, the example server and echoserver use the<br />   example callback myTicketEncCb(), see wolfSSL_CTX_set_TicketEncCb().<br />- FIPS version submitted for iOS.<br />- TI Crypto Hardware Acceleration.<br />- DTLS fragmentation fixes.<br />- ECC key check validation with wc_ecc_check_key().<br />- 32bit code options to reduce memory for Curve25519 and Ed25519.<br />- wolfSSL JNI build switch with --enable-jni.<br />- PicoTCP support improvements.<br />- DH min ephemeral key size enforcement with wolfSSL_CTX_SetMinDhKey_Sz().<br />- KEEP_PEER_CERT and AltNames can now be used together.<br />- ChaCha20 big endian fix, big endian users should update.<br />- SHA-512 signature algorithm support for key exchange and verify messages.<br />- ECC make key crash fix on RNG failure, ECC users must update.<br />- Improvements to usage of time code.<br />- Improvements to VS solution files.<br />- GNU Binutils 2.24 ld has problems with some debug builds, to fix an ld error<br />  add -fdebug-types-section to C_EXTRA_FLAGS<br /><br />- No high level security fixes that requires an update though we always<br />  recommend updating to the latest (except note 14, ecc RNG failure)<br /><br />See INSTALL file for build instructions.<br />More info can be found on-line at <a href="http://wolfssl.com/yaSSL/Docs.html">http://wolfssl.com/yaSSL/Docs.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-6-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Level of Security provided in ChaCha20-Poly1305 AEAD',
    'post_content' => 'Have you heard about the recent ChaCha20-Poly1305 AEAD and are wondering about how secure it is? It`s comprised of two ciphers, ChaCha20 and Poly1305, that are designed to be constant time, making it naturally resistant to timing attacks. The AEAD is being used by many notable companies that also trust it for their security - such as Google Chrome and Apple’s HomeKit. ChaCha20-Poly1305 has gone through security analysis and is considered secure.<br /><br />To view a formal security analysis done on Adam Langley`s IETF protocol using ChaCha20-Poly1305 see <a href="https://eprint.iacr.org/2014/613.pdf">https://eprint.iacr.org/2014/613.pdf</a><br /><br />For added analysis done on Salsa (what ChaCha is based from) see section 5 from <a href="http://cr.yp.to/snuffle/salsafamily-20071225.pdf">http://cr.yp.to/snuffle/salsafamily-20071225.pdf</a><br /><br />For any questions about wolfSSL please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Unaffected by Recent OpenSSL Security Fixes',
    'post_content' => 'OpenSSL released a security advisory on June 11th 2015: <a href="https://www.openssl.org/news/secadv_20150611.txt">https://www.openssl.org/news/secadv_20150611.txt</a>.  Some wolfSSL embedded TLS users are probably wondering if similar security fixes are needed in wolfSSL.  The answer to that is no.  Specifically, CVE-2015-1788 - 1792 and CVE-2014-8176 are OpenSSL implementation bugs.  Since wolfSSL and CyaSSL embedded SSL libraries have a completely different code base from OpenSSL we do not share these defects.  The other advisory is about Logjam and export grade crypto, wolfSSL is not vulnerable to that either.  Please see this blog post for more details: <a href="http://wolfssl.com/wolfSSL/Blog/Entries/2015/5/20_wolfSSL_and_CyaSSL_are_Not_Vulnerable_to_the_Recent_Logjam_Attack.html">http://wolfssl.com/wolfSSL/Blog/Entries/2015/5/20_wolfSSL_and_CyaSSL_are_Not_Vulnerable_to_the_Recent_Logjam_Attack.html</a><br /><br />Please contact wolfSSL by email at <a href="mailto:info@wolfssl.com">info</a><a href="mailto:fips@wolfssl.com/">@wolfssl.com</a>, or call us at 425 245 8247 if you have any security related questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'FIPS 186-4 KeyGen',
    'post_content' => 'To support our customers pursuing FIPS 140-2 validations or Common Criteria evaluations, wolfSSL is adding FIPS 186-4 KeyGen to our next FIPS 140-2 validation. <br /><br />We are scheduled to complete CAVP algorithm testing in June and testing with our FIPS Laboratory in July.<br /><br />Please contact wolfSSL at <a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a> if you need a tested implementation of FIPS 186-4 KeyGen.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL JNI 1.2.0 Released',
    'post_content' => 'Version 1.2.0 of wolfSSL JNI is now available for download.  wolfSSL JNI provides Java applications with a convenient Java API to the widely-used wolfSSL embedded SSL/TLS library, including support for TLS 1.2 and DTLS 1.2.<br /><br />This release contains bug fixes and features including:<br /><br />	-	Updated support for wolfSSL 3.4.6 and CyaSSL to wolfSSL name change<br />	-	Benchmark functionality in example client<br />	-	Updated example certificates<br />	-	Better detection of Java home on Mac and Linux<br /><br />wolfSSL JNI 1.2.0 can be downloaded from the <a href="https://wolfssl.com/wolfSSL/download/downloadForm.php">wolfSSL download page</a> and the wolfSSL JNI Manual can be found <a href="perma://BLPageReference/08E0BE4C-B9E0-4351-88B7-ADC59155FC56">here</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting and Speaking at Freescale Technology Forum 2015',
    'post_content' => 'We’re heading to Freescale Technology Forum, June 22-25 in Austin, Texas, where we’re showcasing our latest embedded solutions. The FTF training session course catalog is open, giving you access to 150+ technical session abstracts. wolfSSL will be helping to bring you two sessions this year:<br /><br /><b>    FTF-INS-F1196:  Securing the Smart Home<br /></b>    <b>Where: </b>Lone Star Ballroom E - Level 3<br />    <b>When:</b> Wednesday (6/24/2015), 11:00am - 1:00pm<br />    <b>Session Level: </b>Intermediate<br /><br />    <b>Abstract:</b><br />    This session will focus on leveraging 2 Factor Authentication, data in transit and<br />    data at rest security counter measures to ensure effective security for a next-generation<br />    integrated secure smart home prototype. This class will demonstrate and describe specific<br />    system level examples with a detailed review of the hardware and software as leveraged<br />    by the working prototype.<br /><br />    <b>FTF-INS-F1145:  Hands-On Workshop: Create Secure Network-Connected<br />    Embedded Systems with CyaSSL and Kinetis SDK</b><br />    <b>Where:</b> Griffin Exhibition Hall 2 - Level 2<br />   <b> When:</b> Monday (6/22/2015), 1:00pm - 3:00pm<br />    <b>Session Level:</b> Intermediate<br /><br /><b>    Abstract:<br /></b>    Secure your data communications with TLS/SSL for embedded systems, now available<br />    in an easy-to-use package for Kinetis SDK and MQX™ RTOS. Learn how to enable secure<br />    web server connections to browsers and mobile devices as well as web client connections<br />    to the cloud.<br /><br />In our sessions we will be discussing secure SSL/TLS client/server connections with KDS using the wolfSSL embedded SSL/TLS library. FTF-INS-F1196 will be demonstrating a FRDM-K64F client connecting to i.MX6 gateway over TLS. FTF-INS-F1145 will use the same FRDM-K64F device, but instead acting as a secure web server.<br /><br />We look forward to seeing you at the Freescale Technology Forum.  Discussion at the wolfSSL stand will include minimizing resource use, new progressive algorithms, easily leveraging SSL/TLS and cryptography, support for CodeWarrior, KDS and Kinetis SDK. One of our engineers, Chris Conlon will be in our booth to answer all your technical questions. Please stop by.<br /><br />Freescale Technology Forum 2015: <a href="https://ftf.freescale.com/">https://ftf.freescale.com/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-6-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SP 800-90A Health Testing Mandatory for FIPS 140-2 Cryptographic Modules',
    'post_content' => 'Effective immediately, FIPS Testing Laboratories must verify that cryptographic modules implement the health testing described in SP 800-90A (Section 11.3).<br /><br />The wolfCrypt FIPS 140-2 Cryptographic Module (currently in “Coordination” at the CMVP) implements the health testing for the SP 800-90A Hash_DRBG.  <br /><br />Cryptographic modules that do not include health testing will be placed on “HOLD” by the CMVP. The status on the NIST Modules in Process list will return to “IUT” (Implementation Under Test) until the health testing is implemented and retesting is completed.<br /><br />See the recent blog post from InfoGard Laboratories for additional details: <a href="http://fips140.blogspot.com/2015/05/urgent-cmvp-guidance-effective.html">http://fips140.blogspot.com/2015/05/urgent-cmvp-guidance-effective.html</a><br /><br />Please contact wolfSSL by email at <a href="mailto:fips@wolfssl.com">fips@wolfssl.com</a>, or call us at 425 245 8247 if you have any FIPS 140-2 questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-6-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'O’Reilly Solid Conference 2015',
    'post_content' => 'The wolfSSL team will be in San Francisco June 23rd-25th, exhibiting at the O’Reilly Solid Conference in the Fort Mason Center.  We are a technically oriented team, so we’ll have our engineers in the booth, ready to discuss your deepest IoT security topics.<br /><br />Here are some of the topics we’ll be covering at O’Reilly Solid:<br /><br />- Using wolfSSL embedded SSL with HomeKit devices<br />- Securing data on your device<br />- Securing your devices’ communications<br />- wolfSSL on Intel Galileo<br />- wolfCrypt with FIPS certification<br />- Kerberos on devices, with wolfCrypt<br />- wolfSSL with ChaCha20 / Poly1305 AEAD cipher suites<br />- wolfSSL 3.4.6 is now available with lots of new features<br /><br />Register today for O’Reilly Solid     <a href="http://solidcon.com/internet-of-things-2015">http://solidcon.com/internet-of-things-2015</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-5-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and CyaSSL are Not Vulnerable to the Recent Logjam Attack',
    'post_content' => 'The Logjam Attack exploits legacy SSL cipher suites from the 1990s that use DH and DHE export keys.  By definition a server in export mode has to use a low bit strength DH key (512 bits or less), which can now be cracked swiftly.  Even if a client supports export cipher suites but doesn’t broadcast support for them a man in the middle attacker can force the server to use the low grade key.  Fortunately for wolfSSL embedded SSL users we do not support export cipher suites.  No versions of wolfSSL or CyaSSL are vulnerable to the Logjam attack.  Our next version will allow build-time or run-time setting of minimum ephemeral key strengths for embedded TLS.<br /><br />For more information check out <a href="https://weakdh.org/">https://weakdh.org</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-5-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Increases Crypto Performance',
    'post_content' => '“wolfSSL uses Intel`s extended instructions to accelerate crypto algorithms for IoT.<br /><br />wolfSSL, an open source SSL/TLS security company has optimized the wolfSSL Transport Layer Security (TLS) library on 5th generation Intel® Core™ processors. With the inclusion of Intel’s extended instructions developers can use the wolfSSL libraries for applications on many devices, including embedded technologies. The resulting improvements mean end users will see enhanced speed and security with reduced power consumption across a wide range of devices including Internet of Things.<br /><br />While cryptography arithmetic is often larger than many systems can support, even for 64-bit systems, by using Intel`s AVX1/2 SIMD instructions, developers can make use of the new optimizations to whittle down the compute needed, thereby reducing complexity and increasing performance. wolfSSL benchmarks show the wolfSSL secure hash algorithms are now significantly faster. The Advanced Vector Extensions perform multiple word operations with a single instruction (in parallel) to provide this boost in speed. wolfSSL also integrated Intel® Secure Key Technology (<a href="http://www.prweb.net/Redirect.aspx?id=aHR0cHM6Ly9zb2Z0d2FyZS5pbnRlbC5jb20vZW4tdXMvYmxvZ3MvMjAxMi8wNS8xNC93aGF0LWlzLWludGVsci1zZWN1cmUta2V5LXRlY2hub2xvZ3k=">https://software.intel.com/en-us/blogs/2012/05/14/what-is-intelr-secure-key-technology </a>) to provide a high-quality, high-performance entropy source and random number generator.<br /><br />Larry Stefonic, CEO of wolfSSL, adds "Handcrafting the world`s best crypto is our nature, so it is great to leverage Intel`s fantastic engineering support for the primitives to enhance our product. Our wolfSSL customers will enjoy better performance as a result of these software optimizations on 5th generation Intel Core processors.”<br />More detail on the performance can be found on the wolfSSL blog (<a href="http://www.prweb.net/Redirect.aspx?id=aHR0cDovL3d3dy55YXNzbC5jb20veWFTU0wvQmxvZy9FbnRyaWVzLzIwMTUvNC8xNl9JbnRlbHNfRXh0ZW5kZWRfSW5zdHJ1Y3Rpb25zX0FjY2VsZXJhdGVzX0hhc2hfQWxnb3JpdGhtcy5odG1s">http://www.yassl.com/yaSSL/Blog/Entries/2015/4/16_Intels_Extended_Instructions_Accelerates_Hash_Algorithms.html</a>) while developers can download the latest release of wolfSSL on their website <a href="http://www.prweb.net/Redirect.aspx?id=aHR0cHM6Ly93b2xmc3NsLmNvbS95YVNTTC9kb3dubG9hZC9kb3dubG9hZEZvcm0ucGhw">https://wolfssl.com/yaSSL/download/downloadForm.php</a>.<br /><br />About wolfSSL: <br /><br />Founded in 2004, wolfSSL is a dual licensed, open source and commercial company. wolfSSL provides high-end security, while also having a small enough footprint to be perfect for embedded systems. <br />For more information, please visit <a href="http://www.prweb.net/Redirect.aspx?id=aHR0cDovL3d3dy53b2xmU1NMLmNvbQ==">http://www.wolfSSL.com</a>.”<br /><br />Reference: <a href="http://www.prweb.com/releases/2015/04/prweb12660791.htm">http://www.prweb.com/releases/2015/04/prweb12660791.htm</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-4-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Android Kerberos with FIPS 140-2 Crypto',
    'post_content' => 'Hi!  A few years ago we collaborated with the MIT Kerberos team to port Kerberos to Android with wolfCrypt as the crypto engine.  We have recently worked to get our wolfCrypt product FIPS 140-2 certified, and as such, can make a FIPS 140-2 version of Kerberos available to the market on Android and other platforms.  Let us know if you’re interested and need any support.  Contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2015-4-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Intel’s Extended Instructions Accelerates Hash Algorithms',
    'post_content' => 'Curious about how new machine instructions can accelerate crypto algorithms?  Most recently we added Intel’s Advanced Vector Extensions (AVX1 and 2) to wolfSSL’s secure hash algorithms.  Benchmarks show it improves the performance of SHA-256, 384 and 512 up to 75% (See: figure below). <br /><br />Intel`s AVX1/2 allows 128bit/256bit registers to perform multiple word operations with a single instruction in parallel.<br />The hashes take advantage of the AVX register parallelism and functional stitching between AVX and conventional registers as well.<br /><br />How can you get it? Simply specify <b>--enable-intelasm</b> during ./configure with our latest version. It checks the instruction availability at run time, and you get the maximum performance improvement on your machine.<br /><br />For further detail visit our "wolfSSL / wolfCrypt Benchmarks" page (<a href="http://wolfssl.com/yaSSL/benchmarks-cyassl.html">http://wolfssl.com/yaSSL/benchmarks-cyassl.html</a>).<br /><br />---<br /><b>AVX1:1.8GHz, Intel Core i5<br />AVX2: Intel Broadwell<br /></b>---<br />AVX2:    SHA-256  50 megs took 0.320 seconds, 156.118 MB/s Cycles per byte =  9.75  = 47%<br />AVX1:   SHA-256  50 megs took 0.272 seconds, 184.068 MB/s Cycles per byte = 11.89  = 39%<br />Normal: SHA-256  50 megs took 0.376 seconds, 132.985 MB/s Cycles per byte = 16.46<br /><br />AVX2:    SHA-384  50 megs took 0.226 seconds, 221.318 MB/s Cycles per byte =  6.88  = 42%<br />AVX1:   SHA-384  50 megs took 0.192 seconds, 260.975 MB/s Cycles per byte =  8.39  = 9%<br />Normal: SHA-384  50 megs took 0.209 seconds, 239.743 MB/s Cycles per byte =  9.13<br /><br />AVX2:    SHA-512  50 megs took 0.224 seconds, 223.120 MB/s Cycles per byte =  6.82  = 75%<br />AVX1:   SHA-512  50 megs took 0.188 seconds, 266.126 MB/s Cycles per byte =  8.22  = 50%<br />Normal: SHA-512  50 megs took 0.281 seconds, 177.997 MB/s Cycles per byte = 12.29<br />===',
    'post_status' => 'publish',
    'post_date' => date('2015-4-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What is a Stream Cipher?',
    'post_content' => 'A stream cipher encrypts plaintext messages by applying an encryption algorithm with a pseudorandom cipher digit stream (keystream). Each bit of the message is encrypted one by one with the corresponding keystream digit. Stream ciphers are typically used in cases where speed and simplicity are both requirements. If a 128 bit block cipher such as AES were to be used in place of a stream cipher where it was encrypting messages of 32 bit blocks, 96 bits of padding would remain. This is an inefficient approach and one reason why a stream cipher would be preferred, since they operate on the smallest possible unit. <br /><br />Some common stream ciphers include RC4 (which has been shown to be vulnerable to attacks), Salsa20, ChaCha (a seemingly better variant of Salsa20), Rabbit, and HC-256, among others. Block ciphers can be used in stream mode to act as a stream cipher. If a block cipher is run in CFB, OFB, or CTR mode, it does not require additional measures to handle messages that aren’t equivalent to the length of multiples of the block size and eliminates the padding effect. <br /><br />For information on the stream ciphers that can be implemented with CyaSSL or to learn more about the wolfSSL lightweight, embedded SSL library, go to <a href="mailto:wolfssl.com">wolfssl.com</a> or contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br /><b>References<br /></b><br />[1]   Stream cipher. (2014, November 19). In Wikipedia, The Free Encyclopedia. Retrieved 16:19, <br />        December <br />        19, 2014, from <a href="http://en.wikipedia.org/w/index.php?title=Stream_cipher&oldid=634494612">http://en.wikipedia.org/w/index.php?title=Stream_cipher&oldid=634494612</a>.<br /><br />[2]   Margaret Rouse. Stream Cipher. (2005). Available URL: <br />       <a href="http://searchsecurity.techtarget.com/definition/stream-cipher">http://searchsecurity.techtarget.com/definition/stream-cipher</a>. <br /><br />[3]   Block cipher mode of operation. (2014, December 12). In Wikipedia, The Free <br />       Encyclopedia. Retrieved 17:13, December 19, 2014, from<br />   <a href="http://en.wikipedia.org/w/index.php?title=Block_cipher_mode_of_operation&oldid=637837298">http://en.wikipedia.org/w/index.php?title=Block_cipher_mode_of_operation&oldid=637837298</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2015-4-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at RSA USA 2015',
    'post_content' => 'wolfSSL will be exhibiting at <a href="http://www.rsaconference.com/events/us15">RSA USA 2015</a> this year.  The conference will be held April 20-24, 2015 at Moscone Center in San Francisco, CA.  In addition to catching users up on progress we’ve made in the last year, we will be talking about the wolfSSL embedded SSL library, wolfCrypt crypto engine, SSL inspection, and how to best secure devices and applications.  wolfSSL will be in <a href="http://www.rsaconference.com/events/us15/expo-sponsors/exhibitor-list/1632/wolfssl-inc">booth S2613</a>.<br /><br />If you are attending the 2015 USA RSA Conference this year, we welcome you to stop by our booth to visit and say hello.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-3-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.4.6 Embedded SSL Now Available',
    'post_content' => 'Release 3.4.6 (March 30, 2015) of the wolfSSL lightweight embedded SSL library has bug fixes and new features including:<br /><br />	•	Intel Assembly Speedups using instructions rdrand, rdseed, aesni, avx1/2, rorx, mulx, adox, adcx .  They can be enabled with “--enable-intelasm”. These speedup the use of RNG, SHA2, and public key algorithms.<br />	•	Ed25519 support at the crypto level. Turn on with --enable-ed25519.  Examples in “wolcrypt/test/test.c”, ed25519_test().<br />	•	Post Handshake Memory reductions. wolfSSL can now hold less than 1,000 bytes of memory per secure connection including cipher state.<br />	•	wolfSSL API and wolfCrypt API fixes, you can still include the cyassl and ctaocrypt headers which will enable the compatibility APIs for the foreseeable future<br />	•	INSTALL file to help direct users to build instructions for their environment<br />	•	For ECC users with the normal math library a fix that prevents a crash when verify signature fails.  <b>Users of 3.4.0 with ECC and the normal math library must update</b><br />	•	RC4 is now disabled by default in autoconf mode<br />	•	AES-GCM and ChaCha20/Poly1305 are now enabled by default to make AEAD ciphers available without a switch<br />	•	External ChaCha-Poly AEAD API, thanks to Andrew Burks for the contribution<br />	•	DHE-PSK cipher suites can now be built without ASN or Cert support<br />	•	Fix some NO MD5 build issues with optional features<br />	•	Freescale CodeWarrior project updates<br />	•	ECC curves can be individually turned on/off at build time.<br />	•	Sniffer handles Cert Status message and other minor fixes<br />	•	SetMinVersion() at the wolfSSL Context level instead of just SSL session level to allow minimum protocol version allowed at runtime<br />	•	RNG failure resource cleanup fix<br /><br />	•	No high level security fixes that requires an update though we always recommend updating to the latest (except note 6, use case of ecc/normal math)<br /><br />See the INSTALL file included with the wolfSSL download for build instructions.<br /><br />More info about the wolfSSL embedded SSL library can be found on-line at <a href="http://wolfssl.com/yaSSL/Docs.html">http://wolfssl.com/yaSSL/Docs.html</a>. Please contact wolfSSL at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2015-3-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL in MySQL',
    'post_content' => 'Currently MySQL comes bundled with yaSSL to provide an option for SSL/TLS connections when using a database. An update for MySQL to use the most recent wolfSSL library (formerly CyaSSL) instead of yaSSL is under way. <br /><br />Along with an increased level of security comes the potential to use progressive features offered by wolfSSL – such as ChaCha20 / Poly1305 AEAD cipher suites (ex: ECDHE-RSA-CHACHA20-POLY1305). wolfSSL will fit nicely into both Open Source and commercial applications as it is dual licensed under both GPLv2 and standard commercial license terms.<br /><br />For more information about the status of this port contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-3-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What does the Bar Mitzvah Attack mean for wolfSSL users?',
    'post_content' => 'This attack is based on the weak keys that the outdated stream cipher RC4 can sometimes generate.  Simply put, stop using RC4 in TLS connections.  In fact, wolfSSL (formerly CyaSSL) recently turned off the RC4 algorithm at build time.  This will be the default starting with the upcoming 3.4.6 release.  There has certainly been a pattern in the attacks that we’ve seen on TLS in the last few years; older Protocol versions, older modes, and older key sizes.  We suggest using TLS 1.2 with AEAD ciphers and forward secrecy.  Some people can’t get away with that in the interest of interoperability but it’s certainly the safest way forward that we can think of.  Please contact us with any questions.<br /><br />Feel free to visit our website at <a href="http://wolfssl.com/">wolfssl.com</a> or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-3-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Ed25519 Support Coming to wolfCrypt',
    'post_content' => 'wolfSSL is adding crypto level use of Ed25519 to wolfCrypt and plans to add TLS use of Ed25519 in the future. Benchmarks of our Ed25519 implementation have shown that the sign time can be reduced by up to 90% and verify time by up to 65% compared with the common ECC-DSA!<br /><br />The following are some initial benchmarks:<br /><br /><b>CPU: 2.5 GHz Intel Core i7<br /></b><b><br /></b>ECC 256 key generation 0.775 milliseconds, avg over 100 iterations<br />EC-DSA sign time 0.739 milliseconds, avg over 100 iterations<br />EC-DSA verify time 0.528 milliseconds, avg over 100 iterations<br /><br />ED25519 key generation 0.055 milliseconds, avg over 100 iterations<br />ED25519 sign time 0.053 milliseconds, avg over 100 iterations<br />ED25519 verify time 0.184 milliseconds, avg over 100 iterations<br /><br /><b>Raspberry Pi (ARM 700MHz)<br /><br /></b>ECC 256 key generation 82.494 milliseconds, avg over 100 iterations<br />EC-DSA sign time 84.862 milliseconds, avg over 100 iterations<br />EC-DSA verify time 52.444 milliseconds, avg over 100 iterations<br /><br />ED25519 key generation 1.543 milliseconds, avg over 100 iterations<br />ED25519 sign time 1.821 milliseconds, avg over 100 iterations<br />ED25519 verify time 3.832 milliseconds, avg over 100 iterations<br /><br />For questions about wolfSSL contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-3-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wofSSL Info Session: MSU Bozeman',
    'post_content' => 'wolfSSL will be holding an info session this upcoming Monday at Montana State University in Bozeman, MT for students interested in learning more about wolfSSL.  The session will introduce wolfSSL as a company including background information, product lineup, work environment, and more.<br /><br />We encourage any students who will be in the area and are interested in Internet security, SSL/TLS, cryptography, embedded security, or software development to attend!  Pizza will be served.<br /><br /><b><a href="http://calendar.msu.montana.edu/events/15410">wolfSSL Info Session</a></b><b><br /></b>Monday, March 23, 2015<br />Montana State University, Bozeman<br />5-6pm, Roberts Hall, 218<br /><br />We look forward to seeing you there!',
    'post_status' => 'publish',
    'post_date' => date('2015-3-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'End of life for wolfSSL 3.0 and older versions',
    'post_content' => 'Hi!  As of June 30, 2015, we will no longer support wolfSSL 3.0 and older versions.  If you are using these older versions and need support to upgrade them, please contact us.  We can help you with the upgrade.',
    'post_status' => 'publish',
    'post_date' => date('2015-3-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Case Study: wolfSSL Provides Encryption for TwistM2M Platform',
    'post_content' => 'TwistM2M has released their multitalented, Verizon Wireless certified M2M device that allows cloud connectivity through Exosite’s secure cloud-based platform. This provides developers with a wide variety of widgets that can be used with the numerous sensors on the TwistM2M board including accelerometers, GPS, temperature and light sensors. The TwistM2M device is ideal for any developer wanting an Internet of Things (IoT) solution that can significantly shorten setup time and allow for many customizable applications. <br /><br />wolfSSL was chosen as the SSL/TLS library for TwistM2M due to its extensive PIC32 support and lightweight capacity. wolfSSL also provides an I/O abstraction layer that helped TwistM2M tailor the SSL I/O functionality to use both cellular and Ethernet connections, a requirement for their M2M device. <br /><br />If you would like more information on the TwistM2M platform, feel free to visit their website at <a href="http://www.twisthink.com">www.twisthink.com</a>. The TwistM2M/wolfSSL case study can be viewed on the wolfSSL <a href="perma://BLPageReference/B041BC15-002B-49EB-9993-EE890772EB7E">case studies</a> page.<br /> <br />For questions regarding the use of wolfSSL products in your embedded or IoT devices, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2015-3-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Roadmap',
    'post_content' => 'Curious about new features and additions to wolfSSL technologies including the lightweight wolfSSL SSL/TLS library (formerly CyaSSL)?  Some items on our current roadmap include early TLS 1.3 adoption, curve25519 / ed25519 integration at the crypto and TLS level, more resource reduction options, and OCSP stapling support.  In terms of new environments we’ll soon have more FIPS platforms, additional hardware acceleration options, easier integration with event programming, Data plane development support, SRP integration, better Intel assembly crypto speedups, and more Open Source project plugins.  New product offerings will include wolfSSH and wolfCrypt as a separate library.  We also anticipate offering our testing and security audit programs as services.  Keep an eye out for connected home white papers and case studies.  Something we missed, or something you would like to see on our roadmap?  Please let us know.<br /><br />Feel free to visit our website at <a href="http://wolfssl.com/">wolfssl.com</a> or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> .',
    'post_status' => 'publish',
    'post_date' => date('2015-3-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL (CyaSSL) Support for Marvell 88MC200 Hardware AES Module',
    'post_content' => 'The Marvell 88MC200 is a system-on-chip microcontroller designed to be cost-effective, flexible, and easy to use. It was developed specifically for building connected smart devices and appliances. The Marvell 88MC200 is incredibly small (thumb-size) and runs energy efficient applications that can be used in mobile or cloud-based environments. <br /><br />Marvell provides the Easy-Connect Software Development Kit (SDK) in combination with the 88MC200. This is a FreeRTOS-based software stack focusing on application-specific software functionality. One of the features of the 88MC200 is the inclusion of a hardware-accelerated AES module. When using wolfSSL in the Marvell SDK, wolfSSL automatically offloads AES operations into the 88MC200 hardware module. In doing so, users gain advantages in both speed and footprint size.<br /><br />For more information on using wolfSSL with the Marvell 88MC200, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. For detailed module information and other Marvell products, visit <a href="http://www.marvell.com/">www.marvell.com</a>.<br /><br /><a href="http://www.marvell.com/microcontrollers/88MC200/">Marvell 88MC200</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-3-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on Cavium OCTEON',
    'post_content' => 'Looking for networking encryption and decryption? The powerful combination of wolfSSL and OCTEON hardware make for an exceptionally speedy and secure network connection. Cavium`s OCTEON processors have outstanding hardware acceleration support available for algorithms used in networking. For example in benchmarks ran using wolfSSL, AES operations increased from 8.6 MB/s to 261 MB/s with the OCTEON processor`s hardware acceleration support. That`s over 252 MB/s more!! <br /><br />Along with hardware acceleration support for common symmetric algorithms, there is also support for asymmetric algorithms such as RSA and DH. A whole RSA encrypt and decrypt could be done in less than 7.5 milliseconds with hardware acceleration versus an average of 168 milliseconds without.<br /><br />All of these massive increases in performance were seen with the use of just one core. The CN5860-SCP processor has the possibility of using all 16 cores, each core being able to handle its own SSL session. That`s the possibility of 16 independent and extremely fast SSL connections running in parallel.<br /><br />For information about wolfSSL on Cavium OCTEON processors contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-3-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and CyaSSL are not vulnerable to the recent FREAK attack',
    'post_content' => 'The FREAK Attack exploits legacy SSL cipher suites from the 1990s that use RSA export keys.  By definition a server in export mode has to use a low bit strength RSA key (512 bits or less), which can now be cracked in around 12 hours.  Even if a client supports export cipher suites but doesn’t broadcast support for them a man in the middle attacker can force the server to use the low grade key.  Fortunately for wolfSSL and CyaSSL users we do no support export cipher suites and key derivation.  No versions of wolfSSL or CyaSSL are vulnerable to the FREAK attack.  For more information check out: <a href="https://freakattack.com/">https://freakattack.com</a> and  <a href="https://www.smacktls.com/#freak">https://www.smacktls.com/#freak</a> .<br /><br />Or feel free to visit our website at <a href="http://wolfssl.com/">wolfssl.com</a> or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> .<br />',
    'post_status' => 'publish',
    'post_date' => date('2015-3-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.4.0 is Now Available',
    'post_content' => 'Release 3.4.0 wolfSSL has bug fixes and new features including:<br /><br />	•	wolfSSL API and wolfCrypt API, you can still include the cyassl and ctaocrypt headers which will enable the compatibility APIs for the foreseeable future<br />	•	Example use of the wolfCrypt API can be found in wolfcrypt/test/test.c<br />	•	Example use of the wolfSSL API can be found in examples/client/client.c<br />	•	Curve25519 now supported at the wolfCrypt level, wolfSSL layer coming soon<br />	•	Improvements in the build configuration under AIX<br />	•	Microchip PIC32 MZ updates<br />	•	TI-RTOS updates<br />	•	PowerPC updates<br />	•	Xcode project update<br />	•	Bidirectional shutdown examples in client/server with -w (wait for full shutdown) option<br />	•	Cycle counts on benchmarks for x86_64, more coming soon<br />	•	ALT_ECC_SIZE for reducing ecc heap use with fastmath when also using large RSA keys<br />	•	Various compile warnings<br />	•	Scan-build warning fixes<br />	•	Changed a memcpy to memmove in the sniffer (if using sniffer please update)<br />	•	No high level security fixes that requires an update though we always recommend updating to the latest<br />',
    'post_status' => 'publish',
    'post_date' => date('2015-3-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'CyaSSL name is changing to wolfSSL!',
    'post_content' => 'We currently in the process of changing the name of our embedded SSL/TLS library from CyaSSL to wolfSSL. This name change benefits our users and us a with a more consistent and standardized naming convention across our company and products. <br /><br />A CyaSSL compatibility layer will remain available for those wanting to continue using the CyaSSL API. However, users are encouraged to update to the wolfSSL API upon release. <br /><br />Aside from the new name, the structure and licensing of the CyaSSL library will remain the same. The FIPS branch of wolfCrypt, which was submitted to NIST for FIPS 140-2 cryptographic module validation, is unaffected by the name change. <br /><br />Please follow our <a href="perma://BLPageReference/F452BCBF-B739-4409-8D39-BDD3D3085699">blog</a> to for the latest information on the CyaSSL to wolfSSL name change. For any questions, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-3-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Seeking Senior C/C++ Developer',
    'post_content' => 'Hi!  We are currently seeking an additional senior C/C++ developer for our team.  Ideally, our best candidates will have 5+ years of experience coding C/C++.  Experience at the systems level, working with networking protocols, working with cryptography, and an affinity for open source are useful but not necessary.  This is a position where you will primarily work at home, with occasional travel to team meetings, trade events, and customers.  With the right skill set, we are open to you working anywhere, but we prefer those who reside in Montana, Seattle, and Portland, because we already have clusters of people working in those locations.  <br /><br />If you are interested, please email your resume to <a href="mailto:larry@wolfssl.com">larry@wolfssl.com</a>.  ',
    'post_status' => 'publish',
    'post_date' => date('2015-1-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Embedded World 2015',
    'post_content' => 'wolfSSL will be exhibiting at the upcoming 2015 Embedded World conference in Nürnberg, Germany.  The conference will be held February 24-26, 2015 at NürnbergMesse GmbH.  The wolfSSL booth will be in Hall 5, booth 5-246g.  We will be talking about the CyaSSL embedded SSL library, wolfCrypt cryptography engine, and best practices for securing connected devices and applications.<br /><br /><b>Embedded World 2015<br /></b>Exhibition Centre Nuremberg<br />Tuesday, 24 - Thursday, 26 February 2015<br /><br /><b>wolfSSL Booth</b>: Hall 5 / 5-246g<br /><br />If you are attending Embedded World, we welcome you to stop by our booth.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-1-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at FOSDEM 2015',
    'post_content' => 'In a matter of weeks, hundreds of Open Source developers will gather in Brussels, Belgium for FOSDEM 2015.  FOSDEM is a two day event organized by volunteers to promote the widespread use of Open Source software, and is considered by many to be “the best open source conference in Europe” [1].<br /><br />wolfSSL will be attending FOSDEM this year and will have a stand in the “AW” building.  The wolfSSL stand will have information about several of wolfSSL’s open source projects including the CyaSSL lightweight SSL/TLS library and wolfCrypt cryptography engine.  Members of the wolfSSL team will be on hand to answer developers’ questions first hand.<br /><br />If you or your team is considering integrating CyaSSL or wolfCrypt with a project and would like to set up a time to sit down and talk at FOSDEM, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> and we can pencil you into our schedule while in Brussels.  We enjoy working with Open Source projects, and offer them free support from our technical staff when working with CyaSSL or wolfCrypt.<br /><br /><b>FOSDEM 2015<br /></b>ULB Solbosch Campus<br />Brussels, Belgium<br />January 31 - February 1, 2015<br /><br /><b>wolfSSL Booth</b>: AW-11<br /><a href="https://fosdem.org/2015/stands/">https://fosdem.org/2015/stands/</a><br /><br />We look forward to seeing you there!<br /><br />[1] <a href="https://fosdem.org/2015/about/">https://fosdem.org/2015/about/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-1-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL to Secure Thermostats',
    'post_content' => 'As a lightweight, embedded SSL library, wolfSSL has been used to secure many smart home devices such as lighting, garage doors, washers and dryers, thermostats, as well as a variety of other appliances. Security may not be the first thought when developing a smart home device, but there remains the risk of an attacker gaining access to a wirelessly connected thermostat that has complete control of a home’s heating and cooling system. This could be detrimental to the utility bill, plumbing, and even pets left in the house susceptible to extreme temperatures. Imagine going on vacation during frigid weather and the home’s heating is disabled. This could cause frozen and potentially bursting pipes, which in turn could lead to flooding, costing thousands of dollars in repairs. wolfSSL is designed specifically to prevent these issues. Devices secured with wolfSSL give homeowners a necessary comfort knowing their home is resistant to wireless intruders and other security threats. <br /><br />For more information on how wolfSSL can be used to secure a smart thermostat or other connected home devices, feel free to visit our website at <a href="http://www.wolfssl.com">wolfssl.com</a> or email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2015-1-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'FIPS 140-2 Cryptography on FreeRTOS',
    'post_content' => 'Hi!  This note is to announce that we will be FIPS 140-2 validating our cryptography library, wolfCrypt, on the FreeRTOS platform.  If you need FIPS validated crypto on FreeRTOS, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-1-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'CES 2015: Connected Cars',
    'post_content' => 'As day two of CES progressed, we were able to visit many more interesting booths - including the <a href="http://www.audiusa.com/">Audi</a> booth.  Audi demonstrated a self driving car this year, a new Virtual Cockpit rear-seat navigation display, and a smart watch in coordination with LG that can control parts of the vehicle.<br /><br />As connected cars evolve, securing the data transferring between the internal car systems, external servers, and mobile devices is critical.  wolfSSL is used in several of today’s smart car systems, using SSL/TLS and cryptography to secure and authenticate data.  If you are interested in using wolfSSL in a connected car system, feel free to reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions.<br /><br />CES 2015:  <a href="http://www.cesweb.org/">http://www.cesweb.org/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-1-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt has now moved to “Review Pending” on the NIST FIPS Modules in Process List',
    'post_content' => 'For those of you who have been following our FIPS progress, we are now in the “Review Pending” phase.  See:  <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140InProcess.pdf">http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140InProcess.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-1-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'CES 2015: Smart Appliances',
    'post_content' => 'As we explore CES 2015, we’ve been seeing lots of new and exciting smart appliances on the floor.  In total, the <a href="http://ces15.mapyourshow.com/6_0/search.cfm?srch-type=pavilion&srch-query=Smart%20Home&srch-showresults=true&CFID=59132012&CFTOKEN=b4d2860fa5a64e6a-EC529509-E643-C634-CAF6BA0B4F91FDEF">CES Exhibitor list</a> for the “Smart Home” section totals 61 exhibitors.  As we come across new devices, we’re planning on posting up our photos to the wolfSSL blog and <a href="https://www.facebook.com/wolfssl">Facebook page</a>.  The above photos show Whirlpool’s new smart washer and dryer, and wolfSSL’s Mark Minnoch in front of the Withhings booth.  <br /><br />See below for more photos from <a href="http://www.bosch-home.com/us/">Bosch</a>, <a href="http://www.whirlpool.com/smart-appliances/">Whirlpool</a>, <a href="http://www.withings.com/us/">Withings</a>, and more.  And stay tuned for additional posts as CES continues.<br /><br />The CyaSSL lightweight SSL/TLS library is used to secure several of today’s smart appliances.  Backed by a team focused on keeping up to date on the most current security standards, TLS protocols, and algorithms, and focused on minimizing resource usage, CyaSSL is the perfect fit for securing connected smart appliances and smart home devices.  To learn more about CyaSSL, visit the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">product page</a>, or contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />CES 2015:  <a href="http://www.cesweb.org/">http://www.cesweb.org/</a>',
    'post_status' => 'publish',
    'post_date' => date('2015-1-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Attending CES 2015',
    'post_content' => 'Good News! The wolfSSL team will be attending CES (<a href="http://www.cesweb.org/">http://www.cesweb.org</a>) this year in Las Vegas, January 6 - 9, 2015. wolfSSL is a leader in the connected home market and specializes in securing connections between your home devices and appliances, hubs, and mobile devices. We are excited to visit with our partners and customers. <br /><br />We have open availabilities in our schedule, please let us know if you`d like to reserve a time block by contacting us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2015-1-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What is a Block Cipher?',
    'post_content' => 'A block cipher is an encryption method that applies a deterministic algorithm along with a symmetric key to encrypt a block of text, rather than encrypting one bit at a time as in stream ciphers. For example, a common block cipher, AES, encrypts 128 bit blocks with a key of predetermined length: 128, 192, or 256 bits. Block ciphers are pseudorandom permutation (PRP) families that operate on the fixed size block of bits.  PRPs are functions that cannot be differentiated from completely random permutations and thus, are considered reliable, until proven unreliable. <br /><br />Block cipher modes of operation have been developed to eliminate the chance of encrypting identical blocks of text the same way, the ciphertext formed from the previous encrypted block is applied to the next block. A block of bits called an initialization vector (IV) is also used by modes of operation to ensure ciphertexts remain distinct even when the same plaintext message is encrypted a number of times. <br /><br />Some of the various modes of operation for block ciphers include CBC (cipher block chaining), CFB (cipher feedback), CTR (counter), and GCM (Galois/Counter Mode), among others. Above is an example of CBC mode.<br /><br />Where an IV is crossed with the initial plaintext block and the encryption algorithm is completed with a given key and the ciphertext is then outputted. This resultant cipher text is then used in place of the IV in subsequent plaintext blocks.<br /><br />For information on the block ciphers that are implemented in wolfSSL or to learn more about the wolfSSL lightweight, embedded SSL library, go to <a href="mailto:wolfssl.com">wolfssl.com</a> or contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />References<br /><br />[1]   Pseudorandom permutation. (2014, November 23). In Wikipedia, The Free Encyclopedia. <br />       Retrieved 22:06, December 18, 2014, from <br />       <a href="http://en.wikipedia.org/w/index.php?title=Pseudorandom_permutation&oldid=635108728">http://en.wikipedia.org/w/index.php?title=Pseudorandom_permutation&oldid=635108728</a>. <br /><br />[2]   Margaret Rouse. (2014). Block Cipher [Online]. Available URL: <br />        <a href="http://searchsecurity.techtarget.com/definition/block-cipher">http://searchsecurity.techtarget.com/definition/block-cipher</a>. <br /><br />[3]   Block cipher mode of operation. (2014, December 12). In Wikipedia, The Free <br />       Encyclopedia. Retrieved 22:17, December 18, 2014, from       <br />   <a href="http://en.wikipedia.org/w/index.php?title=Block_cipher_mode_of_operation&oldid=637837298">http://en.wikipedia.org/w/index.php?title=Block_cipher_mode_of_operation&oldid=637837298</a><br /><br />[4]   Wikimedia. (2014). Available URL: <br />        <a href="http://upload.wikimedia.org/wikipedia/commons/d/d3/Cbc_encryption.png">http://upload.wikimedia.org/wikipedia/commons/d/d3/Cbc_encryption.png</a>. <br />',
    'post_status' => 'publish',
    'post_date' => date('2014-12-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt FIPS 140-2 Algorithm Certificates',
    'post_content' => 'wolfSSL is proud to announce that several wolfCrypt algorithms have received FIPS 140-2 algorithm certificates. The National Institute of Standards and Technology (NIST) website has been updated to reflect wolfSSL`s validation.<br /><br />wolfSSL`s wolfCrypt has received the following certificate numbers and can be viewed at the respective links.<br /><br />AES validation certification #3157<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html">http://csrc.nist.gov/groups/STM/cavp/documents/aes/aesval.html</a><br /><br />Triple DES validation certification #1800<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/des/tripledesval.html">http://csrc.nist.gov/groups/STM/cavp/documents/des/tripledesval.html</a><br /><br />RSA validation certification #1602<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/dss/rsanewval.html">http://csrc.nist.gov/groups/STM/cavp/documents/dss/rsanewval.html</a> <br /><br />SHS validation certification #2614<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.htm">http://csrc.nist.gov/groups/STM/cavp/documents/shs/shaval.htm</a><br /><br />DRBG validation certification #650<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgval.html">http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgval.html</a><br /><br />HMAC validation certification #1990<br /><a href="http://csrc.nist.gov/groups/STM/cavp/documents/mac/hmacval.html">http://csrc.nist.gov/groups/STM/cavp/documents/mac/hmacval.html</a><br /><br />These validations reflect wolfSSL`s commitment to provide the highest quality security standards. <br />The open source community and federal entities alike can now enjoy wolfSSL`s small footprint designed for embedded systems while taking advantage of the latest in security protocols.<br /><br />References:<br /><a href="http://csrc.nist.gov/publications/fips/fips140-2/fips1402.pdf">http://csrc.nist.gov/publications/fips/fips140-2/fips1402.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-12-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Assembly Optimizations for ARM Processors',
    'post_content' => 'If you are looking for an SSL/TLS library to provide security in connected ARM environments, wolfSSL is by far the best choice. wolfSSL is an ARM partner, and our code has been optimized for ARM environments. Public key operations in CyaSSL (wolfSSL) have optimized assembly code that gives wolfSSL faster RSA, Diffie-Hellman, and DSA times.<br /><br />Optimized assembly code for public key operations can be found in asm.c and are easy to use, simply run ./configure --enable-fastmath and for stack usage reduction we also recommend using TFM_TIMIN_RESISTANT.<br /><br />For any question regarding wolfSSL in ARM environments please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-12-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL SSL/TLS Tutorial Video',
    'post_content' => 'Below is a link to wolfSSL’s SSL/TLS tutorial video on setting up a basic client and server with the CyaSSL lightweight, embedded SSL/TLS library. This video provides a detailed step-by-step set of instructions, including code, for incorporating CyaSSL into an application. The tutorial walks through <a href="perma://BLPageReference/AE1DD7D5-59D5-44C3-AA1E-89434EAA6C7A">Chapter 11</a> of the CyaSSL manual.<br /><br />SSL/TLS Tutorial with CyaSSL Lightweight SSL:<br /><a href="https://www.youtube.com/watch?v=-Smp3X1eWNQ">https://www.youtube.com/watch?v=-Smp3X1eWNQ</a><br /><br />For more information please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or go to <a href="http://www.wolfssl.com/">www.wolfssl.com</a>. Instructions for building CyaSSL may be found in <a href="perma://BLPageReference/FD352C90-E273-4482-8F1A-931053F7C82D">Chapter 2</a> of the CyaSSL Manual.',
    'post_status' => 'publish',
    'post_date' => date('2014-12-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and CyaSSL Users SAFE from POODLE bites again attacks',
    'post_content' => 'Some TLS implementations are vulnerable to the October POODLE attack that at the time was thought to be limited to SSLv3 only: <a href="https://www.imperialviolet.org/2014/12/08/poodleagain.html">https://www.imperialviolet.org/2014/12/08/poodleagain.html</a> .  These implementations are incorrectly using a SSLV3 decoding function while in TLS mode.  wolfSSL is not susceptible, it correctly uses TLS decoding while in TLS mode.  We would like to reiterate Adam Langley’s advice to use TLS 1.2 with an AEAD cipher suite whenever possible.  wolfSSL supports TLS 1.2 and has 3 cipher suite types supporting AEAD; AES-GCM, AES-CCM, and CHACHA20-POLY1305.  29 different AEAD cipher suites are available with TLS 1.2 in wolfSSL.  Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> if you have any questions or comments.',
    'post_status' => 'publish',
    'post_date' => date('2014-12-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'We are happy to announce the release of wolfSSL version 3.3.0',
    'post_content' => 'CyaSSL version 3.3.0 offers:<br /><br />	•	Secure countermeasures for Handshake message duplicates, CHANGE CIPHER without FINISHED, and fast forward attempts added to our source code.  Thanks to Karthikeyan Bhargavan from the Prosecco team at INRIA Paris-Rocquencourt for the report.  This is an important fix and all users should update!<br />	•	Complete testing for FIPS 140-2 version submitted to NIST.  FIPS 140-2 source code now available.<br />	•	Removes SSLv2 Client Hello processing for enhanced security, can be enabled with OLD_HELLO_ALLOWED<br />	•	Protocol level control:  User can now control TLS protocol down-cycling to a minimum downgrade version with CyaSSL_SetMinVersion().  For example, you could reject handshakes at a protocol level less than TLS 1.1.<br />	•	Small stack improvements at TLS/SSL layer, to benefit environments with limited available stack.<br />	•	TLS Master Secret generation and Key Expansion are now exposed at the API level<br />	•	Adds client side Secure Renegotiation, * not recommended, ever! *<br />	•	Client side session ticket support.  This feature is not fully tested with Secure Renegotiation, so don’t use Secure Renegotiation.<br />	•	Allows up to 4096-bit DHE at TLS Key Exchange layer<br />	•	Handles non standard SessionID sizes in Hello Messages<br />	•	PicoTCP Support added<br />	•	TLS Sniffer now supports SNI Virtual Hosts<br />	•	TLS Sniffer now handles non HTTPS protocols using STARTTLS<br />	•	TLS Sniffer can now parse records with multiple messages<br />	•	TI-RTOS updates or enhances support<br />	•	Fix for ColdFire optimized fp_digit read only in explicit 32bit case<br />	•	Added ADH Cipher Suite ADH-AES128-SHA for EAP-FAST<br /><br />Stay up to date with what is happening with wolfSSL, you can follow our blog at <a href="http://www.wolfssl.com/yaSSL/Blog/Blog.html">http://www.wolfssl.com/yaSSL/Blog/Blog.html</a><br /><br />If you have any questions please feel free to contact us anytime at <a href="mailto:info@wolfSSL.com">info@wolfSSL.com</a> or (425)245-8247.<br>We look forward to hearing from you!<br /><br />Thank You!<br />wolfSSL',
    'post_status' => 'publish',
    'post_date' => date('2014-12-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => '2014 TRON Symposium, Tokyo',
    'post_content' => 'wolfSSL will be at the TRON Symposium next week in Tokyo with eSol Corp`s booth. If you’re planning on attending the symposium, please stop by and visit to learn more out about the CyaSSL lightweight SSL/TLS library and wolfCrypt cryptography engine.<br /><br /><a href="http://www.tronshow.org/index-e.html">http://www.tronshow.org/index-e.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-12-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL One day Workshop in Tokyo',
    'post_content' => 'We would like to thank everyone who registered to attend our one-day workshop in Tokyo, Japan! The workshop, titled "Introduction to Security Protocol for Embedded Engineers" (12/9/2014) has filled up.<br /><br />These types of workshops are becoming a popular program in CQ publishing`s Seminar series. We will be organizing the next one early next year.<br /><br /><a href="http://seminar.cqpub.co.jp/ccm/ES14-0134">http://seminar.cqpub.co.jp/ccm/ES14-0134</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-12-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Freescale Technology Forum Japan 2014',
    'post_content' => 'wolfSSL attended the 2014 Freescale Technology Forum (FTF) Japan which took place December 4, 2014 in Tokyo, Japan.  <br /><br />The eSol booth, shown in the photos above, was displaying a demo of CyaSSL integration with UC Tech’s uT-Kernel, running on a Kinetis Tower Board.<br /><br />FTF Japan 2014: <a href="http://www.freescale.com/webapp/sps/site/overview.jsp?code=FTF_JAPAN_HOME">http://www.freescale.com/webapp/sps/site/overview.jsp?code=FTF_JAPAN_HOME</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2014-12-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Case Study: wolfSSL Secures INSTEON Hub for the Connected Home',
    'post_content' => 'INSTEON is leading the way in the field of home automation and control technology with a line of products that include a wide range of smart home devices such as lighting, motion detectors, and security systems. All INSTEON products can be centrally accessed through the Hub, a product that has the ability to connect the smart home even when the network is down. <br /><br />While researching the best SSL/TLS library for securing the Hub, INSTEON found wolfSSL’s CyaSSL as the optimal solution. With its portable and lightweight design, CyaSSL was seamlessly integrated into INSTEON’s Hub, providing INSTEON users with a safe and secure network to manage all of their smart home devices. <br /><br />To learn more about INSTEON and their wide range of devices, feel free to visit their <a href="http://www.insteon.com/">website</a>.  The INSTEON/wolfSSL case study can be viewed on our <a href="perma://BLPageReference/B041BC15-002B-49EB-9993-EE890772EB7E">Case Studies</a> page.<br /><br />For questions regarding the use of wolfSSL products in your embedded or IoT devices, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-11-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and PicoTCP',
    'post_content' => 'The next release of CyaSSL will have official support for the PicoTCP TCP/IP stack.  wolfSSL has been working closely with the developers at TASS to add out-of-the-box support for this new, lightweight, and dual-licensed TCP/IP stack - making it easier to secure Internet of Things devices running on top of PicoTCP.<br /><br />For those not familiar with PicoTCP, it is “a TCP/IP stack developed from the ground up for embedded devices, by embedded software engineers. Resource usage, modularity and portability to different hardware platforms and embedded operating systems are key.”  Like CyaSSL, PicoTCP is open source and dual licensed under both the GPLv2 and a commercial license.<br /><br />TASS has put together a helpful demo application using both CyaSSL and PicoTCP, with a walkthrough documented here:<br /><a href="http://www.picotcp.com/picotcp-and-cyassl-integration">http://www.picotcp.com/picotcp-and-cyassl-integration</a><br /><br />When compiling CyaSSL for use with PicoTCP, users will need to define <b>CYASSL_PICOTCP</b>, and optionally <b>CYASSL_PICOTCP_DEMO</b> when compiling for use with the example demo application listed above.<br /><br />If you are interested in using CyaSSL with PicoTCP, or have any questions, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />PicoTCP: <a href="http://www.picotcp.com/">http://www.picotcp.com/</a><br />TASS Belgium: <a href="http://www.tass.be/">http://www.tass.be</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-11-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Deprecating SSL 3.0 from wolfSSL',
    'post_content' => 'Hi!  We’ve been telegraphing our plans to drop support for SSL 3.0 for the last year.  With the emergence of the POODLE breach, we’ve decided to accelerate our plan.  Over the coming weeks and months, we’ll be doing the following:<br /><br />1.  Disabling SSL 3.0 by default at runtime.<br /><br />2.  Disabling our SSL 3.0 code by default at compile time.<br /><br />3.  Eliminating all SSL 3.0 code from our code base, and using TLS 1.0 as the base.<br /><br />If you have comments or questions, then feel free to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or call us up at +1 425 245 8247.<br /><br />Team wolfSSL',
    'post_status' => 'publish',
    'post_date' => date('2014-11-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'POODLE (An SSL 3.0 Vulnerability)',
    'post_content' => 'SSL, the predecessor to TLS, reached version 3.0 before changing names to TLS. TLS versions currently defined include TLS 1.0, 1.1, and 1.2, with the 1.3 specification still being worked out.<br /><br />“Padding Oracle On Downgraded Legacy Encryption” Bug (POODLE) was disclosed on October 14th, 2014 and allows an attacker to read information encrypted with SSL 3.0 in plain text using a man-in-the-middle attack. Here at wolfSSL we highly encourage our users to avoid using SSL 3.0 as an attacker can force a connection to use SSL 3.0 if it is available to both participants in the connection, thus allowing the attacker to exploit this bug.<br /><br />POODLE effects any clients communicating with SSL 3.0. This is a flaw with the protocol design and not an implementation error. Therefore EVERY software application that uses SSL 3.0 is susceptible.<br /><br />CyaSSL supports industry standards up to the current TLS 1.2 and as such is not vulnerable to the POODLE bug as long as our clients are using a version of TLS higher than SSL 3.0.  It is highly recommended that TLS1.2 is used whenever possible.<br /><br />References<br /><a href="http://www.entrust.com/poodle-kill-ssl-3-0/">http://www.entrust.com/poodle-kill-ssl-3-0/</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-10-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Info Session: MSU Bozeman',
    'post_content' => 'wolfSSL will be holding an info session this upcoming Monday at Montana State University in Bozeman, MT for students interested in learning more about wolfSSL.  The session will introduce wolfSSL as a company including background information, product lineup, work environment, and more.<br /><br />We encourage any students who will be in the area and are interested in Internet security, SSL/TLS, cryptography, embedded security, or software development to attend!  Pizza will be served.<br /><br /><b>wolfSSL Info Session<br /></b>Monday, October 13, 2014<br />Montana State University, Bozeman<br />5-6pm, SUB 223<br /><br />We look forward to seeing you there!',
    'post_status' => 'publish',
    'post_date' => date('2014-10-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ARM Says There will be 30 Billion IoT devices by 2020, #armtechcon',
    'post_content' => '1.  This is <a href="http://www.armtechcon.com/">ARM TechCon</a>’s 10th year, and our 4th year of participating.<br /><br />2.  HP is pushing out their Moonshot ARM based servers.  Looks cool!<br /><br />3.  MBED is also here.  We’ve always thought their cloud compiler was really neat.<br /><br />4.  We’re on the expo floor in booth #321, so if you want to talk IoT security, please stop by!',
    'post_status' => 'publish',
    'post_date' => date('2014-10-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Beta Testing curve25519',
    'post_content' => 'Implementation of <a href="http://tools.ietf.org/html/draft-josefsson-tls-curve25519-06">curve25519</a> is to the point where it is going through a testing cycle. We are looking for interested beta testers and cryptography enthusiasts who wish to test out just how fast it can be.<br /><br />If interested in getting the source code for the curve25519 implementation, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2014-9-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Secure Renegotiation Support Coming Soon to wolfSSL',
    'post_content' => 'Secure Renegotiation will allow for a server to differentiate between an initial connection and a renegotiation, protecting against  “man-in-the-middle” attacks during renegotiations. <br /><br />   “Secure Socket Layer (SSL) and Transport Layer Security (TLS)<br />   renegotiation are vulnerable to an attack in which the attacker forms<br />   a TLS connection with the target server, injects content of his<br />   choice, and then splices in a new TLS connection from a client.  The<br />   server treats the client`s initial TLS handshake as a renegotiation<br />   and thus believes that the initial data transmitted by the attacker<br />   is from the same entity as the subsequent client data.  This<br />   specification defines a TLS extension to cryptographically tie<br />   renegotiations to the TLS connections they are being performed over,<br />   thus preventing this attack.” -Abstract <a href="https://tools.ietf.org/html/rfc5746">RFC-5746</a><br /> <br />- We will have an alpha release available for testing in November or December. Interested parties should contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><br />- Although we`re adding Secure Renegotiation to wolfSSL, we discourage its use when not a strict requirement.<br /><br />-Initially wolfSSL did not support Renegotiation as it was considered an insecure feature. As such there was no need to support Secure Renegotiation until there was a customer demand for it.<br /><br />-We make it a priority to ensure our clients have all the necessary tools at their disposal. Therefore we are adding support for Secure Renegotiation for those users and customers where it is a strict requirement.<br /><br />References<br /><a href="https://tools.ietf.org/html/rfc5746">Internet Engineering Task Force, RFC-5746</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-9-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Now Provides a Beta SCEP Implementation',
    'post_content' => '<a href="http://en.wikipedia.org/wiki/Simple_Certificate_Enrollment_Protocol">Simple Certificate Enrollment Protocol</a>, better known as SCEP, is a way to simplify certificate handling for everyday users. This Public Key Infrastructure communication protocol is designed to enable certificate management and certificate/CRL queries within a closed network. According to the <a href="http://tools.ietf.org/html/draft-nourse-scep-23#page-5">Internet Engineering Task Force</a>, SCEP uses PKCS#7 and PKCS#1 over HTTP and supports CA and Registration Authority (RA) public key distribution, certificate enrollment, certificate query, and CRL query. <br /><br />If you would like more information on wolfSSL’s beta release of our SCEP implementation, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. <br /><br /><b>References<br /></b><a href="http://tools.ietf.org/html/draft-nourse-scep-23#page-5">Internet Engineering Task Force</a><br /><a href="https://en.wikipedia.org/wiki/Simple_Certificate_Enrollment_Protocol">Wikipedia</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-9-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Benchmarks of curve25519',
    'post_content' => 'Preliminary benchmarks on the upcoming curve25519 implementation display why it is listed as being a speed record breaker. On average, a TLS connection using curve25519 with RSA signature, 128 bit AES and SHA is approximately 15 percent faster than when using NIST curves with the same suite. When using the recently released ChaCha20-Poly1305 suite and curve25519 the TLS connection time is even faster than that of the AES suite. Curve25519 so far is destroying the key agreement and generation benchmarks of previous curves, putting up numbers for both key agreement and generation that are on average 86 percent faster than those of NIST curves.<br /><br />For more information on the upcoming curve25519 implementation contact us at <a href="http://www.wolfssl.com/">www.wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-9-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.2.0 Released',
    'post_content' => 'CyaSSL version 3.2.0 has been released and is now available for download from the wolfSSL website.  This release includes bug fixes and several new features which we think will be beneficial to our user and customer base.  Fixes and features include:<br /><br />- ChaCha20 and Poly1305 crypto and suites<br />- Small stack improvements for OCSP, CRL, TLS, DTLS<br />- NTRU Encrypt and Decrypt benchmarks<br />- Updated Visual Studio and Keil MDK5 project files<br />- Fix for DTLS sequence numbers with GCM/CCM<br />- Updated HashDRBG with more secure struct declaration<br />- TI-RTOS support and example Code Composer Studio project files<br />- Ability to get enabled cipher suites, CyaSSL_get_ciphers()<br />- AES-GCM/CCM/Direct support for Freescale mmCAU and CAU<br />- Sniffer improvement checking for decrypt key setup<br />- Support for raw ECC key import<br />- Ability to convert ecc_key to DER, EccKeyToDer()<br />- Security fix for RSA Padding check vulnerability reported by Intel Security Advanced Threat Research team<br /><br />For more information, please see the CyaSSL README or our online documentation.  As always, we`re happy answer any questions you have about this release or the CyaSSL lightweight SSL/TLS library.<br /><br />CyaSSL Download:  <a href="http://yassl.com/yaSSL/download/downloadForm.php">http://yassl.com/yaSSL/download/downloadForm.php</a><br />CyaSSL Manual:  <a href="http://www.wolfssl.com/yaSSL/Docs-cyassl-manual-toc.html">http://www.wolfssl.com/yaSSL/Docs-cyassl-manual-toc.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-9-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Backoff and BlackPOS Malware Breach Retailers Point of Sale Systems',
    'post_content' => 'Retailers worldwide have been scrambling to maintain secure POS(point of sale) systems after the latest security breaches to corporations such as UPS, Target and, most recently, Home Depot. Larger corporations should not be the only ones concerned. According to the RSA Conference blog post, “<a href="http://www.rsaconference.com/blogs/625/rashid/understanding-pos-malware-infecting-retailers">Understanding PoS Malware Infecting Retailers</a>,” the malware involved is simple to implement and the source code is easily accessed from online criminal forums. It is difficult to detect the network breaches, making it even more challenging to discover the issue immediately. It was recently learned that a new version of BlackPOS, or Kaptoxa, the malware responsible for the Target breach, was also the culprit behind the Home Depot breach. This updated version of BlackPOS could have been stealing customer information for months. Another malware software known as Backoff, has affected 1,000 businesses and seven POS vendors,as <a href="http://www.darkreading.com/backoff-dairy-queen-ups-and-retails-growing-pos-security-problem/d/d-id/1306764">estimated by the Secret Service</a>.<br /><br />Even in light of recent retailer breaches, this doesn’t mean companies will always take the necessary precautions to secure their networks and POS systems. In the DarkReading article, “Backoff, Dairy Queen, UPS & Retail`s Growing PoS Security Problem,” Lev Lesokhin, executive vice president at CAST Software, states:<br /><br />“..The question is to what extent is it becoming a learned helplessness?"<br /><br />Does this mean that retailers are going to look at this problem as the inevitable and not put the necessary time and effort into creating a secure system? This is the question posed by Lesokhin but there are still simple steps that companies can follow to ensure they are doing everything to protect their customers. The DarkReading article also notes that “cleaner code tends to lead to more secure code,” meaning software security vendors and retailers can both take measures to reduce network weaknesses.<br /><br />According to the PCI Security Council, retailers should maintain the most recent and up to date version of their malware prevention software and make sure there is detection for Backoff and other similar types of point of sale malware. System logs should be reviewed for abnormal activity and large data files being sent to unknown sources. Companies should require that all passwords be updated regularly and provide instruction to staff on creating secure passwords. There are many other procedures that can be done, and the PCI provides more detailed information in their “<a href="https://www.pcisecuritystandards.org/pdfs/140827_PCI_SSC_Statement_on_Malware_Related_to_Recent_Breach_Incidents.pdf">Bulletin on Malware Related to Recent Breach Incidents</a>.” <br /><br />For questions regarding this article or for information on wolfSSL’s embedded security library, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. <br /><br />References<br /><a href="http://www.rsaconference.com/blogs/625/rashid/understanding-pos-malware-infecting-retailers?utm_source=rsac&utm_medium=sep-newsletter&utm_content=blog&utm_campaign=rsac14">RSA Conference Blog</a><br /><a href="http://krebsonsecurity.com/2014/09/home-depot-hit-by-same-malware-as-target/">Krebson Security</a><br /><a href="http://www.pcworld.com/article/2599940/retailers-urged-to-defend-against-backoff-pointofsale-malware.html">PC World</a><br /><a href="http://www.darkreading.com/backoff-dairy-queen-ups-and-retails-growing-pos-security-problem/d/d-id/1306764">DarkReading.com</a><br /><a href="https://www.pcisecuritystandards.org/pdfs/140827_PCI_SSC_Statement_on_Malware_Related_to_Recent_Breach_Incidents.pdf">PCI Security Standards</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-9-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The Importance of Open Source in Securing the Internet of Things',
    'post_content' => 'Open Source plays an important role in securing the Internet of Things. As more embedded products become available and security updates are required, devices will reach end-of-life, no longer supported by their creators, but will still remain in use. In the case of an open source project, developers within the open source community can contribute to updating the device as it continues to be used. This open source community can become an insurance blanket over a product, allowing the public to continue using a product that may no longer be supported by its initial developers, but still has active contributors. <br /><br />In Beth Flanagan’s recent keynote talk at OSCON 2014, she discusses the importance of security and Open Source within the Internet of Things. Her speech, <a href="https://www.youtube.com/watch?v=Vd8dXzAL-W8&list=PL055Epbe6d5Y3njTzpWt0VepR1B7tcRFH&index=40&imm_mid=0c27b6&cmp=em-prog-na-na-newsltr_20140906">“Yes, Your Refrigerator is Trying to Kill You,”</a> covers the consequences of insufficient security in embedded devices. The title example is the idea of someone hacking into your refrigerator and turning it off every night and back on every morning, slowly spoiling your food and ultimately leading to your death. While this control over your refrigerator could very easily occur and devices belonging to the connected home should still be considered highly important on a security level, these types of devices are not her main concern, but rather implantable devices, such as pacemakers, that contribute to keeping a person alive. If a pacemaker or insulin pump has wireless capabilities, a user’s health could be dictated by someone hacking into the device, which demonstrates the immediate need for a secure system.<br /><br />wolfSSL developed CyaSSL with this need for security and open source development in mind. With a GPL v2.0 license as an option for building with the CyaSSL lightweight, embedded SSL library, content is available to open source projects, further enhancing the security features. Since CyaSSL was designed for embedded devices, developers have the option to seamlessly secure any of their products. <br /><br />If you are a developer with questions regarding CyaSSL, open source, or securing an embedded device, please contact us at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a> or go to our website at <a href="http://www.wolfssl.com/">www.wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-9-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Spritz, a drop-in replacement for RC4',
    'post_content' => 'Recently at the <a href="http://www.iacr.org/conferences/crypto2014/">CRYPTO 2014</a> conference rump sessions several interesting papers were presented. Ron Rivest presented a paper he and Jacob C. N. Schuldt wrote on finding an improved replacement for the RC4 stream cipher they named <a href="http://crypto.2014.rump.cr.yp.to/3de41b60e32a494c8f0fc9c21c67063a.pdf">Spritz</a>. Their goal was to find a drop in replacement for RC4 that wasn’t susceptible to the known attacks. They used a statistical process to generate and analyze several thousand candidate ciphers.<br /><br />If anyone is interested in seeing an implementation of Spritz, send us a message at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. We’d love to hear from you.',
    'post_status' => 'publish',
    'post_date' => date('2014-9-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Case Study: wolfSSL enables Sensity Systems to Secure Light Sensory Networks (LSNs)',
    'post_content' => 'wolfSSL has released a case study highlighting how Sensity Systems is using the CyaSSL lightweight SSL/TLS library to secure Light Sensory Networks (LSNs).  This case study highlights the key requirements Sensity had for securing their devices, how CyaSSL was used as a solution, and summarizes Sensity’s thoughts on the project.<br /><br />As stated on the Sensity Systems website, a Light Sensory Network, or LSN, is “a new class of digital sensor network that takes advantage of LED lighting conversions to help light owners enhance energy efficiency while transforming their luminaires into strategic assets.”  To learn more about LSNs, we encourage our users to visit the Sensity Systems’ website, listed below.<br /><br />You can download the case study directly from the wolfSSL website at the following location.  If you have any questions about using CyaSSL to secure embedded or IoT devices, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br /><br />wolfSSL / Sensity Systems (LSN) Case Study: <a href="perma://BLPageReference/B041BC15-002B-49EB-9993-EE890772EB7E">wolfSSL Case Studies</a><br />Sensity Systems:  <a href="http://www.sensity.com/">http://www.sensity.com/</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-9-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TivaWare Code Composer Studio wolfSSL Examples',
    'post_content' => 'CyaSSL now has example projects that can be compiled in Code Composer Studio (CCS) and debugged on the Tiva™ C Series TM4C1294NCPDT (1294XL) Connected Launchpad. Please see the <a href="https://github.com/wolfSSL/wolfssl-examples/blob/master/tirtos_ccs_examples/README">README</a> under wolfSSL / wolfssl-examples / tirtos_ccs_examples on <a href="http://www.github.com/">www.github.com</a> for instructions on building CyaSSL with Texas Instruments-Real Time Operating System (TI-RTOS). Please visit <a href="http://www.ti.com/tool/sw-tm4c">http://www.ti.com/tool/sw-tm4c</a> for all other things Tiva C.<br /><br />For questions or comments, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-9-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on IBM AIX',
    'post_content' => 'IBM`s operating system, AIX (Advanced Interactive eXecutive), is the standard operating system for the RS/6000 series. The RS/6000 series being UNIX servers, workstations, and supercomputers made by IBM.  AIX is also currently supported in IBM`s Power Systems. One of the notable features in their 2010 release is that it could support 256 cores /1024 threads in a single virtual machine.<br /><br />wolfSSL has not been ported to or tested on the operating system and we would like to see if that is something the community is interested in seeing happen. Let us know if you would like to see wolfSSL SSL/TLS and/or wolfCrypt support for AIX operating systems.',
    'post_status' => 'publish',
    'post_date' => date('2014-9-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Hacking the Connected Home',
    'post_content' => 'For a fun read on hacking the connected home, see Dark Reading at:  <a href="http://www.darkreading.com/vulnerabilities---threats/how-i-hacked-my-home-iot-style/a/d-id/1306758?_mc=NL_DR_EDT_DR_weekly_20140828&cid=NL_DR_EDT_DR_weekly_20140828&elq=010c2c91c2534e8789150ac664d85d7c&elqCampaignId=7761">How I hacked my home</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New Hire Announcement',
    'post_content' => 'We are thrilled to announce that Mark Minnoch has joined the wolfSSL team.  Mark brings more than 20 years of software and systems sales experience in the Networking and Cryptographic Testing industries to wolfSSL.<br /><br />"Mark is on board at a crucial time to help us respond to the jump in demand for our lightweight, open source embedded SSL/TLS library for securing connections,” said Larry Stefonic, wolfSSL co-founder.<br /><br />He joins wolfSSL most recently from InfoGard Laboratories, the leading FIPS 140-2 Cryptographic and Security Testing company.  Mark served as a FIPS Security Engineer, Laboratory Director, and Account Manager during his 7+ years at InfoGard.  Prior to that, Mark was a Sales Engineer for a network management company.<br /><br />“I know the challenges in front of IT vendors when they face their first FIPS 140-2 project,” said Mark.  “Now that I am with wolfSSL, I can provide my FIPS expertise to effectively guide IT vendors on the path to their goals.”  <br /><br />Mark holds a Bachelor of Science Degree in Applied Mathematics from California Polytechnic State University in San Luis Obispo, CA.  He also has CISSP and CISA security certifications.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Notes on Testing wolfSSL',
    'post_content' => 'Here at wolfSSL we recently added fuzz testing to our testing processes. Security of CyaSSL software is always on our mind. As the software is used to secure connections and provide software security, the testing of how robust and secure CyaSSL is holds high importance. <br /><br />As with the halting problem we know it is impossible to test every single possible path through the software but we practice an approach that is focused on lowering risk of failure. In addition to extensive automated tests we also make sure that we specifically test well known use cases. This post outlines some of our testing processes.<br /><br />1.  <b>Build options</b>:  The first approach we use is by testing combinations of build options. Although there are too many potential combinations to test them all, this approach tests for potential issues with build option compatibility and also allows us to place a confidence value on build option combinations not yet used.  We commonly use valgrind and scan-build when testing individual build options.<br /><br />2.  <b>API testing</b>:  In each particular build, we test every available call to cover API uses.<br /><br />3.  <b>Connection testing and data passing variables</b>:  To test this we start with simple connections and data, then as the test progresses we gradually increase the complexity of connection details.<br /><br />4.  <b>Interop</b>:  We test for interoperability with the other open source TLS implementations, including OpenSSL and GnuTLS.<br /><br />5.  We then test interoperability outside of a closed environment and connect to unknown servers in the real world.<br /><br />6.  We build with a series of `real` applications, like cURL, wget, pppd, etc.  For some of our customers with top level support, we build the new release with their application.<br /><br />7. We test using a fuzzing software technique. This bombards the program with invalid, unexpected, and random data that then allows for observing if there is potential memory leaks or logic errors.<br /><br />8. We engage in another ever expanding universe of benchmark testing, where we look at sizing, transmission rates, connection speeds, etc.<br /><br />Much of our effort is automated by Jenkins (hat tip to that project!).  Thanks for listening.  If you have specific questions about how we test, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and Curve25519',
    'post_content' => 'wolfSSL is in the process of adding curve25519 to the CyaSSL lightweight SSL/TLS library. You may ask, why add another ECC curve when CyaSSL already has quite a few ECC options? Curve25519 was chosen because of its record-setting speed while maintaining reliable security. In fact compared with some of the previous ECC curves, Curve25519 actually cuts the time taken to perform in half.<br /><br />A paper by Daniel Bernstein for farther reading can be found at <a href="http://cr.yp.to/ecdh/curve25519-20060209.pdf">http://cr.yp.to/ecdh/curve25519-20060209.pdf</a>.  If you want more details on our roadmap for Curve25519, contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be at Microchip Masters 2014',
    'post_content' => 'wolfSSL will be attending and exhibiting at the 2014 Microchip Masters conference in Phoenix, AZ this week.  We’ll be visiting with Microchip users about integrating and leveraging the CyaSSL lightweight SSL/TLS library and wolfCrypt cryptography engine to secure PIC32-based applications.<br /><br />From the <a href="https://secure.microchip.com/usmasters/home.aspx">conference website</a>, “Now in its 18th consecutive year, Microchip’s MASTERs Conference has become the premiere technical training conference for embedded control engineers. The Conference has now expanded to locations in 6 countries and provides training classes at all technical levels. Engineers can choose from classes about Microchip’s products as well as general embedded control topics such as motor control, power supply design, lighting control, communication protocols like USB and TCP/IP, C programming, graphic display technologies, touch sense methods and analog system design.”<br /><br />wolfSSL will also be co-presenting a class on Friday (8/22/14) from 8 AM - 12 PM:<br /><br /><b>Title:<br /></b>18080 ICS : Enabling Security for an Embedded Web Server/Client<br /><br /><b>Class Description:<br /></b><br />Communications security is a vital part of the growing connected world. With the complexity of embedded devices growing, it is even more important that they provide a level of security to fend off malicious attacks. This course will teach the basics of Internet communications security, the most popular way of securing communications, and introduce the CyaSSL library that can be integrated with an MPLAB® Harmony application to provide this level of security.<br /><br /><b>Microchip Masters 2014: </b> <a href="https://secure.microchip.com/usmasters/home.aspx">https://secure.microchip.com/usmasters/home.aspx</a><br /><b>Microchip: </b> <a href="http://www.microchip.com/">http://www.microchip.com/</a><br /><br />If you’re going to be attending the conference and want to set up a meeting time, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Tuning Guide Now Available',
    'post_content' => 'The wolfSSL Tuning Guide is a reference that allows developers to optimize the performance and memory of the wolfSSL embedded SSL library within their products. The tuning guide includes three recipes for adjusting your wolfSSL implementation to build with minimum footprint, maximum speed, or maximum security. Choosing the correct recipe for building wolfSSL depends on a number of design goals such as the desired security level or memory footprint. These design goals are covered more thoroughly in the tuning guide. <br /><br />To view these recipes and optimization options for wolfSSL, please view the <a href="http://www.yassl.com/yaSSL/Docs-cyassl-tuning-guide.html">wolfSSL Tuning Guide</a> on our website. For questions or comments, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ChaCha20 and Poly1305 AEAD in wolfSSL',
    'post_content' => 'We are excited to share our latest enhancement to wolfSSL, which is the addition of ChaCha20 and Poly1305 AEAD cipher suites.  Currently they are compatible with the Google server and have the added bonus of also being able to use the more recent ChaCha20 - Poly1305 AEAD constructions. <br /><br />All that we have left to do with the suites is to be put them through our extensive genetic testing system  If you are interested in getting a copy early and beta testing the cipher suites please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-8-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'IoT Demo Series #2: wolfSSL Working with Twilio and mbed',
    'post_content' => 'You may be familiar in general with the role of Web APIs in IoT scenarios. This demo shows how CyaSSL can easily secure the communications between IoT devices and cloud services.<br /><br />Twilio is a cloud-based Voice and SMS service that allows a client PC or smart phone to be used in building intelligent communications. With the compact security protocol for embedded systems like CyaSSL, the service can immediately be extended to smart "things" in the network.<br /><br />This simple demo program runs on any network-connected mbed with a CyaSSL+HTTPS based web API. It triggers Twilio phone call and text speech through the web API.<br /><br />To take a look at the project, please visit our mbed site and import the demo.<br /><br /><a href="http://mbed.org/users/wolfSSL/">http://mbed.org/users/wolfSSL/</a><br /><a href="http://mbed.org/users/wolfSSL/code/CyaSSL-Twilio/">http://mbed.org/users/wolfSSL/code/CyaSSL-Twilio/</a><br /><a href="http://mbed.org/users/wolfSSL/code/CyaSSL-Twilio-Dropbox/">http://mbed.org/users/wolfSSL/code/CyaSSL-Twilio-Dropbox/</a><br /><br />For more information:<br />Twilio: <a href="http://twilio.com/">http://twilio.com</a><br />mbed: <a href="http://mbed.org/">http://mbed.org</a><br /><br />mbed HTTPClient class:<br /><a href="http://mbed.org/users/donatien/code/HTTPClient/">http://mbed.org/users/donatien/code/HTTPClient/</a><br /><a href="http://mbed.org/handbook/TCP-IP-protocols-and-APIs">http://mbed.org/handbook/TCP-IP-protocols-and-APIs</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-7-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at OSCON 2014',
    'post_content' => 'OSCON, an open source convention, is focused on delivering information and education on successful implementation of open source programs into your own projects. “OSCON is where all of the pieces come together: developers, innovators, businesspeople, and investors.” wolfSSL is heavily invested in the open source community with our lightweight, embedded SSL/TLS library, CyaSSL, being one of our many contributions. <br /><br />Todd Ouska, co-founder of wolfSSL, will be attending OSCON 2014 on July 23rd in Portland, OR. If you have any questions regarding OSCON and wolfSSL, or would like to meet up, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />References<br /><a href="http://www.oscon.com">OSCON Official Site</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-7-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL with SmartOS',
    'post_content' => 'wolfSSL has been tested with and works on <a href="http://smartos.org/">SmartOS</a>! SmartOS is an operating system used specifically for databases and in conjuncture with cloud operations. It inherited features from the well known Solaris and has been extended by <a href="https://www.joyent.com/">Joyent</a> to make it great for cloud operators. <br /><br />One of the big things added was disk I/O throttling - see the following YouTube link on why that is good to have. (<a href="http://www.youtube.com/watch?v=a6AJxAYmP-M">http://www.youtube.com/watch?v=a6AJxAYmP-M</a>) . The OS does provide some measure of security in their file operations but wolfSSL could be used alongside the operating system to allow more options for encrypting stagnant files that are being stored and passed between the OS and the cloud. Another feature that wolfSSL could provide for it, along with continuous updates that are focused on security, is that we would be able to provide support for upcoming suites such as recent ones using AEAD. <br /><br /><a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">Contact us</a> here at wolfSSL if this is something you would like to see happen with your cloud and database operations.',
    'post_status' => 'publish',
    'post_date' => date('2014-7-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL IPv6 Compatibility',
    'post_content' => 'For some time now wolfSSL has been compatible with and will continue to support IPv6. While according to Google`s IPv6 adoption statistics only 4% of the Internet has adopted IPv6, that number is more than doubling every year. At the beginning of 2013 the percentage of IPv6 adoption was only 1.06%, and at the end of 2013 it was sitting at 2.84%. And now only halfway through 2014, it has risen to 4.06%.<br /><br />With IPv6 on the rise, the need for an SSL library that supports it is also on the rise. By using the wolfSSL embedded library you are future proofing yourself against the rise of IPv6 with an embedded library built by individuals that have had years of experience securing both IPv4 and IPv6 connections. By design wolfSSL supports both IPv4 and IPv6 and is considered IP neutral, meaning it should work out of the box on either protocol without any additional configurations.<br /><br />For more information on IPv6, you can refer to it’s wiki page: <a href="http://en.wikipedia.org/wiki/IPv6">http://en.wikipedia.org/wiki/IPv6</a><br /><br />Google`s IPv6 Statistics: <a href="https://www.google.com/intl/en/ipv6/statistics.html">https://www.google.com/intl/en/ipv6/statistics.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-7-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and openPicus',
    'post_content' => '<a href="http://www.openpicus.com/">openPicus</a> provides hardware for use with IoT, M2M, and the cloud.  These hardware modules connect using Wifi and Ethernet connections, and as such, these connections need to be secured when communicating.  wolfSSL is curious about the current need of our customer and user base for having secure connections on this hardware.<br /><br />Do you want to use CyaSSL with openPicus modules?  <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">Contact us</a> if SSL/TLS or cryptography support for OpenPicus is something that you would like to see added to CyaSSL and/or wolfCrypt.',
    'post_status' => 'publish',
    'post_date' => date('2014-7-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.1.0 Released',
    'post_content' => 'CyaSSL 3.1.0 has been released and is now available for download from the <a href="http://wolfssl.com/yaSSL/download/downloadForm.php">wolfSSL website</a>.  This release includes bug fixes and new features including:<br /><br />- Fix for older versions of icc without 128-bit type<br />- Intel ASM syntax for AES-NI<br />- Updated NTRU support, keygen benchmark<br />- FIPS check for minimum required HMAC key length<br />- Small stack (--enable-smallstack) improvements for PKCS#7, ASN<br />- TLS extension support for DTLS<br />- Default I/O callbacks external to user<br />- Updated example client with bad clock test<br />- Ability to set optional ECC context info<br />- Ability to enable/disable DH separate from opensslextra using --enable-dh and --disable-dh<br />- Additional test key/cert buffers for CA and server, located in certs_test.h<br />- Updated example certificates<br /><br />Please see the README and our <a href="http://wolfssl.com/yaSSL/Docs.html">on-line documentation</a> for more information or feel free to <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-7-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'meta-wolfssl Layer for Yocto and OpenEmbedded',
    'post_content' => 'We have been working within <a href="http://www.openembedded.org">OpenEmbedded</a> and the <a href="https://www.yoctoproject.org">Yocto Project</a> to develop an Open Source SSL/TLS layer designed for incorporating CyaSSL into custom Linux builds for embedded systems. <a href="https://github.com/wolfSSL/meta-wolfssl">meta-wolfssl</a> contains three completed recipes including the CyaSSL library as well as the CTaoCrypt (wolfCrypt) test and benchmark executables. You can now test and send information quickly and securely through your embedded device using our portable and lightweight SSL/TLS library. <br /><br />These recipes can be easily incorporated into any bitbake build, specifically through the use of the OpenEmbedded and Yocto Project utilities. For our original construction, we ran a custom version of core-image-sato (a mobile image platform) on the <a href="http://www.minnowboard.org/">Minnowboard</a>.<br /><br />The <a href="https://github.com/wolfSSL/meta-wolfssl">meta-wolfssl github</a> page includes detailed instructions for installing any of these recipes in your build image. Check back for future updates regarding meta-wolfssl and OpenEmbedded/Yocto. If you have any questions regarding adding wolfSSL to your OpenEmbedded/Yocto projects, feel free to contact us at <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2014-7-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and RakNet',
    'post_content' => 'Hi everyone, we’re curious if anyone is interested in using wolfSSL-based RakNet. RakNet is a high-performance network API designed for games or other high-performance network applications. It is intended to provide most all features modern games need, such as a master server, autopatcher, voice chat, and cross-platform capabilities. You can learn more at the following URL:<br /><br /><a href="http://www.jenkinssoftware.com/">http://www.jenkinssoftware.com/</a><br /><br />If you have any questions, or will like to see wolfSSL working with RakNet, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2014-7-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL FIPS 140-2 Certification Status Update',
    'post_content' => 'wolfSSL will soon have <a href="http://en.wikipedia.org/wiki/FIPS_140-2">FIPS 140-2</a> level one validation for the <a href="http://www.yassl.com/yaSSL/Products-wolfcrypt.html">wolfCrypt</a> crypto engine! We have entered the lab process and will be out of the lab as soon as August 15, 2014. Our application will then be submitted to <a href="http://www.nist.gov/">NIST</a> for final review. <br /><br />The <a href="http://en.wikipedia.org/wiki/FIPS_140-2">FIPS</a> certification will support a broad range of wolfSSL customers, specifically those who sell to the US government. <br /><br />FIPS, Federal Information Processing Standards, consists of public security and communication standardizations developed by the US government. These standardizations are for use by nonmilitary government agencies and contractors. <br /><br />wolfSSL is on the NIST FIPS 140 in process list, which is here:  <a href="http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140InProcess.pdf">http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140InProcess.pdf</a><br /><br />We will keep our blog updated on our FIPS certificate progress, but if you would like more information regarding wolfSSL’s FIPS certification, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at +1 425 245 8247.  ',
    'post_status' => 'publish',
    'post_date' => date('2014-7-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Born in the USA!',
    'post_content' => 'We receive a lot of questions about the origins of the wolfSSL lightweight SSL library and wolfCrypt software packages.  We get asked where they were developed, and by who?  These questions usually come from US government agencies and their contractors.  Simply stated, mes amis, wolfSSL and wolfCrypt were <a href="http://www.youtube.com/watch?v=tIekamBDiAw">Born in the USA</a> and written by <a href="http://www.youtube.com/watch?v=lMsIrKjSM6Y">US citizens</a>. <br /><br />If you have any additional questions about the origins of wolfSSL or wolfCrypt, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a><br /><br />Happy 4th of July!',
    'post_status' => 'publish',
    'post_date' => date('2014-7-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Android SSL Client App',
    'post_content' => 'The wolfSSL Android Client is our first Android application that incorporates the CyaSSL lightweight SSL library together with the wolfSSL JNI library in order to test secure connections to servers across the Internet. With our Android SSL Client you can quickly test SSL, TLS, and DTLS connections whether they be located on a local network or across web. The wolfSSL Android Client has multiple options and settings that you can personalize such as setting your own certificates and keys, changing the active security layer, and choosing which from a wide variety cipher suite to use. <br /><br />The client outputs color formatted information about the connection to a central console window within the wolfSSL Client application. The wolfSSL Android Client was built to be very simple, fast, and user friendly rather than slow, complicated and confusing.<br /><br />If you have any feedback, comments, or suggestions that you would like to see incorporated into later versions, please contact us at: <a href="mailto:info@wolfssl.com">info@wolfssl.com</a><br /><br />We invite you to download our SSL Client for free on the Play Store, or by following this link:  <a href="https://play.google.com/store/apps/details?id=com.wolfssl.client">https://play.google.com/store/apps/details?id=com.wolfssl.client</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-6-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'RFC 5487 in wolfSSL TLS Library',
    'post_content' => 'HI!  We are implementing RFC 5487 in wolfSSL.  If you are interested in using RFC 5487 with our product, then let us know what your requirement is, and then we can build it in.  Feel free to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or call us at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-6-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Summer of Security',
    'post_content' => '“Fear urged him to go back, but growth drove him on.” ―<a href="https://www.goodreads.com/author/show/1240.Jack_London"> Jack London</a>,<a href="https://www.goodreads.com/work/quotes/2949952"> White Fang</a> <br /><br />The Internet of Things is a fast growing technology sector with new embedded devices introduced daily. With this increase in products which frequently require SSL/TLS and cryptography, wolfSSL has been experiencing continual growth and decided to bring in a team of interns for the 2014 Summer season. wolfSSL executives chose to recruit students from <a href="http://www.montana.edu/">Montana State University</a> which is known for its ability to produce exceptional Computer Science graduates. Six students were selected for the Summer and will be completing their internships in Bozeman, MT under the direction of Chris Conlon, senior engineer at wolfSSL, also a Montana State graduate. <br /><br />The Summer of Security program is allowing the wolfSSL interns to gain knowledge in the embedded SSL industry as well as valuable programming experience in Linux and embedded distributions. Throughout the Summer, the interns will play a role in improving documentation, current examples, and community support within wolfSSL. Interns will be learning the CyaSSL SSL and TLS library and writing documents to provide users with a better understanding of the CyaSSL library.<br /><br />The Summer of Security is a great opportunity for students to increase work experience in the field of computer science and work towards a potential career as part of the wolfSSL team. The team at wolfSSL looks for knowledgeable students who have experience in C systems development. Prior embedded systems experience is a plus. If you are interested in learning more about the wolfSSL Summer of Security internship program, feel free to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-6-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS 1.3 on Github',
    'post_content' => 'Hi!  We wanted to point out to our users that the TLS 1.3 working group has put their specification work up on Github at:  <a href="https://github.com/tlswg/tls13-spec">https://github.com/tlswg/tls13-spec</a><br /><br />We are eager to implement TLS 1.3 as it gets closer to its final specification!  We think this new protocol iteration will add a lot of improvement!  As such, we`re excited to get going and need user feedback.  Please contact us to let us know what parts of the spec are most important to you.  We will consider adding pieces of TLS 1.3  to our current TLS 1.2 implementation, should users of wolfSSL need them.  Let us know your thoughts at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-6-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be at Black Hat 2014',
    'post_content' => 'wolfSSL will be exhibiting at the 2014 Black Hat USA security conference at the Mandalay Bay Convention Center in Las Vegas, NV on August 6-7. <br /><br />“Black Hat USA is the show that sets the benchmark for all other security conferences. As Black Hat returns for its 17th year to Las Vegas, we bring together the brightest in the world for six days of learning, networking, and skill building. Join us for four intense days of Trainings and two jam-packed days of Briefings.” - Black Hat USA<br /><br />wolfSSL’s exhibit will be located at booth #266 and will be covering the CyaSSL Embedded SSL Library, wolfCrypt Embedded Crypto Engine, yaSSL Embedded Web Server, and SSL Inspection. If you have questions, are curious about our products, or simply want to chat about open source software, feel free to stop by!<br /><br />wolfSSL Expo Dates: 8/6/2014 - 8/7/2014<br />BlackHat Conference Dates: 8/2/2014 - 8/7/2014<br /><br />For more information, please visit the official Black Hat site: <a href="https://www.blackhat.com/us-14/">https://www.blackhat.com/us-14/</a>.<br /><br />To schedule a meeting with wolfSSL during Black Hat, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-6-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Video Tutorial: Basic Compilation and Installation of wolfSSL',
    'post_content' => 'If you are looking for a quick and easy guide on compiling, installing and using wolfSSL, then we have some good news: In order to make it even easier to understand and install wolfSSL, we recently created a video tutorial to help get you started.  <br /><br />The video will walk you through the downloading and installing process, as well as provided a basic demonstration of a few of wolfSSL’s example client and server programs. The video is on our YouTube channel, which can be found here: <a href="https://www.youtube.com/channel/UCxcGPWzOnhdocvKmxqhfvPg">https://www.youtube.com/channel/UCxcGPWzOnhdocvKmxqhfvPg</a><br /><br />With a direct link to the video here: <br /><a href="https://www.youtube.com/watch?v=zXRLwW0DIPA">https://www.youtube.com/watch?v=zXRLwW0DIPA</a><br /><br />wolfSSL is a C-based embedded SSL/TLS library which is lightweight, portable, and works with a wide range of systems.  It offers a simple, easy to use, API with several abstraction layers for ease of access in a wide range of product types.  <br /><br />If you have any questions feel free to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or <a href="mailto:support@wolfssl.com">support@wolfssl.com</a>. For more information, you may visit us at <a href="http://www.wolfssl.com/">http://www.wolfssl.com/</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-6-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Intro to PKCS #5: Password-Based Cryptography Specification',
    'post_content' => 'Our third post in our <a href="perma://BLPageReference/045B3B22-2B81-4AE6-A1A7-23B64BE17F56">PKCS series</a>, we will be looking at PKCS  #5. PKCS #5 is the Password-Based Cryptography Specification and is currently defined by version 2.0 of the specification. It is defined in RFC 2898 <a href="http://tools.ietf.org/html/rfc2898">http://tools.ietf.org/html/rfc2898</a>. It applies a pseudorandom function, such as a cryptographic hash, cipher, or HMAC to the input password or passphrase along with a salt value and repeats the process many times to produce a derived key, which can then be used as a cryptographic key in subsequent operations. The added computational work makes password cracking much more difficult, and is known as key stretching. <br /><br /><b>A. Key Derivation Functions<br /></b><br />A key derivation function produces a derived key from a based key and other parameters. In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count. <br /><br />Two functions are specified below: PBKDF1 and PBKDF2. PBKDF2 is recommended for new applications; PBKDF1 is included only for compatibility with existing applications, and is not recommended for new applications. <br /><br /><b>B. PBKDF1<br /></b><br />PBKDF1 applies a hash function, which shall be MD2, MD5 or SHA-1, to derive keys. The lengths of the derived keying bounded by the length of the hash function output, which is 16 octets from MD2 and MD5 and 20 octets from SHA-1.<br /><br />Steps:<br /><br />1. If dkLen > 16 for MD2 and MD5, or dkLen > 20 for SHA-1, output "derived key too long" and stop.<br /><br />2. Apply the underlying hash function Hash for c iterations to the concatenation of the password P and        <br />    the salt S, then extract the first dkLen octets to produce a derived key DK:<br /><br /><i>T_1 = Hash (P || S) ,<br />T_2 = Hash (T_1) ,<br />...<br />T_c = Hash (T_{c-1}) ,<br />DK = Tc<0..dkLen-1><br /></i><br />3. Output the derived key DK.<br /><br /><b>C. PBKDF2<br /></b><br />PBKDF2 applies a pseudorandom function to derive keys. The length of the derived key is essentially unbounded. However, the maximum effective search space for the derived key may be limited by the structure of the underlying pseudorandom function. <br /><br />Steps:<br /><br />1. If dkLen > (2^32 - 1) * hLen, output "derived key too long" and stop.<br /><br />2. Let l be the number of hLen-octet blocks in the derived key, rounding up, and let r be the number of octets <br />    in the last block:<br /><br /><i>l = CEIL (dkLen / hLen) ,<br />r = dkLen - (l - 1) * hLen .<br /></i><br />Here, CEIL (x) is the "ceiling" function, i.e. the smallest integer greater than, or equal to, x.<br /><br />3. For each block of the derived key apply the function F defined below to the password P, the salt S, the 	 <br />    iteration count c, and the block index to compute the block:<br /><br /><i>T_1 = F (P, S, c, 1) ,<br />T_2 = F (P, S, c, 2) ,<br />…<br />T_l = F (P, S, c, l) ,<br /></i><br />where the function F is defined as the exclusive-or sum of the first c iterates of the underlying pseudorandom  function PRF applied to the password P and the concatenation of the salt S and the block index i:<br /><br /><i>F (P, S, c, i) = U_1 \xor U_2 \xor ... \xor U_c<br /></i><br />where<br /><br /><i>U_1 = PRF (P, S || INT (i)) ,<br />U_2 = PRF (P, U_1) ,<br />...<br />U_c = PRF (P, U_{c-1}) .<br /></i><br />Here, INT (i) is a four-octet encoding of the integer i, most significant octet first.<br /><br />4. Concatenate the blocks and extract the first dkLen octets to produce a derived key DK:<br /><br /><i>DK = T_1 || T_2 ||  ...  || T_l<0..r-1><br /></i><br />5. Output the derived key DK.<br /><br />To learn more about PKCS #5, you can look through the specification, here:<br /><br /><a href="http://tools.ietf.org/html/rfc2898">http://tools.ietf.org/html/rfc2898</a><br /><br /><b>D. CyaSSL Support<br /></b><br />CyaSSL supports both PBKDF1 and PBKDF2. The header file can be found in <cyassl_root>/cyassl/ctaocrypt/pwdbased.h and the source file can be found in <cyassl_root>/ctaocrypt/src/pwdbased.c of the CyaSSL library. When using these functions, they must be enabled when CyaSSL is configured. This is done by:<br /><br />./configure –enable-pwdbased<br /><br />The functions:<br /><br />int PBKDF1(byte* output, const byte* passwd, int pLen,<br />                      const byte* salt, int sLen, int iterations, int kLen,<br />                      int hashType);<br /><br />int PBKDF2(byte* output, const byte* passwd, int pLen,<br />                      const byte* salt, int sLen, int iterations, int kLen,<br />                      int hashType);<br /><br />CyaSSL also supports PKCS12<br /><br />int PKCS12_PBKDF(byte* output, const byte* passwd, int pLen,<br />                            const byte* salt, int sLen, int iterations,<br />                            int kLen, int hashType, int purpose);<br /><br />To learn more about the CyaSSL embedded SSL library, you can download a free GPLv2-licensed copy from the wolfSSL download page, <a href="http://wolfssl.com/yaSSL/download/downloadForm.php">http://wolfssl.com/yaSSL/download/downloadForm.php</a>, or look through the CyaSSL Manual, <a href="http://www.wolfssl.com/yaSSL/Docs-cyassl-manual-toc.html%22%20%5Co%20%22http://www.yassl.com/yaSSL/Docs-cyassl-manual-toc.html">http://www.wolfssl.com/yaSSL/Docs-cyassl-manual-toc.html</a>.  If you have any additional questions, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-6-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Integrating ChaCha20 and Poly1305 Into wolfSSL',
    'post_content' => 'We`ve implemented ChaCha20 allowing for the use of both 128 bit and 256 bit keys and are in the process of implementing Poly1305 into wolfSSL. Both crypt tools and a suite using the two are on schedule to be released by the end of the summer.<br /><br />The ChaCha20 and Poly1305 algorithms, originally developed by Bernstein, have been shown to be very secure. Further reading about these algorithms can be found in the link below. <br /><br /><a href="http://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04">http://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04</a><br /><br />We`re excited about this addition to our code.  If you have comments, questions, or need it in our code sooner than the end of this summer, let us know!  We can be reached at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or by phone at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-6-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL on Raspberry Pi',
    'post_content' => 'Did you know that the wolfSSL lightweight SSL library builds and runs out of the box on the Raspberry Pi? We recently ran tests on a Raspberry Pi model B with wolfSSL 3.0.0. You can check out the results below:<br /><br />1. Downloading<br /><br />For the test, we downloaded cyassl-3.0.0.zip file from our <a href="http://yassl.com/yaSSL/download/downloadForm.php">download page</a>.<br /><br />2. Building<br /><br />Instead of <a href="http://www.openframeworks.cc/setup/raspberrypi/Raspberry-Pi-Cross-compiling-guide.html">cross compiling</a> wolfSSL to armv6, we compiled wolfSSL directly on our Raspberry Pi to get an average time of the building process. Following the process described in the README file to configure and build wolfSSL, the results were as follows:<br />	<br />	$ time ./configure<br />	...<br />	real	1m33.504s<br />	user	0m50.270s<br />	sys	0m16.550s<br /><br />	$ time make<br />	...<br />	real	3m20.676s<br />	user	2m50.290s<br />	sys	0m6.940s<br /><br />3. Benchmarking<br /><br />To decide which math library to use we compared the results of the default build (./configure) with a modified one (./configure --enable-fastmath):<br />	<br />wolfSSL Benchmark, Normal Big Integer Math Library<br /><br />pi@raspberrypi ~/cyassl-3.0.0 $ ./ctaocrypt/benchmark/benchmark<br />AES      5 megs took 0.880 seconds,   5.681 MB/s<br />ARC4     5 megs took 0.230 seconds,  21.734 MB/s<br />3DES     5 megs took 3.064 seconds,   1.632 MB/s<br /><br />MD5      5 megs took 0.104 seconds,  48.112 MB/s<br />SHA      5 megs took 0.217 seconds,  23.072 MB/s<br />SHA-256  5 megs took 0.498 seconds,  10.032 MB/s<br /><br />RSA 2048 encryption took 17.453 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took 147.625 milliseconds, avg over 100 iterations<br />DH  2048 key generation  48.942 milliseconds, avg over 100 iterations<br />DH  2048 key agreement   61.991 milliseconds, avg over 100 iterations<br /><br />wolfSSL Benchmark, Fast Big Integer Math Library<br /><br />pi@raspberrypi ~/cyassl-3.0.0 $ ./ctaocrypt/benchmark/benchmark<br />AES      5 megs took 0.889 seconds,   5.624 MB/s<br />ARC4     5 megs took 0.200 seconds,  24.943 MB/s<br />3DES     5 megs took 2.479 seconds,   2.017 MB/s<br /><br />MD5      5 megs took 0.101 seconds,  49.303 MB/s<br />SHA      5 megs took 0.217 seconds,  23.004 MB/s<br />SHA-256  5 megs took 0.561 seconds,   8.914 MB/s<br /><br />RSA 2048 encryption took  4.622 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took 131.030 milliseconds, avg over 100 iterations<br />DH  2048 key generation  57.496 milliseconds, avg over 100 iterations<br />DH  2048 key agreement   57.325 milliseconds, avg over 100 iterations<br /><br />As expected, the fastmath provided more performant RSA operations - thus we used this build for the example test.<br /><br />4. Running<br /><br />After testing the crypto layer, it was time to test the protocol layer running our client example against our server example running or a remote Ubuntu server:<br /><br />$ time ./examples/client/client -h external_server<br />SSL version is TLSv1.2<br />SSL cipher suite is TLS_RSA_WITH_AES_256_CBC_SHA256<br />Server response: I hear you fa shizzle!<br /><br />real	0m0.885s<br />user	0m0.520s<br />sys	0m0.080s<br /><br />5. Conclusion<br /><br />wolfSSL 3.0.0 works out of the box on Raspberry Pi. While building wolfSSL on Raspberry Pi is OK, it does take some time to do so.  Users should consider using cross compilation during the development cycle if building wolfSSL for the Pi on a regular basis needed.<br /><br />6. Extra<br /><br />If you like to stay synchronized with the latest commits of our github repository, don`t like to wait for stable releases, love git repositories, or just want to checkout a specific version, you can do so by following these steps before compiling wolfSSL:<br /><br />	* Check if you have libtool, autoconf and automake installed on your Pi:<br />		$ sudo apt-get install libtool autoconf automake<br />	* Clone wolfSSL repository from GitHub:<br />		$ git clone <a href="https://github.com/cyassl/cyassl.git">https://github.com/cyassl/cyassl.git</a><br />	* Run the autogen script:<br />		$ cd cyassl<br />		$ ./autogen.sh<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-6-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and Oculus Rift',
    'post_content' => 'Hi everyone, we’re curious if anyone is interested in using wolfSSL with the Oculus Rift? If you don’t know what an Oculus Rift is, it is a Next Generation Virtual Reality Technology for video games or any Virtual Reality Applications.  You can learn more at the following URL:<br /><br /><a href="http://www.oculusvr.com/">http://www.oculusvr.com/</a><br /><br />If you have any questions, or would like to see wolfSSL working with the Oculus Rift, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>. <br />',
    'post_status' => 'publish',
    'post_date' => date('2014-6-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and CyaSSL Users SAFE from Recent OpenSSL Security Advisories',
    'post_content' => 'OpenSSL released several security advisories yesterday: <a href="http://www.openssl.org/news/secadv_20140605.txt">http://www.openssl.org/news/secadv_20140605.txt</a>.  None of these are attacks on the SSL/TLS protocols themselves.  They are all implementation bugs.  Most are critical bug fixes to DTLS (TLS over UDP).  As a clean room implementation of SSL, wolfSSL does not use any OpenSSL code and is free from these defects.  The most critical report seems to be the Man in the Middle vulnerability where an attacker can inject a Change Cipher Spec message to force a weak key stream (CVE-2014-0224).  wolfSSL does not create the keying material upon receipt of the Change Cipher Spec message as OpenSSL did/does and is free from this problem.<br /><br />The purpose of this note is not to critique OpenSSL, but rather to inform our user base about how they may be affected.  For additional information or questions about CyaSSL please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-6-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: Moisés Guimarães',
    'post_content' => 'Moises is a talented security specialist that lives in Brazil, the land where soccer runs rampant and the Amazon River … well also runs rampant. While talking over the phone with Moises I learned some about his hobbies, interest in computer security, contact with wolfSSL, and personality.<br /><br />To start, some of Moises hobbies include: card games, modern board games, running, roller blading, orienteering (race for finding checkpoints given a map and compass) and programming. From talking with him I discovered that Moises is really good at orienteering and was in fact a champion in one of the events held. <br /><br />Growing up in Brazil, Moises`s parents wanted him to be a doctor and go into the medical field but he liked math more than biology which led him to study more about computer security. One of the events leading up to Moises career with computers was while in high school he used to make macros for an on-line RPG game that he played. This was something that he enjoyed doing in his spare time and was an example of the early stages of his programming hobby.<br /><br />While in college Moises worked as an intern at Phoebus Tecnologia on SSL connections for POS (point of sale) devices. At the job there was a choice between using OpenSSL and CyaSSL for security on the SSL connection but OpenSSL, because of its size was not good for the POS device, so he choose CyaSSL and had his first encounter with the wolfSSL company. During this internship with Phoebus Tecnologia, Moises caught the attention of wolfSSL by contributing to the CyaSSL project with a static library that is now called the fastmath option. After working with Phoebus Tecnologia for 5 years Moises went on to teach college classes and work at wolfSSL part time.<br /><br />Things that he enjoys about the company are getting to work with people around the world and having his skills be globally challenged. He also has fond memories of the company because of it being associated with the same time frame as his graduation.<br /><br />He told me that he has a reserved personality and opens up to friends. Though he may be reserved I could tell that he is not afraid to speak up. It takes guts to use a foreign language for describing yourself to a complete stranger while they are interviewing you. <br /><br /><b>About the Author:<br /></b><br />My name is Jacob, a recent intern with wolfSSL learing about the company. As a senior studying computer science at Montana State University I`m learning more about the nuts and bolts of the field and seeing just how broad of an area the term computer science covers. <br /><br />wolfSSL: <a href="http://www.yassl.com/yaSSL/Home.html">http://www.yassl.com/yaSSL/Home.html</a> <br />',
    'post_status' => 'publish',
    'post_date' => date('2014-6-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: Takashi Kojo',
    'post_content' => 'Kojo lives in Japan while working with wolfSSL and first heard of the company through a friend he was talking with at a conference. An example of some of the things that Kojo does when working is, integrating projects with IDE`s and working on their platform support. Along with these things he also does some sales/marketing and technical support.<br /><br />His interest in computers started before they became mainstream, before it was common to hear the word microcomputers or personal computer. At that time he worked a lot with the physical components of what make up a computer, soldering on transistors and flip-flops. Like many computer hobbyist during that time frame he had the dream of owning a personal computer. It wasn`t long though before personal computers became more feasible and technology caught up with his dream. At that point he added i8080 microchips to the list of components he`d soldered with.<br /><br />Outside of working with physical components Kojo`s software engineering career started with telecom systems where he was a tech team manger working on real-time systems. During his time there he worked on developing real time operating systems (RTOS) and added skills in embedded systems, networks, and Unix/Linux applications to his skills in C/C++ programming. Being with a large company, he has worked both here in the USA and in Japan at one point or another in his career, and currently works from Japan.<br /><br />As far as food tastes go Kojo enjoys spicy food. This is most apparent in his enjoyment of wasabi when eating sushi. Some other types of spicy food that he would consider enjoyable are Indian and Thai curry which I can attest to being very spicy!<br />When not working with computers Kojo enjoys playing some piano. Some of the songs he enjoys playing are classical tunes such as Bach and Chopin.<br /><br /><b>About the Author:<br /></b><br>My name is Jacob, a recent intern with wolfSSL learing about the company. As a senior studying computer science at Montana State University I`m learning more about the nuts and bolts of the field and seeing just how broad of an area the term computer science covers.<br /><br>wolfSSL:  <a href="http://www.wolfssl.com">www.wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-5-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Support for AES-NI in Visual Studio ',
    'post_content' => 'Hi!  We`ve been supporting AES-NI for a few years now.  We`ve decided to extend that support to Visual Studio users.  If you would like to use AES-NI with Visual Studio, then let us know.  Beta code will be available shortly.  Contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> if you have questions.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: John Safranek',
    'post_content' => 'John Safranek is a Developer here at wolfSSL. John has been part of the company for going on two half years. Like most of the employees working for wolfSSL, John is very nice and open to answering any questions you may have about the company, products, or himself.<br /><br />John is from Iowa and went to college at Iowa State University. He graduated with a Bachelor’s Degree in Computer Engineering. With the degree he got hired at Zetron where he worked for almost 15 years. He wanted a change and with his experience in communication he got hired at wolfSSL.<br /><br />Today John lives in Seattle, Washington and works on computer and network security for wolfSSL. In his free time, he enjoys running, video games and gardening with Meg, his wife. He said Meg has the green thumb and he’s the beast of burden.<br /><br /><b>About Author<br /></b><br />My name is Nathan Rauch. I am a programming Intern at wolfSSL. I’m from Wolf Point Montana and now I’m a senior in the Computer Engineering department at MSU Bozeman, Montana. My background is in coding, robotics, and 3D manufacturing. My hobbies consist of play guitar, video games and robot design.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: Rod Weaver',
    'post_content' => 'This week at wolfSSL each intern was asked to perform a quick Q&A with a full time employee of wolfSSL. The goal was for each intern to get better acquainted with a member of the wolfSSL team. Additionally, by authoring a blog post of each interview the other interns would also get to know the team a little better.<br /><br /><b>First conversation with Rod<br /></b><br />When Rod first answered the phone I was somewhat nervous because:<br />	A.  I had never met or talked to Rod before and...<br />	B.  I was busy at work and missed our appointed time for the interview!<br />My fears were quickly laid to rest however as Rod greeted me in a most pleasant and welcoming manner. He was gracious and willing to answer all my questions.  Rods voice and tone would immediately put the most nervous person at ease, soothing any anxieties one might have about chatting with a senior employee.<br /><br /><b>Rods High School Interests<br /></b><br />With this opening to our conversation I was comfortable to jump right in. Having come into the software field from a unique background, I was curious to find out if Rod had a similar past.  I asked if Rod had always been interested in programming or software technology and he immediately replied “No”.  He then went on to explain that his interests in high school were sports and work.  He specifically mentioned football and track, and went on to say he held a job while in high school. As an interviewer this led me to conclude that he was probably more mature than the average high school student.<br /><br />Having experienced a life of sports and physical labor myself, I have always been intimidated by the younger generations of hackers who have been programming since they were in high school if not earlier. Naturally, I was very excited to hear that someone so obviously successful in the world of software and hardware had the same interests I had when I was in high school! Rod’s story gives me confidence that I will achieve everything I have ever wanted to in the field of software development.<br /><br /><b>After High School<br /></b><br />It took me eight years before I started my higher education beyond high school so the next question I posed was in regards to Rod`s higher education. I was curious to know if he went straight into college and if so, did he immediately pursue an education in Computer Science? Rod good-naturedly laughed and said that, “Yes”, he went straight into college after graduating, but he never did get a degree. Rather he ended up leaving school to help his family through some difficult problems. All through college and helping his family Rod continued to hold a job and earn his way in the world.<br /><br /><b>Summary of Life Pre-wolfSSL<br /></b><br />Eventually Rod told me that he wound up in the Seattle area selling software. This was where he met Larry Stefonic, the CEO and Co-Founder of wolfSSL. Rod gained the greater amount of his experience and knowledge of software tools/technology during these years. The best type of learning, hands on experience!<br /><br /><b>WolfSSL Team<br /></b><br />Rod informed me that as a team wolfSSL is not “overconfident” but they are very “comfortable” with what they do. The tone in his voice led me to believe that while they are not “overconfident”, they are very good at what they do. As individuals they do not act superior because they have good morals and ethics, not because they lack skill.<br /><br />The wolfSSL team strikes me as a group of laid back, responsible, and highly skilled individuals. I am more than ecstatic to get to know and meet the team as the summer goes on. They seem like an awesome group of programmers. I know I will learn a lot from the wolfSSL team the more I get to know each of them.<br /><br /><b>About the Author<br /></b><br />Kaleb grew up in the small town of Condon, Montana (MT). He was always interested in computers but never had the opportunity to learn much about software technology. He moved to Stevensville, MT at the age of 12. His interests in high school included Football, Basketball, Baseball, Track. Kaleb worked at a local Timber Framing Company seasonally, and the local super market during the school year. <br /><br />Kaleb joined the military at the age of 17 with parental consent and attended Basic Training in the summer of 2003, following his junior year in high school. Upon graduating high school in 2004 he returned to finish Advanced Individual Training in Ft. Benning, Georgia. Kaleb married Sherri Wandler from his hometown in 2009. Following 8 years of service, Kaleb was honorably discharged from active duty in 2011. <br /><br />With a skill set not applicable to civilian life, Kaleb decided to pursue higher education. Having always been curious about computers and software technology, a degree in Computer Science was a natural pursuit for him. Kaleb has just completed his junior year in the Computer Science Bachelors Program at MSU Bozeman and is currently working as an intern for wolfSSL.<br /><br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: Chris Conlon',
    'post_content' => 'I sat down with Chris Conlon, an employee here at wolfSSL and got to ask him a few questions:<br /><br /><b>Q:  How did you start working with the company, and how long have you been here?<br /></b>"I`ve been here going on four years now. I got the job directly out of MSU with a BS in Computer Science and minor in Management of IT. I met our CEO, Larry Stefonic, here in Bozeman, was offered an internship, and was really excited about working for a fast-paced and growing company. This also allowed me to stay in Bozeman where I could hike and ski, which I love to do."<br />    <br /><b>Q:  What projects have you worked on?<br /></b>"I`ve worked on a very diverse range of projects. The first one I worked on was related to Android. I was trying to see how difficult it would be to replace OpenSSL with CyaSSL. The final project was a Java SSL Provider for Linux and Android - both of which can be found on our website. I also worked with MIT on porting the Kerberos Authentication Protocol to Android. Since then, there have been many customer-specific projects ranging from "Smart" door locks to different forms of machine-to-machine (M2M) communication. One of the more recent larger projects was our wolfSSL JNI product, which was a lot of fun. Besides engineering projects, I`ve worked on a number of things to help the company grow including developing the website and various marketing and partnership activities."<br />    <br /><b>Q:  What are your daily responsibilities like?<br /></b>"It varies from day to day, but there are a few consistencies: managing our technical support, helping with pre-sales technical discussions, engineering projects, website work, and marketing activities. Customer projects vary in type of application and tools used so, like several of our employees, I end up working with a large variety of development tools and platforms. <br />    <br />I also speak and write on behalf wolfSSL for many of our presentations, magazine articles, and case studies.  Last year I gave presentations at FOSDEM in Brussels, Belgium, Embedded World in Nuremberg, Germany, and at the ARM Technology Conference in San Jose, CA. Those were a lot of fun.<br />    <br />My most recent task, and one which I`m very excited to be part of, is supervising six interns here in Bozeman over the Summer of 2014. I know the whole team is really excited to bring this group of interns into the company for the Summer. It`s exciting to see the company expanding, and the fact that we`ve reached the point where we are able to handle six interns shows us just how much we have grown as a company. And that`s really cool for all of us to see."<br />    <br /><b>Q:  You`ve worked on a lot. What was your favorite project? Your most challenging?<br /></b>"I really enjoyed working on the wolfSSL JNI wrapper, but I feel like all the projects I`ve worked on were unique enough to where I enjoyed them all. Everything keeps me busy with new challenges. As far as the most challenging project, I would have to say that either porting Kerberos to Android or working on ASN-encoding related projects have taken that spot."<br />    <br /><b>Q:  How did you overcome these challenging situations?<br /></b>"I think the best way to solve problems is flexibility and having an open mind to learning new things. One of the reasons I enjoy working in this field is because I think it`s really exciting to be working with new technologies - and with the rapid expansion of the embedded Internet and IoT it really keeps things interesting."<br />    <br /><b>Q:  What do you find most rewarding about working here?<br /></b>"Lots of things are rewarding, but I think getting to see the impact we make on the communications security market and even on the technology itself is the most rewarding. Even being a small company we`ve got to work on lots of projects that help the field evolve and expand. Working with such a talented group of individuals here at wolfSSL and our partner companies is rewarding and inspiring."<br />    <br /><b>Q:  What are your final thoughts?<br /></b>"I think the whole team is really excited to bring on our new interns this Summer.  I`ve enjoyed being part of yaSSL (now wolfSSL) for the past four years, and am looking forward to continuing to work with the wolfSSL team into the future."<br /><br /><b>About the author:<br /></b><br />My name is CJ Smith, and I am one of the interns that wolfSSL has taken on over the summer of 2014. I`m really looking forward to working for such a great company in an extremely exciting field. I`m a Sophomore at Montana State University working toward a BA in Computer Engineering. In my spare time I like to read, play games, hike, and mess around with programming. I haven`t done much in this field outside of school, so this summer should be a great learning experience as well as a huge opportunity to see the real-world applications of everything I have learned.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: Todd Ouska',
    'post_content' => 'Meet Todd Ouska, the Co-Founder of wolfSSL. Starting wolfSSL wasn`t a simple task.  Todd had many obstacles to overcome, some of which included becoming an expert in all of the technology behind SSL/TLS and encryption and providing users with someone they could trust who had done it and done it correctly. Todd`s future hopes for the company are to expand wolfSSL’s products and to secure more devices around the world. Todd is fluent in C, C++, and x86 Assembly but prefers C++ because it has much stronger type checking compared to C, it`s easier to use modern design patterns because you have access to full objects, and it has the abstractions of a high level language but also the direct access to memory benefits that you get with C.<br /><br />Outside of work Todd enjoys cycling and tries to do so a few times a week. His cycling trips tend to stretch as far as 50 miles. Next to cycling Todd enjoys reading non-fiction, listening to music, and modifying his sound system. When asked if he could work in any one single place, Todd said that he`d live in Portland; he`d lived in Seattle for a few years but moved back to Portland simply because he liked it.<br /><br /><b>About the Author: </b><br>My name is Shane Israel. I am an intern at wolfSSL working out of Bozeman, MT. I am currently a senior at Montana State University working towards my B.A. in Computer Science. In my spare time if I am not out hiking, camping, or kayaking I am likely playing video games or making games - lately mobile Android games. I love creativity and originality and find I can incorporate both in designing and making games on my free time. I`m looking forward to working with wolfSSL and learning more about this area of CS.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the Team: Larry Stefonic',
    'post_content' => 'Larry Stefonic is one of the co-founders of wolfSSL, a company that develops SSL/TLS and cryptography libraries for adding security to devices and applications. wolfSSL began when Larry saw a need for proper security in embedded devices and knew that it was possible to develop a more lightweight SSL implementation. His main goal for wolfSSL is producing and maintaining secure, clean, and readable code, which can be a challenge with today’s rapidly advancing security technology. wolfSSL’s products are included in many different and unique markets ranging from embedded devices to enterprise solutions. His goal is to lead wolfSSL into the top spot in SSL deployments worldwide. Currently, wolfSSL has secured over 1 billion connections and this number is growing rapidly.<br /><br />Being one of the leaders at one of the world’s top notch Internet security corporations, Larry strives to build a company that not only provides top of the line security software, but also connects cultures around the world. His vision for building wolfSSL includes a meta-national philosophy that melds and augments different ideas and viewpoints from various unique cultures. This worldly advantage contributes to wolfSSL’s tremendous success.<br /><br />Larry enjoys every aspect of his work at wolfSSL, but he is most fond of developing the team environment. This team includes employees throughout the United States as well as around the globe. The company hosts weekly engineering and team meetings where they discuss current and future projects and ideas and maintain a close working relationship, even if separated by oceans, languages, and cultures.<br /><br />On a more personal level, Larry is a graduate of Purdue University, and still enjoys following Boilermaker sports. He still enjoys a healthy and active lifestyle and has competed in a number of marathons.  <br /><br />To learn more about Larry Stefonic and wolfSSL, feel free to explore the company web site at <a href="http://www.wolfssl.com">wolfssl.com</a>.<br /><br /><b>About the Author<br /></b>Leah Thompson is a development intern at wolfSSL in Bozeman, Montana. She is currently studying at Montana State University, working towards her master’s degree in Computer Science. She enjoys living in the great state of Montana, taking advantage of everything it has to offer including mountain biking, golfing and skiing. Leah is excited to be a part of such a great company and is learning more than she ever thought possible from the experienced team at wolfSSL.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Releases IoT Demo of CyaSSL Working with Xively and mbed',
    'post_content' => 'For those of you interested in how CyaSSL fits into IoT, here is an example you should take a look at!  <br /><br />We have prepared a demo with CyaSSL, Xively, and mbed. It runs on various mbed platforms with Ethernet connections, including NXP LPC1768 whose RAM size is as small as 32k for applications + 32k for drivers.<br /><br />In the demo configuration, mbed sends sensor data every 10 seconds through SSL to the Xively server, and you can see it through the browser on your pc.<br /><br /> "mbed with Sensors" --[https]--> "Xively Server" <--[https]-- "Browser on PC"<br /><br />Xively is a cloud IoT service. It provides both HTTP and HTTPS APIs for IoT clients, in which they highly recommend HTTPS for obvious reasons, especially for commercial applications.<br /><br />The demo includes the CyaSSL-based https client class. It is forked from the standard mbed http client class. So you can find out how it can be embedded into a socket-based program as well.<br /><br />To use the project, please go to our mbed site and import the demo.<br /><br /><a href="http://mbed.org/users/wolfSSL/">http://mbed.org/users/wolfSSL/</a><br /><a href="http://mbed.org/users/wolfSSL/code/CyaSSL-Xively/">http://mbed.org/users/wolfSSL/code/CyaSSL-Xively/</a><br /><br />For more information:<br /><br />Xively: <a href="http://xively.com/">http://xively.com</a><br />mbed: <a href="http://mbed.org/">http://mbed.org</a><br /><br />mbed HTTPClient class:<br />    <a href="http://mbed.org/users/donatien/code/HTTPClient/">http://mbed.org/users/donatien/code/HTTPClient/</a><br />    <a href="http://mbed.org/handbook/TCP-IP-protocols-and-APIs">http://mbed.org/handbook/TCP-IP-protocols-and-APIs</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Enforces Stack Usage Reduction',
    'post_content' => 'Understanding the stack and the heap are fundamental steps for all software developers. The importance of such understanding is inversely proportional to the amount of memory available on the platform, as both compete for a piece of the total memory space available on a system.<br /><br />In some cases the developer has the choice of when to use one (either the stack or heap) more than the other. In other cases, a scenario may force the developer to work with minimal use of the stack, the heap, or both.<br /><br />With this in mind, wolfSSL is introducing a new build option in CyaSSL. Developers can now choose a CyaSSL build that best matches their needs of using more stack and less heap OR more heap and less stack. This process is being accomplished by the refactoring of the CyaSSL code. Currently 90% of the encryption layer has been refactored to use the new option.<br /><br />Small stack usage is not enabled by default. To enable it users must use the option “--enable-small-stack” when configuring the CyaSSL build as in the following example:<br /><br />./configure --enable-small-stack [other options]<br /><br />For users who don`t use CyaSSL`s configure script for compilation, smaller stack usage is not enabled by default. In this case, users will need to add the compiler directive <b>CYASSL_SMALL_STACK</b> in <i>config.h</i> file or <i>settings.h</i> to enjoy its benefits as in the following example:<br /><br />#define CYASSL_SMALL_STACK<br /><br />or<br /><br />#define CYASSL_SMALL_STACK 1<br /><br />If you have any questions about stack usage with CyaSSL please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-5-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL with TLS 1.3',
    'post_content' => 'Hi!  Some of you know that the IETF working group on TLS is creating the specification for TLS 1.3.  We plan to upgrade wolfSSL to the TLS 1.3 specification as soon as the spec is finalized, or even close to finalized.  We are always aggressive with implementing the new TLS specifications, because we like to supply the community with a good test bed.  We did a great job getting TLS 1.2 out right away, as well as DTLS 1.2, and the community appreciated the effort.  We plan to continue our tradition of being quick with new protocol level changes.  <br /><br />If you`re interested in what TLS 1.3 thinking is so far, then look here:  <a href="https://www.ietf.org/proceedings/87/slides/slides-87-tls-5.pdf">https://www.ietf.org/proceedings/87/slides/slides-87-tls-5.pdf</a>.  If you have TLS 1.3 questions or comments, you are welcome to email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or call us at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-5-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 3.0.0 Released',
    'post_content' => 'The new release of wolfSSL, v3.0.0, is now ready to download from our website.  New features include:<br /><br />	-	FIPS release candidate<br />	-	X.509 improvements that address items reported by Suman Jana with security researchers at UT Austin and UC Davis<br />	-	Small stack size improvements, --enable-smallstack. Offloads large local variables to the heap. (Note this is not complete.)<br />	-	Updated AES-CCM-8 cipher suites to use approved suite numbers.<br /><br />Please see the README and our <a href="http://wolfssl.com/yaSSL/Docs.html">on-line documentation</a> for more information or feel free to <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-5-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ChaCha20 and Poly1305 for wolfSSL TLS',
    'post_content' => 'Hi!  We`ve scheduled ourselves to implement ChaCha20 and Poly1305 into wolfSSL this summer.  If you`re learning about what these are, see these links:<br /><br /><a href="http://cr.yp.to/mac.html">http://cr.yp.to/mac.html</a><br /><br /><a href="https://www.imperialviolet.org/2013/10/07/chacha20.html">https://www.imperialviolet.org/2013/10/07/chacha20.html</a><br /><br />We`re excited about this addition to our code.  If you have comments, questions, or need it in our code sooner than this summer, then let us know!  We can be reached at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> or by phone at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-4-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL’s Todd Ouska Comments on Heartbleed Bug',
    'post_content' => 'As a follow up to the recent Heartbleed bug in OpenSSL, Embedded Computing Design interviewed wolfSSL’s CTO, Todd Ouska for an article titled “Heartbleed: (Not) one in a million”.  You can read the article at the following URL:<br /><br /><a href="http://embedded-computing.com/20937-heartbleed-not-one-in-a-million/#">http://embedded-computing.com/20937-heartbleed-not-one-in-a-million</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-4-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL JNI 1.1.0 Released',
    'post_content' => 'Version 1.1.0 of wolfSSL JNI is now available for download.  wolfSSL JNI provides Java applications with a convenient Java API to the widely-used CyaSSL lightweight SSL/TLS library, including support for TLS 1.2 and DTLS 1.2.<br /><br />This release contains bug fixes and features including:<br /><br />	-	Updated support for CyaSSL, tested against CyaSSL 2.9.4<br />	-	Updated example certificates and CRLs for use with the included example client and server applications<br />	-	Test framework modification which now expects the user to have JUnit JARs installed on the development platform<br />	-	Updated unit tests and conversion from JUnit3 to JUnit4<br />	-	Android NDK support<br />	-	CRL monitor is now optional in server mode<br /><br />Additional information regarding using wolfSSL JNI with Android NDK-based applications will follow in a separate post.  wolfSSL JNI 1.1.0 can be downloaded from the <a href="http://yassl.com/yaSSL/download/downloadForm.php">wolfSSL download page</a> and the wolfSSL JNI Manual can be found <a href="perma://BLPageReference/08E0BE4C-B9E0-4351-88B7-ADC59155FC56">here</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-4-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OpenBSD team is refactoring OpenSSL',
    'post_content' => 'The OpenBSD team is refactoring OpenSSL, which is admirable work.  You can see their progress at <a href="http://opensslrampage.org/">http://opensslrampage.org</a>.<br /><br />If you read the OpenSSL Rampage blog, you can see that they have their work cut out for them.  The OpenSSL code base is very old, and has had literally hundreds of unknown hands making changes over its 20+ year lifespan.  <br /><br />The OpenSSL Heartbleed bug has been motivating for a lot of developers, which is probably Heartbleed`s only positive side effect.  As the creators of wolfSSL, a modern clean room implementation of SSL/TLS, we`ve been hearing from a lot of OpenSSL consumers that want to make a change.  They`ve had enough of working with a code base held together with rubber bands and twine.  Here`s why we think OpenSSL users should consider a switch to wolfSSL instead of patching, re-factoring, and hoping:<br /><br />1.  wolfSSL is clean room developed, which means that we don`t use any OpenSSL code in our implementation of SSL/TLS.  We can point to every developer that has touched a line of our code base.  <br /><br />2.  Switching from OpenSSL to wolfSSL can be relatively easy.  We usually estimate 1-4 weeks for a project where we rip and replace OpenSSL for wolfSSL.  <br /><br />3.  If you`re making the switch, we`ll support you, whether you`re an open source project or a commercial user.  <br /><br />4.  Our code is newer, more modern, and clean.  You should be able to understand the security code plugged into your application, and we think ours is a quick read for competent C/C++ programmers.<br /><br />5.  We support an OpenSSL compatibility layer which supports the 400 or so most used functions in OpenSSL.  We`ll help you if you need extensions to the layer.<br /><br />If you have questions, thoughts, or comments to share with us, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-4-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Common Terms and Types in wolfSSL Lightweight SSL',
    'post_content' => 'If you are using or thinking about using the wolfSSL lightweight SSL/TLS library in your application or project, it’s oftentimes helpful to get a general overview of some of the terms and types which are used in a simple wolfSSL connection.  Below we have included a general summary of these types.<br /><br />1)  socket: wolfSSL uses the type <b>SOCKET_T</b> to allow different TCP stacks to be used.<br /><br />2)  SSL Context:  wolfSSL uses the type <b>CYASSL_CTX*</b>.  This is either a client context or a server context.  Multiple SSL connections can be created from a single CYASSL_CTX*.  The context holds CA certificates, keys, and options for the connections that will be created from it.<br /><br />3)  SSL Connection:  wolfSSL uses the type <b>CYASSL</b>* to represent a single SSL connection.  This object is created from a parent CYASSL_CTX*.  It may contain a SOCKET_T if the underlying I/O is socket based, but that is not a requirement.  With wolfSSL’s I/O callbacks a memory buffer, file, or event handler may be used instead.<br /><br />	1)	 SSL Session:  wolfSSL uses the type <b>CYASSL_SESSION</b>*.  Each time a full SSL handshake is done on a CYASSL* Connection object a new CYASSL_SESSION* is created.  A single CYASSL_SESSION* can later be used to do session resumption on multiple different CYASSL* connections.<br /><br /><br /><br />For example, let`s say a browser has 3 tabs open to a simple secure site.  The browser would need:<br /><br />1 <b>CYASSL_CTX</b>* client context with CA certificates loaded.<br /><br />3 <b>SOCKET_T</b> sockets, 1 for each tab.<br /><br />3 <b>CYASSL</b>* connections, one for each tab.  Each connection owns one of the 3 unique SOCKET_T but was created from the same CYASSL_CTX*.<br /><br />1 <b>CYASSL_SESSION</b>* was created from the first tab.  The 2nd and 3rd tab would use the initial CYASSL_SESSION* to do session resumption with their respective CYASSL* connections.<br /><br /><br /><br />Code wise, to retrieve a session the application would just call <b><i>wolfSSL_get_session</i></b><i>()</i> before ending the connection with <b><i>wolfSSL_shutdown()</i></b>.<br /><br />CYASSL_SESSION* mySession = wolfSSL_get_session(ssl_conn1);<br /><br />To later use that session on a new CYASSL connection (ssl_conn2), do:<br /><br />wolfSSL_set_session(ssl_conn2, mySession);<br /><br />before calling <b><i>wolfSSL_connect()</i></b>.  Connection 2 will attempt session resumption.<br /><br /><br /><br />For more detailed information, the wolfSSL API reference discusses each function in more detail: <a href="http://www.yassl.com/yaSSL/Docs-cyassl-manual-17-cyassl-api-reference.html">http://www.yassl.com/yaSSL/Docs-cyassl-manual-17-cyassl-api-reference.html</a><br /><br />The wolfSSL example client (examples/client/client.c in the general <a href="http://yassl.com/yaSSL/download/downloadForm.php">wolfSSL download</a>) does session resumption if the user passes <b>-r</b> to the command line.  If you search for <b>get_session</b> and <b>set_session</b> you should see right where it`s used.',
    'post_status' => 'publish',
    'post_date' => date('2014-4-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Nice Overview Article on Securing the Internet of Things',
    'post_content' => 'Dark Reading has a nice overview article covering IoT security issues.  See:  <br /><a href="http://www.darkreading.com/vulnerabilities---threats/thingularity-triggers-security-warnings/d/d-id/1141587">http://www.darkreading.com/vulnerabilities---threats/thingularity-triggers-security-warnings/d/d-id/1141587</a>',
    'post_status' => 'publish',
    'post_date' => date('2014-4-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Security Advisory: April 9, 2014',
    'post_content' => '<b>Issue #1 (Memory  Corruption)<br /></b><br /><b>CVE-ID:</b>  CVE-2014-2896<br /><b>Product:</b>  CyaSSL<br /><b>Vendor:</b>  wolfSSL Inc.<br /><b>Affected Versions:</b>  CyaSSL 2.9.0 and previous versions<br /><b>Vulnerability Type:</b>  Improper Input Validation (CWE-20)<br /><br /><b>Description:</b>  The TLS and DTLS implementations in wolfSSL CyaSSL before 2.9.4 lack a buffer length check in DoAlert(), possibly allowing an attacker to set the read index by up to 2 bytes past the length of the input buffer.  This could result in memory corruption or a possible out-of-bounds read.<br /><br />Thanks to Ivan Fratric of the Google Security Team for discovering this  bug.<br /><br /><b>Issue #2 (Out of bounds read)<br /></b><br /><b>CVE-ID:</b>  CVE-2014-2897<br /><b>Product:</b>  CyaSSL<br /><b>Vendor:</b>  wolfSSL Inc.<br /><b>Affected Versions:</b>  CyaSSL 2.5.0 - CyaSSL 2.9.0<br /><b>Vulnerability Type:</b>  Cryptographic Issues  (CWE-310)<br /><br /><b>Description:</b>  The SSL version 3 HMAC calculation does not check the padding length for a verify failure because many implementations get this wrong.  But the length should still be checked to prevent an out-of-bounds read.<br /><br />Thanks to Ivan Fratric of the Google Security Team for discovering and reporting this bug.<br /><br /><b>Issue #3 (Dangerous Default Behavior, out of bounds read)<br /></b><br /><b>CVE-ID:</b> CVE-2014-2898<br /><b>Product:</b>  CyaSSL<br /><b>Vendor:</b>  wolfSSL Inc.<br /><b>Affected Versions:</b>  CyaSSL 2.9.0 and previous versions<br /><b>Vulnerability Type:</b>  Unchecked Error Condition (CWE-391)<br /><br /><b>Description:</b>  A user who repeatedly calls CyaSSL_read() without checking the return code can cause an out-of-bound memory access in an error case such as MAC verification failure.<br /><br />Thanks to Ivan Fratric of the Google Security Team for discovering and reporting this bug.<br /><br /><b>Issue #4 (NULL pointer dereference)<br /></b><br /><b>CVE-ID:</b>  CVE-2014-2899<br /><b>Product:</b>  CyaSSL<br /><b>Vendor:</b>  wolfSSL Inc.<br /><b>Affected Versions:</b>  CyaSSL 2.9.0 and previous versions<br /><b>Vulnerability Type:</b>  Improper Input Validation (CWE-20)<br /><br /><b>Description:</b>  A user requesting the peer certificate in a certificate parsing failure case can cause a NULL-pointer dereference.  Likewise, if an SSL client receives a client_key_exchange message a NULL-pointer dereference happens if the client does not have the peer’s ephemeral key.<br /><br />Thanks to Ivan Fratric of the Google Security Team for discovering and reporting this bug.<br /><br /><b>Issue #5 (Unknown Critical Certificate Extension Allowed)<br /></b><br /><b>CVE-ID:</b>  CVE-2014-2900<br /><b>Product: </b> CyaSSL<br /><b>Vendor:</b>  wolfSSL Inc.<br /><b>Affected Versions:</b>  CyaSSL 2.9.0 and previous versions<br /><b>Vulnerability Type:</b>  Improper Input Validation (CWE-20)<br /><br /><b>Description:</b>  Certificate validation must fail if unknown critical extensions are present in the certificate.  CyaSSL previously accepted certificates with unknown critical extensions by default.<br /><br />Thanks to Suman Jana and the security researchers at UT Austin and UC Davis for discovering and reporting this bug.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-4-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.9.4 Released',
    'post_content' => 'Release 2.9.4 includes important Security Fixes for issues found by Ivan Fratric of the Google Security Team and Suman Jana with security researchers at UT Austin and UC Davis.  CVE details to be posted today for issues with memory corruption, null pointer deference, out of bound read, and unknown certificate extensions.  All users should upgrade immediately.<br /><br />This release also includes sniffer fixes for corrupted Jumbo Frames, ARM thumb mode assembly fixes, XCode 5.1 support, PIC32 MZ hardware support, a sample I/O pool, and FIPS mode for algorithms including AES, 3DES, SHA-1, SHA-2, HMAC, and RSA.',
    'post_status' => 'publish',
    'post_date' => date('2014-4-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and CyaSSL Users SAFE from Heartbleed Bug',
    'post_content' => 'A recently-discovered bug in OpenSSL’s implementation of the TLS Heartbeat Extension makes it possible for malicious attackers to potentially recover the private keys and sensitive data that should normally be secured by SSL/TLS. The vulnerability has been recorded as <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160">CVE-2014-0160</a>.<br /><br />The purpose of this note is not to gloat over a competing projects problems, as some others have done, but rather to inform our user base.  The OpenSSL team and their supporters have done a good job on getting the bug fixed as well as informing their users.  We want to be the first to note that secure coding is not for the faint of heart, because it is a specialized expertise.  Building cryptography and the protocols on top of it is a difficult expertise to practice. <br /><br />We want to assure our users and customers that CyaSSL and wolfSSL products are <b>NOT</b> affected by the Heartbleed bug in any way.  We are a clean room implementation of SSL/TLS, and did not employ any of OpenSSL`s code base, which many others have done.  We should also note that the bug is not a protocol level bug that effects all SSL/TLS implementations. This was a bug specific to OpenSSL’s implementation of the <a href="https://tools.ietf.org/html/rfc6520">TLS Heartbeat Extension</a>.  This bug existed in OpenSSL for over two years, with vulnerable versions including OpenSSL 1.0.1 - 1.0.1f (inclusive).<br /><br />Interested parties can learn more about this bug in OpenSSL at the following links:<br /><br /><a href="http://heartbleed.com">http://heartbleed.com</a>/<br /><a href="https://www.openssl.org/news/secadv_20140407.txt">https://www.openssl.org/news/secadv_20140407.txt</a><br /><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160</a><br /><br />For additional information or questions about CyaSSL, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-4-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Visit with wolfSSL This Week at EE Live and Interop 2014',
    'post_content' => 'As you may have read from our previous blog entries, the wolfSSL team will be exhibiting at two separate conferences this week.  We’ll be at both <a href="perma://BLPageReference/B1B820D7-3070-4BFF-9001-BF34E395ADA7">EE Live! </a>(DESIGN West) in San Jose, CA as well as <a href="perma://BLPageReference/E3798731-B918-47AA-AAF7-834621CCA0BA">Interop 2014</a> in Las Vegas, NV.<br /><br />We’re looking forward the chance to visit with users, customers, and attendees about the CyaSSL embedded SSL library and wolfCrypt Crypto Engine.  For those attending one of the shows, you can find our booth information and expo hours for each conference below:<br /><br /><b>EE Live! 2014 (Booth #1637)<br /></b>McEnery Convention Center<br />San Jose, CA<br /><br />Expo Hours:<br />TUES:  10:30am - 5:00pm<br />WED:  10:30am - 5:00pm<br />THURS:  10:30am - 1:30pm<br /><br /><b>Interop 2014 (Booth #854)<br /></b>Mandalay Bay Convention Center<br />Las Vegas, NV<br /><br />Expo Hours:<br />TUES:  2:00pm - 7:00pm<br />WED:  10:30am - 5:00pm<br />THURS:  10:30am - 3:00pm',
    'post_status' => 'publish',
    'post_date' => date('2014-3-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at EE Live 2014',
    'post_content' => 'wolfSSL will be exhibiting in <b>booth 1637</b> at <a href="http://www.eeliveshow.com/sanjose/">EE Live! 2014</a> (DESIGN West) this year in San Jose, CA.  The conference will be held March 31 - April 3, 2014 at the McEnery Convention Center.  The wolfSSL team will be visiting with attendees, users, and customers about the advantages of using the CyaSSL embedded SSL library, wolfCrypt crypto engine in embedded applications and devices, IoT, smart energy, and much more.<br /><br />If you are planning on attending EE Live! this year, we invite you to stop by our booth to visit.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-3-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Interop 2014',
    'post_content' => 'wolfSSL will be exhibiting in <b>booth 854</b> at <a href="http://www.interop.com/lasvegas/">Interop 2014</a> this year in Las Vegas, NV.  The conference will be held March 31 - April 4, 2014 at the Mandalay Bay Convention Center.  As usual, the wolfSSL team will be visiting with attendees about the CyaSSL embedded SSL library, wolfCrypt crypto engine, SSL inspection, and securing a wide range of connected devices and applications.<br /><br />If you will be attending the conference this year, please stop by our booth to visit and say hello.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-3-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Embedded World 2014',
    'post_content' => 'Part of the wolfSSL team is exhibiting at the Embedded World 2014 conference this week in Nuremberg, Germany.  Shown in this photo is Business Director Rod Weaver.  wolfSSL is talking with attendees about how the CyaSSL embedded SSL library, wolfCrypt crypto engine, and yaSSL Embedded Web Server can be used to help secure applications and devices in both embedded and enterprise projects.<br /><br />So far, we’re really enjoying our first time exhibiting at Embedded World.  IT and innovation is thriving with IoT, M2M, silicon partners, CAN buses, and dynamic industrial automation innovators, among many.  wolfSSL and security in general has been embraced by the industry, intelligent engineers, and region - allowing us to have a good time and realize many new opportunities to help secure and solve problems.  We are looking forward to helping compliment the goals of users and companies to reach the pinnacle of Internet security.<br /><br />If you are attending the conference, stop by to say hello.  We’re located in hall 4, booth 4-470.  We’ll also be giving a <a href="http://www.embedded-world.eu/program.html">presentation</a> tomorrow (Thursday) about tools and techniques used to commonly secure embedded applications.',
    'post_status' => 'publish',
    'post_date' => date('2014-2-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at RSA USA 2014',
    'post_content' => 'Part of the wolfSSL team is exhibiting at the RSA USA 2014 conference this week in San Francisco.  Shown in this photo, Todd Ouska and John Safranek help users, customers and interested individuals with questions related to the CyaSSL embedded SSL library, wolfCrypt crypto engine, yaSSL embedded web server and SSL inspection.<br /><br />If you are attending the conference, stop by to say hello.  We’re located in booth 839.',
    'post_status' => 'publish',
    'post_date' => date('2014-2-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Year In Review 2013',
    'post_content' => 'If you missed our recent presentation at FOSDEM, we just put our slide deck up online at the following URL:<br /><br /><a href="https://speakerdeck.com/wolfssl/wolfssl-year-in-review">https://speakerdeck.com/wolfssl/wolfssl-year-in-review</a><br /><br />wolfSSL made significant progress in 2013 towards bringing the community a more usable, feature-rich, and better supported library for use in an ever-growing range of platforms and environments. These slides (and talk) provides an overview of technical progress in the last year (2013) and news on the current state of wolfSSL. Details on what`s new include the addition of new crypto ciphers and algorithms, better hardware cryptography support, more flexible abstraction layers, a JNI wrapper, new platform support, and better development tool integration.<br /><br />As always, if you have any questions or comments, we welcome them at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-2-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release v2.9.0 Now Available',
    'post_content' => 'The new release of wolfSSL, v2.9.0, is now ready to <a href="http://yassl.com/yaSSL/download/downloadForm.php">download</a> from our website. New features include:<br /><br /><b>Platforms:<br /></b> - Freescale Kinetis<br />       * RNGB support (<a href="http://cache.freescale.com/files/32bit/doc/ref_manual/K53P144M100SF2RM.pdf">K53 Sub-Family Reference Manual, Chapter 33</a>)<br />       * mmCAU support (<a href="http://cache.freescale.com/files/32bit/doc/user_guide/CAUAPIUG.pdf">ColdFire/ColdFire+ CAU and Kinetis mmCAU Software Library User Guide</a>)<br /><br /> - Microchip<br />       * MPLAB Harmony support<br />   <br /><b>TLS Extensions:<br /></b> - <a href="http://yassl.com/yaSSL/Blog/Entries/2014/2/5_Using_Supported_Elliptic_Curves_Extension_with_wolfSSL.html">Supported Curves</a><br /> - Secure Renegotiation<br /> - <a href="http://yassl.com/yaSSL/Blog/Entries/2013/12/3_Using_Truncated_HMAC_with_wolfSSL.html">Truncated HMAC</a><br /><br /><b>Public-Key Cryptography Standards:<br /></b> - PKCS #7 <a href="https://tools.ietf.org/html/rfc5652">Enveloped data and signed data</a><br /> - PKCS #10 <a href="https://tools.ietf.org/html/rfc2986">Certificate Signing Request generation</a><br /><br /><b><a href="http://www.ietf.org/rfc/rfc2560.txt">OCSP</a></b><b>: (The new CRL):<br /></b> - API change to integrate into Certificate Manager<br /> - IPv4/IPv6 agnostic<br /> - example client/server support<br /> - OCSP nonces are optional<br /><br /><b>DTLS:<br /></b> - <a href="http://tools.ietf.org/search/rfc4347">Sliding window</a> (Anti-replay)<br /> <br /><b>ECC:<br /></b> - Encrypt/Decrypt primitives<br /> - Certificate generation<br /><br /><b>Others:<br /></b> - <a href="http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf">GMAC hashing</a><br /> - Additional X.509 inspection functions<br /><br />Please see the README and our on-line documentation for more information or feel free to <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-2-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at RSA Conference USA 2014',
    'post_content' => 'wolfSSL will be exhibiting at the <a href="http://www.rsaconference.com/events/us14">RSA Conference USA 2014</a> this year.  The conference will be held February 24-28, 2014 at Moscone Center in San Francisco, CA.  In addition to catching users up on progress we’ve made in the last year, we will be talking about the CyaSSL embedded SSL library, wolfCrypt crypto engine, SSL inspection, and securing devices and applications.  wolfSSL will be in booth 839.<br /><br />We also have a free expo code available for those who wish to attend the Expo free of charge:<br /><br />Expo Pass Code:  <b>EC4WOLFS</b><br /><br />Enter the above code at <a href="https://ae.rsaconference.com/US14/portal/login.ww">https://ae.rsaconference.com/US14/portal/login.ww</a> and register before Friday, February 21, 2014 .<br /><br />If you are attending the 2014 USA RSA Conference this year, we welcome you to stop by our booth to visit and say hello.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-2-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Supported Elliptic Curves Extension with wolfSSL',
    'post_content' => 'We are back to talk about TLS extensions again. Today we present the addition of Supported Elliptic Curves on wolfSSL!<br /><br />RFC 4492 introduces five new ECC-based key exchange algorithms for TLS: ECDH_ECDSA, ECDHE_ECDSA, ECDH_RSA, ECDHE_RSA and ECDH_anon. However, it may be desirable in constrained environments to only support a limited number of curves. When a client uses this extension, servers that understands it MUST NOT negotiate the use of an ECC cipher suite unless they can complete the handshake while respecting the choice of curves specified by the client. This eliminates the possibility that a negotiated ECC handshake will be subsequently aborted due to a client’s inability to deal with the server’s ECC key.<br /><br />To enable the usage of Supported Elliptic Curves in wolfSSL you can simply do:<br /><br /><b>./configure --enable-supportedcurves<br /></b><br />Using Supported Elliptic Curves on the client side requires additional function calls, which should be one of the following functions:<br /><br />wolfSSL_CTX_UseSupportedCurve();<br />wolfSSL_UseSupportedCurve();<br /><br />wolfSSL_CTX_UseSupportedCurve() is most recommended when the client would like to enable Supported Curves for all sessions. Setting the Supported Elliptic Curves extension at context level will enable it in all SSL objects created from that same context from the moment of the call forward. <br /><br />wolfSSL_UseSupportedCurve() will enable it for one SSL object only, so it`s recommended to use this function when there is no need for Supported Elliptic Curves on all sessions.<br /><br />These functions can be called more than once to indicate the support of multiple curves.<br /><br />On the server side no call is required. The server will automatically attend to the client`s request selecting ECC cipher suites only if the supported curves are allowed.<br /><br />All TLS extensions can also be enabled with:<br /><br /><b>./configure --enable-tlsx<br /></b><br />If you have any questions about using TLS Extensions with wolfSSL please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-2-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Attending and Presenting at FOSDEM 2014 in Brussels',
    'post_content' => 'Just a reminder that wolfSSL will be attending <a href="https://fosdem.org/2014/">FOSDEM 2014</a> both today (Saturday, 2.4.14), and tomorrow (Sunday).  We will be attending sessions throughout the day as well as giving a presentation in the <a href="https://fosdem.org/2014/schedule/event/wolfssl_2013_technical_and_community_update/">embedded devroom</a> to bring people up to date on our CyaSSL open source SSL product and new progress over the past year.  <br /><br />In addition to work on a new project, details on what`s new include the addition of new crypto ciphers and algorithms, better hardware cryptography support, more flexible abstraction layers, a JNI wrapper, new platform support, and better development tool integration.  <br /><br />If you are planning on attending the event and would like to set aside time to meet, shoot us an email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-2-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OCSP in wolfSSL Embedded SSL',
    'post_content' => 'Hi!  Do you need OCSP (Online Certificate Status Protocol) in wolfSSL?  We added OCSP as a wolfSSL feature back in 2011.  At this point it is well tested by our users and well into the deployment phase.  More information on the protocol is available here:  <a href="http://www.ietf.org/rfc/rfc2560.txt">http://www.ietf.org/rfc/rfc2560.txt</a>.  The gist of the feature is that a client can go out and check to see the status of a certificate.  OCSP is the modern CRL.<br /><br />If you have questions about our OCSP support, just email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-1-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Interesting SmartGrid use case for wolfSSL: ISO 15118',
    'post_content' => 'Hi!  If you`re interested in smart grid security, and specifically the security required when connecting an electric car to the smart grid, this post is for you!<br /><br />wolfSSL has recently been supporting the development efforts of <a href="http://www.enterop.net/cms/index.php?page=home-en">eNterop</a>, which is a group led by Germany`s Federal Ministry of Economics and Technology (BMWi), and includes <a href="http://www.conti-online.com/generator/www/start/com/en/index_en.html">Germany`s Continental AG</a>, a leading auto parts manufacturer, as well as <a href="http://www.daimler.com/">Daimler</a>, <a href="http://www.vw.com/en.html">Volkswagen</a>, <a href="http://www.bmwgroup.com/">BMW</a> and <a href="http://www.siemens.com/entry/cc/en/">Siemens</a>.  The eNterop group is putting together an open source implementation of the vehicle-to-grid (V2G) standard <a href="http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=55366">ISO 15118</a>.  A component of their open source release will be CyaSSL.  <br /><br />The standards designers for ISO 15118 knew they had some security critical data flowing between the vehicle and the smartgrid, including billing data, Customer ID, location data, firmware and software updates.  As such, security is a critical part of the standard, and TLS 1.2 is the chosen method, which is where CyaSSL comes in.<br /><br />As the most widely used embedded implementation of the TLS 1.2 standard, CyaSSL is the ideal choice for electric vehicle to grid security.  <br /><br />If you`re curious to hear more about CyaSSL in ISO 15118, feel free to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call us at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2014-1-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2013 Annual Report',
    'post_content' => '2013 was an interesting year in the world of cryptography and computer security.  We have seen and mitigated against attacks such as <i>Lucky13</i> and watched with interest as existing technologies such as <i>Dual_EC_DRBG</i> have become widely regarded as insecure.  wolfSSL has been happy to provide our users with timely fixes, suggestions, and new technologies to react to the changing application and communication security landscape.<br /><br />wolfSSL has made significant progress in 2013 as a business and through technical advancements.  As one of the key goals of wolfSSL is to be open source and transparent, highlights of our business, technical, and partner progress throughout the past year are outlined below.<br /><br /><b>Business and Company Progress<br /></b><br />	1.	Successfully participated in the following events: CES 2013, RSA USA 2013, DESIGN West 2013, Interop 2013, Black Hat 2013, Microchip Masters, and ARM TechCon 2013 - giving a technical presentation on securing embedded devices at the later.<br />	2.	Completed a company name change from yaSSL to wolfSSL, better reflecting our company and culture.  To us the wolf represents us well as it is a creature that communicates effectively, works well in groups, and shares with the pack.<br />	3.	Added more developers to the team, allowing us to help secure more projects, add new features, and work with partners and open source community members with higher efficiency.<br />	4.	Increased activity in onsite consulting to help customers design and validate their security architectures.<br />	5.	Experienced a dramatic increase in design wins for wolfCrypt.<br />	6.	Doubled our customer base.<br />	7.	Continued to support the open source community.<br />	8.	Added several new resale, technology, and co-marketing partnerships.<br />	9.	Launched our Kickstart consulting service package, making it easier for customers to seamlessly get CyaSSL up and running in their environment.<br />	10.	Began the FIPS validation process with CTaoCrypt / wolfCrypt<br /><br /><b>CyaSSL Technical Progress<br /></b><br />A total of four CyaSSL releases were delivered in 2013, each with bug fixes, enhancements, and new feature additions.  Highlights of these releases included:<br /><br />	1.	  A timely fix for the Lucky13 attack<br />	2.	  SHA-3 finalist BLAKE2b support (a fast and low resource use hash algorithm)<br />	3.	  AES-CCM-8 crypto and cipher suites<br />	4.	  Ability for AES-GCM and AES-CCM to leverage Intel AES-NI<br />	5.	  Camellia crypto and cipher suites<br />	6.	  DTLS 1.2 support, including AEAD ciphers<br />	7.	  DTLS reliability enhancements, IPv6 fixes<br />	8.	  SHA-384 cipher suites<br />	9.	  Persistent session and CA cache functionality<br />	10.	  User atomic record layer processing callbacks<br />	11.	  Public key callbacks for ECC and RSA<br />	12.	  HMAC now supports SHA-512<br />	13.	  New supported TLS Extensions including SNI, SEP, Maximum Fragment Length, Truncated HMAC<br />	14.	  Ability to unload certs/keys for lower memory use<br />	15.	  The separation of wolfCrypt from CyaSSL, giving users the ability to use wolfCrypt as a standalone cryptography engine<br />	16.	  Enhanced examples, including the ability to track memory usage and better IPv6 support<br />	17.	  Updated CTaoCrypt benchmark app for easier use on embedded systems<br />	18.	  Updated XCode project files<br />	19.	  More flexible ./configure options for enabling and disabling features<br />	20.	  Bug fixes and enhancements in SSL sniffer functionality<br />	21.	  Enhanced OCSP support with bug fixes and the addition of callbacks<br />	22.	  Addition of the LeanPSK build option for a small 20kB build<br />	23.	  Updated and expanded API documentation<br />	24.	  Release of wolfSSL JNI 1.0, giving Java users a pre-built JNI wrapper around the CyaSSL lightweight SSL library<br /><br /><b>CyaSSL Porting Progress<br /></b><br />	1.	Release of the CyaSSL Porting Guide<br />	2.	Support for Microchip PIC32MX and PIC32MZ and the new MPLAB Harmony development environment<br />	3.	Support for version 6 of Microchip’s TCP/IP stack<br />	4.	Cavium NITROX support<br />	5.	HP/UX support<br />	6.	STM32F2 support with hardware crypto and RNG<br />	7.	KEIL MDK-ARM and MDK5 project files complete with new CyaSSL software pack for MDK5<br />	8.	Better ThreadX support and the addition of NetX I/O callback handlers<br />	9.	Freescale Kinetis RNGB support<br />	10.	Freescale Kinetis mmCAU support<br />	11.	One of our favorite projects, Gearman, now supports CyaSSL<br /><br />In summary, we had a great year!  2013 was successful for us on multiple fronts, and we look forward to serving our customers and community with ever more secure and functional software in 2014!  As always, your feedback is welcome at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2014-1-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Software Defined Networking and wolfSSL',
    'post_content' => 'Hi!  Someone told us the other day that Software Defined Networking (SDN) is stupid.  No way will SDN ever replace the high end networking gear, we were told.  <br /><br />We were reminded of a scientific study that proved unequivocally that babies are stupid, courtesy of <a href="http://www.onion.demon.co.uk/theonion/other/babies/stupidbabies.htm">The Onion</a>.  But of course babies grow, and eventually have much greater capabilities, much like SDN will.  <br /><br />We are watching the development of Software Defined Networking (SDN) with a keen eye at wolfSSL.  We already have some users and customers in SDN, and we expect more.  What is more exciting is that the SDN code bases are fresh and new, and the developers of these new SDN switches are released from the legacy decisions that were made 20+ years ago, allowing for a new world of new capabilities.  SDN is networking`s fresh start!  Here`s to what babies can become!<br />',
    'post_status' => 'publish',
    'post_date' => date('2014-1-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Technologies and Techniques for Securing Connected Devices',
    'post_content' => 'wolfSSL will be presenting a session titled “Technologies and Techniques for Securing Connected Devices” at the upcoming 2014 Embedded World Conference in Nürnberg, Germany.  If you are going to be attending the conference, we welcome you to come and listen to our presentation.<br /><br /><b>Technologies and Techniques for Securing Connected Devices<br />Session:</b> 17<br /><b>Day:</b> 02.27.2014<br /><b>Time:</b> 11:30am - 12:00pm<br /><b>Speaker:</b> Chris Conlon<br /><br /><b>Description:<br /></b>Connected and smart devices, in conjunction with smart applications, are continually enabling exciting possibilities for the future. As we rely on these systems more frequently in our everyday lives, it is becoming a necessity for them to be designed and implemented with good security practices in mind. <br /><br />New attacks and vulnerabilities are in the news and media on a daily basis, and as such, it is important that engineers, developers, and managers understand how to be protect applications and devices from such attacks. Security is a broad and often complex field, which can be confusing, overwhelming, and time consuming. <br /><br />This presentation will introduce several security technologies and techniques for securing smart and connected devices, systems, and applications - giving attendees a good starting place and better understanding for developing secure connected devices for today and into the future. Technologies and techniques covered in this presentation will include a discussion about preventing man-in-the-middle attacks with SSL/TLS, optimizing SSL for resource-limited devices, current industry standards for device security, code signing and secure firmware updates, using hardware cryptography on devices, random number generation, and key generation and storage. <br />',
    'post_status' => 'publish',
    'post_date' => date('2014-1-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will Speak at FOSDEM 14 ',
    'post_content' => 'Hi!  wolfSSL will be in the <a href="https://fosdem.org/2014/schedule/event/wolfssl_2013_technical_and_community_update/">embedded devroom</a> at <a href="https://fosdem.org/2014/">FOSDEM 2014</a> to bring people up to date on our CyaSSL open source SSL product.  Details on what`s new include the addition of new crypto ciphers and algorithms, better hardware cryptography support, more flexible abstraction layers, a JNI wrapper, new platform support, and better development tool integration.  We look forward to seeing you there.  <br /><br />If you would like to set aside time to meet at the event, then email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-1-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be attending CES 2014',
    'post_content' => 'Hi!  The wolfSSL team will be attending CES (<a href="http://www.cesweb.org/">http://www.cesweb.org</a>) this year in Las Vegas, January 7-8, 2014.  We will be visiting with our partners and customers.  We still have time on our schedule to get together with more people, so let us know if you`d like to get together.  Just email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2014-1-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on Google Glass',
    'post_content' => 'Hi!  We received our Google Glass a few weeks ago.  It is a fun new toy for our team!  <br /><br />After getting through the standard process of playing with them and getting familiar with the tools, we have decided to embark on the coding.  We will port and verify a number of items on Glass, including wolfSSL lightweight TLS, wolfCrypt, and MIT Kerberos.  Should be fun!  Let us know if you have an interest in our wolfCrypt cryptography library running on Glass, as it will be the first of our tools that we bring to the environment.  <br /><br />If you have questions for us about running any of our projects on Google Glass, then don`t hesitate to email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or simply call at +1 425 245 8247.',
    'post_status' => 'publish',
    'post_date' => date('2013-12-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will exhibit at RSA Conference 2014',
    'post_content' => ' Hi!  We will exhibit at the RSA USA Conference again in 2014, and will be in Booth 839 in the South Expo hall.  If you will be attending the conference, please come by and say hello.  We`ll have our developers in the booth, and as such will be able to go into deep detail on the code if that is your interest!',
    'post_status' => 'publish',
    'post_date' => date('2013-12-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Embedded World 2014',
    'post_content' => 'wolfSSL will be exhibiting at the upcoming 2014 Embedded World conference in Nürnberg, Germany.  The conference will be held February 25-27, 2014 at NürnbergMesse GmbH.  We will be in the M2M Pavilion in Hall 4, booth 4-470 - talking about the CyaSSL embedded SSL library, wolfCrypt crypto engine, and securing devices and applications.<br /><br />If you are attending Embedded World, we welcome you to stop by our booth to visit and say hello.  If you would like to set up a specific meeting time, please email us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />We look forward to seeing you there!',
    'post_status' => 'publish',
    'post_date' => date('2013-12-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using the MIT Kerberos GSS-API with wolfSSL on Android',
    'post_content' => 'Are you interested on using the GSS-API with Kerberos on Android?  If so, you’ll be happy to hear about wolfSSL’s port of the MIT GSS-API library to Android platform - complete with an <b>org.ietf.jgss</b> (<a href="http://tools.ietf.org/html/rfc5653">RFC 5653</a>) compatible application programming interface, CyaSSL cryptography integration, and NDK sample application.<br /><br />You may have read our previous blog entries about porting the MIT Kerberos libraries and CyaSSL embedded SSL library to the Android platform (see link in Reference section, below).  With this post, we wanted to take a moment to describe current availability of the Kerberos and GSS-API libraries on Android through the native NDK framework and the Java GSS-API wrapper.<br /><br /><b>1.  Java GSS-API Wrapper<br /></b><br />The addition of a Java wrapper around the native MIT GSS-API took part in two stages - a SWIG-generated (<a href="http://www.swig.org/">http://www.swig.org/</a>) Java interface, which then in turn was used as a building block for a <b>org.ietf.jgss</b> Java API.  The individual layers are visualized in the figure below.  Both the SWIG layer and the Java GSS-API layer are able to be used in a Java application to access the underlying MIT Kerberos/GSS-API libraries.  The SWIG layer is more tedious to use and less standardized than the Java GSS-API layer, but is closer to the C programming API of the native MIT GSS-API.  We suggest that Java developers use the org.ietf.jgss Java interface over using the SWIG layer directly.  As the org.ietf.jgss interface follows RFC 5653, Java developers should be able to refer to the standard Java documentation for the org.ietf.jgss package for usage instructions and class descriptions.<br /><br />Source code for this project has been released under the open source MIT license, and is currently available for download on GitHub.  Both the Java Generic Security Services API wrappers (SWIG and Java GSS-API), as well as example client and server applications and build instructions are located in the <b>kerberos-java-gssapi</b> package, at the following GitHub URL:<br /><br /><a href="http://github.com/cconlon/kerberos-java-gssapi">http://github.com/cconlon/kerberos-java-gssapi</a><br /><br /><b>2.  Enhanced Example Code<br /></b><br />Included in the Java GSS-API package, we have created several example applications to help developers understand how to use this project in their own application.  There are two sets of client and server examples provided.  The first one is a set of client and server applications which directly use the SWIG-generated Java interface.  The second set of applications is a client and server that use the more standardized Java GSS-API interface (org.ietf.jgss).<br /><br />It is recommended for Java developers to use the Java GSS-API examples, as they demonstrate programming and API usage which is more common in the Java programming language.  Before running any of the included examples, the development machine must first have a krb5.conf file and KDC set up correctly to match the principal names used in the examples.  For more details about building and running these example applications, please see the <b>README</b> included in the <b>kerberos-java-gssapi</b> package.<br /><br /><b>3.  Sample NDK Application<br /></b><br />As one of the main goals of this project was to bring MIT Kerberos/GSS-API support to the Android platform, we have created a sample Android NDK application to serve as an example and reference to Android developers.  This sample application provides a GUI wrapper around the MIT Kerberos kinit, klist, kvno, and kdestroy applications.  It also provides a sample client using the Java GSS-API interface to connect and communicate with the example server application (from Section 2, above).<br /><br />This package contains cross-compiled version of the MIT Kerberos libraries, and includes instructions on how to re-compile the Kerberos libraries yourself for the Android platform.  For details on how to build and run this example application in the Android emulator, please see the README file located in the NDK application package.<br /><br />All sources for this sample application are located in the <b>kerberos-android-ndk</b> package, located at the following URL:<br /><br /><a href="http://github.com/cconlon/kerberos-android-ndk">http://github.com/cconlon/kerberos-android-ndk</a><br /><br />wolfSSL looks forward to seeing what kinds of applications will use this functionality.  If you have any questions, comments, or feedback, we would enjoy to hear it!  Please contact us directly at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br /><br /><b>References:<br /></b><br />MIT Kerberos:  <a href="http://web.mit.edu/kerberos/">http://web.mit.edu/kerberos/</a><br />CyaSSL:  <a href="http://wolfssl.com/yaSSL/Products-cyassl.html">http://wofssl.com/yaSSL/Products-cyassl.html</a><br />kerberos-java-gssapi:  <a href="http://github.com/cconlon/kerberos-java-gssapi">http://github.com/cconlon/kerberos-java-gssapi</a><br />kerberos-android-ndk:  <a href="http://github.com/cconlon/kerberos-android-ndk">http://github.com/cconlon/kerberos-android-ndk</a><br />Initial announcement:  <a href="http://yassl.com/yaSSL/Blog/Entries/2011/11/15_Android_Kerberos_Port_using_CyaSSL_Embedded_SSL.html">http://yassl.com/yaSSL/Blog/Entries/2011/11/15_Android_Kerberos_Port_using_CyaSSL_Embedded_SSL.html</a><br /><br />Thanks,<br />Team wolfSSL',
    'post_status' => 'publish',
    'post_date' => date('2013-12-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More Dual_EC_DRBG News',
    'post_content' => 'It was reported yesterday in The Guardian and elsewhere that the NSA paid RSA $10M to set Dual_EC_DRBG as their default PRNG.  See the news here:  <a href="http://www.theguardian.com/world/2013/dec/20/nsa-internet-security-rsa-secret-10m-encryption">http://www.theguardian.com/world/2013/dec/20/nsa-internet-security-rsa-secret-10m-encryption</a>.  <br /><br />As we have previously stated, we never implemented Dual_EC_DRBG in any of our products, much less set it as default, because of its suspect nature.  If you`re not familiar with Dual_EC_DRBG, the background on wikipedia is here:  <a href="http://en.wikipedia.org/wiki/Dual_EC_DRBG">http://en.wikipedia.org/wiki/Dual_EC_DRBG</a>.<br /><br />For even more background, <a href="https://www.youtube.com/watch?v=e-w7mQt8PhI&list=UUhGDEluRG9r5kCecRAQTx_Q&index=5">here`s a great Black Hat talk</a> by Derek Soeder, Christopher Abad, and Gabriel Acevedo from Cylance on the subject of breaking Pseudorandom Algorithms. ',
    'post_status' => 'publish',
    'post_date' => date('2013-12-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SSL/TLS and Cryptography Benchmarks',
    'post_content' => 'Some of our users have been wondering if we were doing benchmarks of our SSL and cryptography performance.  Here are the results we have gathered so far:  <a href="perma://BLPageReference/8A3A8C0A-62FF-4618-A100-4CC1301A50A0">wolfSSL / CTaoCrypt Benchmarking</a>.<br /><br />Let us know if we should do a different kind of benchmark at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-12-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Assembly Optimizations Available in wolfSSL for ARM Processors',
    'post_content' => 'wolfSSL, as a long standing partner to ARM, has always been well optimized for ARM environments.  One of the ways CyaSSL can be optimized for ARM platforms includes assembly optimizations for Public Key operations with the CTaoCrypt fastmath option.  This translates to a speed increase when using RSA, Diffie-Hellman, DSA, or ECC.<br /><br />If you dive into our code, these optimizations can be found in the <b>asm.c</b> source file.<br /><br />When using the ./configure system, fastmath is enabled by default on 64-bit platforms.  On 32-bit platforms, it can be enabled by using the “--enable-fastmath” option.  In environments not using the ./configure system to build CyaSSL, fastmath can be enabled by defining <b>USE_FAST_MATH</b>.  Since stack usage can be high when using fastmath, we recommend defining <b>TFM_TIMING_RESISTANT</b> as well.<br /><br />If you have any questions about using CyaSSL in an ARM environment, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-12-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More on we`re dumping SSL 3.0 support from wolfSSL',
    'post_content' => 'We`ve been encouraged by the feedback from the community on dropping SSL 3.0 support from wolfSSL, meaning that people think we should drop it as insecure and eliminate the legacy which goes back to 1996.  Many thanks to Paul Kocher, Phil Karlton, Alan Freier, and the many shoulders they were standing on for designing the SSL 3.0 protocol, but after 17 years, it is time to evolve to a TLS only world.  <br /><br />Practically speaking, this means that we`ll deprecate SSL 3.0 code from our tree, and only apply critical security fixes.  We will of course support existing customers and open source users that need SSL 3.0 for specific reasons that are private to them.  <br /><br />It might be fun to think about a name for our Q1 release of wolfSSL without SSL support.  Here`s some ideas:  SSL Minus, SSL Minas Tirith, CaTLS defend Minas Tirith.  It can go on for a while.  See <a href="http://en.wikipedia.org/wiki/Minas_Tirith">http://en.wikipedia.org/wiki/Minas_Tirith</a> for reference.  Oh, here`s another idea, how about wolfTLS?<br /><br />Send in your ideas for the new name to <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2013-12-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Dumping SSL v3 from wolfSSL',
    'post_content' => 'Hi!  We`re considering the elimination of SSL 3.0 support from wolfSSL.  There`s a lot of reasons to do it, including better security, cleaning up our code, and its time to move on and modernize.  Anybody have an opinion?  The code would still be available, but not mainline.<br />',
    'post_status' => 'publish',
    'post_date' => date('2013-12-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is looking to Hire!',
    'post_content' => '<a href="http://www.wolfssl.com">wolfSSL</a> is a growing company looking to add a top notch embedded systems software developer to our organization. We develop, market and sell the leading open source embedded SSL protocol implementation, CyaSSL. We are also the developers of the yaSSL Embedded Web Server and wolfCrypt Crypto Engine. Our users are primarily building devices or applications that need security.<br /><br />Operating environments of particular interest to us include Embedded Linux, VxWorks, QNX, ThreadX, FreeRTOS,  and ARM RTX. Skill with the new mobile and embedded environments like Android and iOS is a plus.<br /><br />Currently, we are seeking to add a master level C developer interested in a fun young company with tremendous upside.<br /><br />Backgrounds that are useful to our team include networking, security, and hardware optimizations. Assembly experience is a plus. Experience with encryption software is a plus. RTOS experience is a plus.<br /><br />To apply or discuss, please contact <a href="mailto:larry@wolfssl.com?subject=">larry@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2013-12-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Truncated HMAC with wolfSSL',
    'post_content' => 'Are you fan of TLS Extensions? We are here today to present the addition of Truncated HMAC on wolfSSL!<br /><br />Currently defined TLS cipher suites use the HMAC to authenticate record-layer communications. In TLS, the entire output of the hash function is used as the MAC tag. However, it may be desirable in constrained environments to save bandwidth by truncating the output of the hash function to 80 bits when forming MAC tags. To enable the usage of Truncated HMAC at wolfSSL you can simply do:<br /><br />./configure --enable-truncatedhmac<br /><br />Using Truncated HMAC on the client side requires an additional function call, which should be one of the following functions:<br /><br />wolfSSL_CTX_UseTruncatedHMAC();<br />wolfSSL_UseTruncatedHMAC();<br /><br />wolfSSL_CTX_UseTruncatedHMAC() is most recommended when the client would like to enable Truncated HMAC for all sessions. Setting the Truncated HMAC extension at context level will enable it in all SSL objects created from that same context from the moment of the call forward. <br /><br />wolfSSL_UseTruncatedHMAC() will enable it for one SSL object only, so it`s recommended to use this function when there is no need for Truncated HMAC on all sessions.<br /><br />On the server side no call is required. The server will automatically attend to the client`s request for Truncated HMAC.<br /><br />All TLS extensions can also be enabled with:<br /><br />./configure --enable-tlsx<br /><br />If you have any questions about using TLS Extensions with wolfSSL please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-12-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SSL Termination and SSL Inspection with wolfSSL SNI',
    'post_content' => 'If you`re working with SSL Termination and/or SSL Inspection we have good news for you! wolfSSL now has a new feature in its Server Name Indication API:<br /><br />wolfSSL_SNI_GetFromBuffer()<br /><br />This function is capable of retrieving the server name of a given type indicated by the client from the raw bytes of a ClientHello message. This way, it is possible to save both time and resources in order to get the information needed to make a decision, whether that be which path the connection should take or if it should be inspected.<br /><br />The SNI extension can be enabled with either:<br /><br />./configure --enable-sni<br /><br />OR<br /><br />./configure --enable-tlsx<br /><br />Remember that the second option will enable all TLS extensions implemented in wolfSSL.  If you`re planning on using more than one extension and still care for a smaller build, you should enable the extensions one by one.<br /><br />If you have any questions about using SNI with TLS please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-11-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Avoiding Fear Mongering as a Security Software Vendor and a Security Software Buyer',
    'post_content' => 'All too often, security software vendors resort to fear-mongering as a sales and marketing method.  At wolfSSL, we consciously avoid this tactic.  We recognize that our competitors use it.  They tell customers to be afraid of open source.  They tell customers to be afraid of breaches. Unfortunately, they use the fear mongering approach to their benefit.  However tempting, we reject their approach as fundamentally wrong and immoral.  We understand why they do it, but it is still unethical.<br /><br />wolfSSL makes sales.  We are an open source project and an open source company.  To succeed at both, we need to generate revenue.  More revenue means that we will produce more open source.  More open source means that we can produce more revenue and subsequently even more open source, and so on.  <br /><br />An old colleague, Marten Mickos, originally characterized this as the "Beautiful Virtuous Cycle of Open Source" that drove the success of MySQL.  He was right about the cycle, and we at wolfSSL are intent taking a page out of the database book and multi-master replicating it in the security software market.  We believe our dual license strategy, which employs both commercial and GPLv2 licensing, is the best thing for both community and commercial users.  This truth we hold to be self evident, when understood properly.  <br /><br />We know that open source licensing can be confusing, and we are happy to explain our licensing model.  Please feel free to contact us at licensing (at) wolfssl.com if you have questions.  Our only goal is to help you understand our approach, and help you make a rational decision.  We are happy to help you avoid fear mongering!  Don`t forget that fear is the mind killer!<br /><br />And now, let us discuss fear-mongering in security.  First of all, don`t believe the hype.  Turn on your sensors.  When the marketing organization of your vendor focuses on breaches rather than on informing you on how to defend against them, you are working with the wrong organization.  A good security software company will strive to inform you and not strive to scare you!  We suggest that you don`t work with an organization that uses the fear-mongering tactic to drive their sales.  Turn on your sensors, don`t let fear be the mind killer, and do the right thing given your situation.<br /><br />As always, we are here to create community and security.  Please feel free to contact us with your thoughts at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br /><br />And, dear reader, this riddle for you, How Many Haiku`s Send a Message?<br /><br />Team wolfSSL',
    'post_status' => 'publish',
    'post_date' => date('2013-11-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Minimizing Resource Consumption on Devices with Embedded SSL using the Swapper',
    'post_content' => 'Hi!  IoT engineers everywhere are battling with software resource usage.  TCP/IP and SSL can be fairly consumptive of resources.  One of the old school techniques for minimizing resource consumption is swapping one app for another on a device.  Taking that concept to an extreme can be tricky, and the extreme we`ve been working with is swapping between TCP/IP and SSL while maintaining a live connection.  The trick is keeping the connection going.  To get there, we`ve implemented the Swapper!  <br /><br />If you think the Swapper might help you battle through your resource constraints, then contact us at <a href="mailto:info@wolfSSL.com">info@wolfSSL.com</a>.  ',
    'post_status' => 'publish',
    'post_date' => date('2013-11-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Updated wolfSSL Porting Guide Available',
    'post_content' => 'As a large number of our users port wolfSSL to new platforms and environments, we’ve put some time into updating our wolfSSL Porting Guide and have made it available both online and in PDF version.<br /><br />The updated guide covers areas in the wolfSSL code which typically need modification when porting wolfSSL to a new environment, including:<br /><br />2.1  <b>Data Types<br /></b>2.2  <b>Endianness</b><br />2.3  <b>writev</b><br />2.4  <b>Input / Output</b><br />2.5  <b>Filesystem</b><br />2.6  <b>Threading</b><br />2.7  <b>Random Seed</b><br />2.8  <b>Memory</b><br />2.9  <b>Time</b><br />2.10  <b>C Standard Library</b><br />2.11  <b>Logging</b><br />2.12  <b>Public Key Operations</b><br />2.13  <b>Atomic Record Layer Processing</b><b><br /></b>2.14  <b>Features</b><br /><br />You can find the updated guide here:  <a href="perma://BLPageReference/18791976-A0B3-4DE9-A90D-6154ACB8FAD4">wolfSSL Porting Guide</a>.<br /><br />If you have any questions about content in the Porting Guide, or about the wolfSSL lightweight SSL library in general, please reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2013-11-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Chris Conlon of wolfSSL gives talk on Connected Device Security at ARM TechCon',
    'post_content' => 'Yesterday Chris gave a talk at ARM TechCon about connected device security.  If you are interested in taking a look at the slides, you are welcome to contact us at <a href="mailto:info@wolfSSL.com">info@wolfSSL.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-11-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Halloween at ARM TechCon with wolfSSL',
    'post_content' => 'Yesterday marked the final day of the 2013 ARM Technology Conference, which happen to be Halloween as well.  While most attendees were dressed in normal attire, there were a few individuals who got into the holiday spirit.  The wolfSSL booth had the pleasure of getting a visit from Daenerys Targaryen (of Game of Thrones fame), who was even equipped with an ARM-powered dragon!<br /><br />Thanks to all the attendees who stopped by to visit with us about the CyaSSL embedded SSL library, wolfCrypt embedded crypto engine, and security in general!',
    'post_status' => 'publish',
    'post_date' => date('2013-11-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Live from ARM TechCon',
    'post_content' => 'wolfSSL is currently exhibiting at this year’s ARM Technology Conference (#armtechcon) in San Jose, CA.  The first day of the expo has been busy, brining several interesting conversations to the wolfSSL booth.<br /><br />We recently stopped by the ARM Keil booth (photo above), where the guys were nice enough to take a break in their busy booth for a photo opportunity.  If you haven’t heard about wolfSSL’s integration into Keil MDK5, you can read about it in our <a href="http://yassl.com/yaSSL/Blog/Entries/2013/10/30_wolfSSL_Embedded_SSL_Integrated_with_Keil_MDK5.html">blog post</a>, or <a href="http://www.prweb.com/releases/2013/10/prweb11215195.htm">press release</a>.<br /><br />If you’re attending the show, stop by and say hi!  We’ll also be giving a presentation tomorrow (Thursday) at 3pm titled “Considerations in Securing Connected Devices”.<br /><br />',
    'post_status' => 'publish',
    'post_date' => date('2013-10-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL Integrated with Keil MDK5',
    'post_content' => 'If you are a Keil MDK-ARM user, we’re happy to announce that the wolfSSL embedded SSL library is now integrated into the Keil MDK5 as an easy-to-use software pack.  <br /><br />This integration means that MDK5 users can easily pull in SSL/TLS support directly to their Keil projects without going out to the web to do a separate download.  In addition to the library itself, several example projects using wolfSSL are also available.<br /><br />As stated by Reinhard Keil, ARM’s Director of MCU Tools, "The Keil and wolfSSL teams have successfully collaborated to fully integrate CyaSSL Embedded SSL into MDK 5. The result is the most seamless tool combination available for developers wishing to secure their device communications with SSL."<br /><br />To read more, the press release can be found here: <a href="http://www.prweb.com/releases/2013/10/prweb11215195.htm">http://www.prweb.com/releases/2013/10/prweb11215195.htm</a>.  We’re excited to hear user feedback and field any questions that may come up.  Let us know what you think at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-10-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL JNI 1.0 Now Available',
    'post_content' => 'wolfSSL is happy to announce that the first release of the wolfSSL JNI wrapper is now available for download.<br /><br />wolfSSL JNI provides Java applications with SSL/TLS support up to the current industry standards of TLS 1.2 and DTLS 1.2.  Current Java implementations have lacked DTLS support, causing Java developers to write their own custom JNI wrapper if they wanted or needed to use DTLS.  wolfSSL JNI solves this problem by giving developers a ready-to-use Java wrapper around the robust and mature CyaSSL lightweight SSL library.<br /><br />In addition to providing DTLS support, wolfSSL JNI has been designed with flexibility in mind.  It allows Java applications to write custom callbacks for I/O, public key, MAC/encrypt, decrypt/verify, and logging, and allows developers to leverage all the flexibility and portability that has made CyaSSL popular with users around the globe.<br /><br />Like CyaSSL, wolfSSL JNI is dual licensed under both the GPLv2 as well as a standard commercial license.  Detailed licensing and support options can be found on the wolfSSL Licensing page (linked below).<br /><br />Download wolfSSL JNI and give it a try!  If you have any questions or comments, please feel free to reach out to us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />Download:  <a href="http://yassl.com/yaSSL/download/downloadForm.php">http://yassl.com/yaSSL/download/downloadForm.php</a><br />wolfSSL JNI Manual: <a href="http://www.yassl.com/yaSSL/Docs-wolfssl-jni-manual.html">http://www.yassl.com/yaSSL/Docs-wolfssl-jni-manual.html</a><br />wolfSSL JNI Product Page:  <a href="http://yassl.com/yaSSL/Products-wolfssljni.html">http://yassl.com/yaSSL/Products-wolfssljni.html</a><br />License Information:  <a href="http://yassl.com/yaSSL/License.html">http://yassl.com/yaSSL/License.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-10-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Considering OAuth for Devices',
    'post_content' => 'Hi!  We are currently considering implementing Oauth for devices.  <br /><br />OAuth, first defined by RFC 5849 (1.0), and revised with RFC 6749 (2.0) specifies an authorization framework to allow third party applications to obtain limited access to HTTP services.  From RFC 6749:<br /><br />"In the traditional client-server authentication model, the client requests an access-restricted resource (protected resource) on the server by authenticating with the server using the resource owner`s credentials.  In order to provide third-party applications access to restricted resources, the resource owner shares its credentials with the third party."<br /><br />Under this traditional approach, third parties are given direct access to the resource owner`s credentials.  This brings with it several concerns, including passwords being stored in plaintext, third parties gaining overly-broad access to the resource owner`s resources, and the inability for resource owners to revoke third party privileges without having to change their password.<br /><br />OAuth presents a way to solve these issues by having the third party application request access to resources controlled by a resource owner (which are hosted on a resource server).  The application is then issued a different set of credentials than those of the resource owner which it can then in turn use to access the desired resources.<br /><br />Do you need an OAuth client on your device or for your embedded application?  If so, let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />RFC 5849:  <a href="http://tools.ietf.org/html/rfc5849">http://tools.ietf.org/html/rfc5849</a><br />RFC 6749:  <a href="http://tools.ietf.org/html/rfc6749">http://tools.ietf.org/html/rfc6749</a><br />OAuth Community Site:  <a href="http://oauth.net/">http://oauth.net/</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-10-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'About Open Source',
    'post_content' => 'Hi!  This is just a reminder.  We are still all about open source.  We believe that Open Source Software is the best way to conceive, share, deliver, support and build software.<br /><br />We believe in open source for all of the right and well documented reasons.  If you can`t work with open source then tell us your story at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-10-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL on ColdFire 547X/548X with Hardware Encryption Acceleration',
    'post_content' => 'Hi!  The CyaSSL Embedded SSL engine, wolfCrypt cryptography library, and the wolfSSL Embedded Web Server now support Freescale`s ColdFire hardware encryption.  Our initial benchmarks show that AES and 3DES cryptography operations are up to 10 times faster when done with ColdFire`s hardware acceleration.  If you would like to use one of our products with ColdFire, and leverage ColdFire`s hardware cryptography, then contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-10-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SSL/TLS Programming Tutorial',
    'post_content' => 'Are you just learning about SSL/TLS, or interested in learning how to layer it into an existing application?  If so, we include an SSL tutorial in Chapter 11 of our wolfSSL Manual which provides a good introduction to integrating wolfSSL into a typical TCP socket-based application.<br /><br />Our SSL/TLS Tutorial uses base examples found in the popular “Unix Network Programming” book by Richard Stevens, Bill Fenner, and Andrew Rudoff.  It then walks the programmer through the integration of wolfSSL step by step, eventually giving them a working application with secure communication through SSL.<br /><br />The tutorial can be found at the following URL:<br /><a href="perma://BLPageReference/AE1DD7D5-59D5-44C3-AA1E-89434EAA6C7A">wolfSSL SSL/TLS Tutorial</a><br /><br />Please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a> with any questions or comments regarding the tutorial or the wolfSSL lightweight SSL/TLS library.',
    'post_status' => 'publish',
    'post_date' => date('2013-10-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded Security talks at ARM TechCon',
    'post_content' => 'Hi!  wolfSSL will be exhibiting at ARM TechCon for our fourth year in a row at the end of this month.  The event is held at Santa Clara Convention Center.  If you`re going to be there, then please stop by our booth!<br /><br />This year we`ll also be speaking at the event.  The line up of security related talks is here:  <a href="http://www.embedded.com/electronics-blogs/other/4422265/Security-at-ARM-TechCon-2013-is-serious-business">http://www.embedded.com/electronics-blogs/other/4422265/Security-at-ARM-TechCon-2013-is-serious-business</a>.  The abstract for Chris`s class follows:<br /><br />“Considerations in Securing Connected Devices (ATC- 328),” taught by Chris Conlon of wolfSSL, a hands-on presentation in which he focuses on preventing man in the middle (MITM) attacks using SSL/TLS, optimizing SSL for resource-limited devices, current industry standards for device security, code signing and secure firmware updates, using hardware cryptography on devices, random number generation, key generation and storage, and differential power analysis.',
    'post_status' => 'publish',
    'post_date' => date('2013-10-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Serpent Cipher in wolfSSL Embedded SSL',
    'post_content' => 'Hi!  One of the alternative ciphers we`ve considered implementing in wolfSSL is the Serpent Cipher.  Not only does it have a cool sounding alliterative name, but it is theoretically more secure than Rijndael/AES.  In fact, it was a finalist for AES.  An overview of the Serpent Cipher can be found here:  <a href="http://en.wikipedia.org/wiki/Serpent_(cipher)">http://en.wikipedia.org/wiki/Serpent_(cipher)</a>.<br /><br />If you think it is productive for us to add Serpent to wolfSSL, then just let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.  <br /><br />In unrelated news, We Are The Champions <a href="http://www.youtube.com/watch?v=04854XqcfCY">http://www.youtube.com/watch?v=04854XqcfCY</a>  of National Cyber Security Awareness Month.  See:  <a href="http://www.staysafeonline.org/ncsam/champions/all-champions/">http://www.staysafeonline.org/ncsam/champions/all-champions/</a>, for the complete list of champions, and how to get involved.  ',
    'post_status' => 'publish',
    'post_date' => date('2013-10-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL does _not_ implement Dual_EC_DRBG',
    'post_content' => 'Hi!  It is rare for a cryptography algorithm to make the pages of the popular press, but Dual_EC_DRBG has done just that!  The best article we`ve seen to date is Kim Zetter`s lucid article in Wired: <a href="http://www.wired.com/threatlevel/2013/09/nsa-backdoor/all/">http://www.wired.com/threatlevel/2013/09/nsa-backdoor/all/</a>.<br /><br />For the record, we have never implemented the Dual_EC_DRBG algorithm, nor gone so far as to set it as a default.  See:  <a href="http://blog.cryptographyengineering.com/2013/09/rsa-warns-developers-against-its-own.html">http://blog.cryptographyengineering.com/2013/09/rsa-warns-developers-against-its-own.html</a><br /><br />We`re moths to the flame when it comes to alternative and new crypto, as witnessed by our implementations of NTRU, SHA-3, HC-128, and Rabbit.  We like trying new things and then benchmarking them in our test rigs, but on Dual_EC_DRBG, we passed.<br /><br />All that said, we deliver our products in open source, and you and everyone else are welcome to inspect them.  Our position on our cryptography implementation follows:<br /><br />1.  We can trace all of our code to a very limited set of developers in our company.  We are open source, but unlike some projects, we tightly control and inspect the code that goes into our mainline.<br /><br />2.  Our code is vetted out not only by wolfSSL staff, but by a diverse and wide array of people in open source, cryptography, and commercial security companies.  <br /><br />The above is not true for the OpenSSL project.  As Matthew Green says, OpenSSL is "a patchwork nightmare originally developed by a programmer who thought it would be a fun way to learn Bignum division.* Part of it is because crypto is unbelievably complicated. Either way, there are very few people who really understand the whole codebase."  See:  <a href="http://blog.cryptographyengineering.com/2013/09/on-nsa.html">http://blog.cryptographyengineering.com/2013/09/on-nsa.html</a>.  Our thoughts on comparing CyaSSL to OpenSSL are here:  <a href="http://www.yassl.com/yaSSL/Blog/Entries/2011/11/18_How_Does_CyaSSL_Compare_to_OpenSSL.html">http://www.yassl.com/yaSSL/Blog/Entries/2011/11/18_How_Does_CyaSSL_Compare_to_OpenSSL.html</a>, and here:  <a href="http://www.yassl.com/yaSSL/Blog/Entries/2012/2/16_OpenSSL_in_Devices_gets_cracked_when_trying_to_%22enhance%22_randomness.html">http://www.yassl.com/yaSSL/Blog/Entries/2012/2/16_OpenSSL_in_Devices_gets_cracked_when_trying_to_%22enhance%22_randomness.html</a><br /><br />Finally, a comment from Bruce Schneier on staying Secure:  <br /><br />"Closed-source software is easier for the NSA to backdoor than open-source software. "<br /><br /><a href="http://www.theguardian.com/world/2013/sep/05/nsa-how-to-remain-secure-surveillance">http://www.theguardian.com/world/2013/sep/05/nsa-how-to-remain-secure-surveillance</a><br /><br />We are open source, and we believe in open source.  Open source is the best way to develop, deliver, and support cryptography.  Ipso Facto.  Over and out from team wolfSSL.',
    'post_status' => 'publish',
    'post_date' => date('2013-9-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Implementation and Performance of AES-NI in wolfSSL Lightweight SSL',
    'post_content' => 'Do you have a processor and compiler which support Intel’s AES-NI?  If so, you can take advantage of the increase in performance provided by AES-NI in CyaSSL and wolfCrypt.<br /><br />wolfSSL has worked with Intel to publish a white paper describing how Intel’s AES-NI can be used with the CyaSSL embedded SSL library.  This paper provides a brief overview of the Intel AES-NI instructions and demonstrates the performance gains realized when Intel AES-NI is used in place of a more traditional software-only based AES implementation. The CyaSSL embedded SSL library is used as a test bed in the white paper to perform the comparison as it can be built with either traditional software-based AES or hardware-based AES-NI support at compile time. As a secondary goal to demonstrating Intel AES-NI performance, this paper explains how to determine if a pre-built SSL library (static or shared) offers built-in support for the Intel Advanced Encryption Standard New Instructions.<br /><br />The white paper can be downloaded directly from the wolfSSL website at the following location.  If you have any questions about using CyaSSL on Intel hardware, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br /><br />CyaSSL AES-NI White Paper: <a href="perma://BLPageReference/CA5A7048-A7FD-422F-A32A-91E3AB8DCCB6">wolfSSL White Papers</a> (<a href="http://yassl.com/yaSSL/cyassl-embedded-ssl-white-papers.html">http://yassl.com/yaSSL/cyassl-embedded-ssl-white-papers.html</a>)',
    'post_status' => 'publish',
    'post_date' => date('2013-9-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL STM32 Hardware Crypto and RNG Support',
    'post_content' => 'Did you know that the CyaSSL lightweight SSL library has support for hardware-based cryptography and random number generation offered by the STM32 processor?  Supported cryptographic algorithms include AES (CBC, CTR), DES (ECB, CBC), 3DES, MD5, and SHA1.  For details regarding the STM32 crypto and hash processors, please see the STM32F2xx Standard Peripheral Library document (linked below).  <br /><br />Devices using the STM32 with CyaSSL can see substantial speed improvements when using hardware crypto versus using CyaSSL’s software crypto implementation.  The following benchmarks were gathered from the CTaoCrypt benchmark application (ctaocrypt/benchmark/benchmark.c) running on the STM3221G-EVAL board (STM32F2) using the STM32F2 Standard Peripheral Library and FreeRTOS.<br /><br /><b>CyaSSL Software Crypto, Normal Big Integer Math Library<br /></b><br />AES        1024 kB took 0.822 seconds,   1.22 MB/s<br />ARC4     1024 KB took 0.219 seconds,   4.57 MB/s<br />DES       1024 KB took 1.513 seconds,   0.66 MB/s<br />3DES     1024 KB took 3.986 seconds,   0.25 MB/s<br /><br />MD5          1024 KB took 0.119 seconds,   8.40 MB/s<br />SHA          1024 KB took 0.279 seconds,   3.58 MB/s<br />SHA-256  1024 KB took 0.690 seconds,   1.45 MB/s<br /><br />RSA 2048 encryption took 111.17 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took 1204.77 milliseconds, avg over 100 iterations<br />DH  2048 key generation   467.90 milliseconds, avg over 100 iterations<br />DH  2048 key agreement   538.94 milliseconds, avg over 100 iterations<br /><br /><b>STM32F2 Hardware Crypto, Normal Big Integer Math Library<br /></b><br />AES        1024 kB took 0.105 seconds,   9.52 MB/s<br />ARC4     1024 KB took 0.219 seconds,   4.57 MB/s<br />DES       1024 KB took 0.125 seconds,   8.00 MB/s<br />3DES     1024 KB took 0.141 seconds,   7.09 MB/s<br /><br />MD5           1024 KB took 0.045 seconds,  22.22 MB/s<br />SHA           1024 KB took 0.047 seconds,  21.28 MB/s<br />SHA-256  1024 KB took 0.690 seconds,   1.45 MB/s<br /><br />RSA 2048 encryption took 111.09 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took 1204.88 milliseconds, avg over 100 iterations<br />DH  2048 key generation  467.56 milliseconds, avg over 100 iterations<br />DH  2048 key agreement   542.11 milliseconds, avg over 100 iterations<br /><br />To enable STM32 hardware crypto and RNG support, define STM32F2_CRYPTO and STM32F2_RNG when building CyaSSL.  For a more complete list of defines which may be required, please see the CYASSL_STM32F2 define in <cyassl_root>/cyassl/ctaocrypt/settings.h.<br /><br />If you would like to use CyaSSL with STM32 hardware-based cryptography or RNG, or have any questions, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a> for more information.  The latest stable release of CyaSSL is available for download under the GPLv2 direct from the <a href="http://yassl.com/yaSSL/download/downloadForm.php">wolfSSL website</a>.<br /><br />CyaSSL embedded SSL library: <a href="http://wolfssl.com/yaSSL/Products-cyassl.html">http://wolfssl.com/yaSSL/Products-cyassl.html</a><br />STM32: <a href="http://www.st.com/internet/mcu/class/1734.jsp">http://www.st.com/internet/mcu/class/1734.jsp</a><br />STM32F2 Standard Peripheral Library documentation: <a href="http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/USER_MANUAL/DM00023896.pdf">http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/USER_MANUAL/DM00023896.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-9-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release 2.8.0 Now Available',
    'post_content' => 'The bi-monthly release of wolfSSL, 2.8.0, is now ready to download from our website.  New features include:<br /><br />- AES-GCM and AES-CCM use AES-NI<br />- NetX default IO callback handlers<br />- IPv6 fixes for DTLS Hello Cookies<br />- The ability to unload Certs/Keys after the handshake, wolfSSL_UnloadCertsKeys()<br />- SEP certificate extensions<br />- Callback getters for easier resource freeing<br />- External CYASSL_MAX_ERROR_SZ for correct error buffer sizing<br />- MacEncrypt and DecryptVerify Callbacks for User Atomic Record Layer Processing<br />- Public Key Callbacks for ECC and RSA<br />- Client now sends blank cert upon request if doesn`t have one with TLS <= 1.2<br /><br />Please see the README and our <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">on-line documentation</a> for more information or feel free to <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-8-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Recent Security Compromise in Android Apps using Java Cryptography Architecture (JCA)',
    'post_content' => 'Earlier this month, Google announced that a security compromise had been found which affects applications that improperly initialize, or fail to initialize completely, the PRNG (pseudorandom number generator) before using it for key generation, signing, or random number generation.<br /><br />On the <a href="http://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html">Android Developers Blog</a>, Alex Klyubin, Android Security Engineer, stated that “We have now determined that applications which use the Java Cryptography Architecture (JCA) for key generation, signing, or random number generation may not receive cryptographically strong values on Android devices due to improper initialization of the underlying PRNG. Applications that directly invoke the system-provided OpenSSL PRNG without explicit initialization on Android are also affected”, but also noted that “Applications that establish TLS/SSL connections using the <i>HttpClient</i> and <i>java.net</i> classes are not affected as those classes do seed the OpenSSL PRNG with values from /dev/urandom.”<br /><br />The Android Developers Blog link provides Android developers with a workaround, suggesting that the PRNG be initialized with entropy from /dev/urandom or /dev/random.<br /><br />For our wolfSSL and wolfCrypt users on Android, applications should not be affected as wolfSSL and wolfCrypt seed their PRNG from /dev/urandom or /dev/random by default.  When using crypto directly through wolfCrypt, this happens when the application calls InitRng().  When using SSL/TLS through wolfSSL, the PRNG is automatically seeded.<br /><br />For users who want to write their own seed generation code, wolfSSL and wolfCrypt allow programmers to define NO_DEV_RANDOM and write their own GenerateSeed() function in <cyassl_root>/ctaocrypt/src/random.c.  For more information about doing so, or questions, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />“Some SecureRandom Thoughts”, Android Developers Blog: <a href="http://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html">http://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-8-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and SEP 2.0',
    'post_content' => 'Hi!  If you are interested in IoT and specifically security of IoT, then you`ll probably like this article on SEP 2.0.  SEP stands for Smart Energy Profile.  This note is just to let our users know that we`re following the evolution of the standard as it relates to SSL/TLS, and have provided our wolfSSL embedded TLS solution to a number of progressive companies that are building out the smart grid.  If you have questions about how wolfSSL fits into the smart grid and SEP 2.0, then contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.  <br /><br />If you need background information, there is an excellent article at EE Times that you can review here:  <a href="http://www.power-eetimes.com/en/an-overview-of-zigbee-s-smart-energy-profile-2.0-standard.html?cmp_id=71&news_id=222906342">http://www.power-eetimes.com/en/an-overview-of-zigbee-s-smart-energy-profile-2.0-standard.html?cmp_id=71&news_id=222906342</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-8-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL with Cavium NITROX Security Processors',
    'post_content' => 'wolfSSL now supports the Cavium NITROX processors, thus enabling wolfSSL users to take advantage of the incredible performance boosts provided by the NITROX family.  Cavium’s NITROX processors combine cryptographic acceleration with the latest security algorithms.<br /><br />The NITROX PX family can deliver performance ranging from 500 Mbps to 2.5 Gbps for full SSL protocol offload, and anywhere from 4K to 17K RSA operations per second using 1024bit exponent RSA.  The NITROX III family can additionally boost SSL offload performance to anywhere from 5 Gbps to 40 Gbps, and can provide 35K to 200K RSA operations per second using 1024bit exponent RSA.<br /><br />Are you interested in using wolfSSL with a Cavium NITROX processor?  If so, let us know at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.<br /><br />NITROX Security Processors:  <a href="https://www.cavium.com/processor_security.html">https://www.cavium.com/processor_security.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-8-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'FreeRTOS Web Server',
    'post_content' => 'Hi!  wolfSSL`s Secure Embedded Web Server is now available for FreeRTOS.  Let us know if you`re interested at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-8-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be at Microchip Masters',
    'post_content' => 'Hi!  The wolfSSL team will be at Microchip Masters in Phoenix next week.  Please come by and say hello.  We`ll be talking about our cryptography and SSL solutions for the PIC32 environment.  Also, if you’re a wolfSSL user in the Phoenix area and want to get together, then we can make ourselves available to meet.  Contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>, or call +1 425 245 8247.<br /><br />Microchip Masters details are available at:  <a href="http://techtrain.microchip.com/masters/?redirects=masters">http://techtrain.microchip.com/masters/?redirects=masters</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-8-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Fan Art by Steve Barker',
    'post_content' => 'Here at wolfSSL, we’re always excited to see fan art!  Today we’d like to thank Steve Barker (<a href="https://plus.google.com/103515628980768116177/posts">https://plus.google.com/103515628980768116177/posts</a>) for the rendition of our logo and tagline!',
    'post_status' => 'publish',
    'post_date' => date('2013-8-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Kyle Wilhoit`s Industrial Control Honeypots presentation from Black Hat',
    'post_content' => 'One of the consistent themes at Black Hat is attacks on industrial control systems; which includes water plants, power plants, and oil refineries.  One of the presentations was centered around using honeypots to determine the level of attack activity.  An excellent article on the presentation and related material can be found here:  <a href="http://gcn.com/Articles/2013/08/07/ics-honeypots.aspx?s=security_080813&admgarea=TC_SecCybersSec&Page=1">http://gcn.com/Articles/2013/08/07/ics-honeypots.aspx?s=security_080813&admgarea=TC_SecCybersSec&Page=1</a><br /><br />Some of the attacks can be mitigated with wolfSSL, by using our embedded SSL to secure firmware updates and eliminate MITM attacks.  We`ve seen a number of progressive companies adopt our products to do exactly that.  ',
    'post_status' => 'publish',
    'post_date' => date('2013-8-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Excellent SSL Deployment Guide from Qualys SSL Labs',
    'post_content' => 'Qualys put out an excellent SSL deployment best practices paper a few months ago.  If you have not seen it, then check it out here:  <a href="https://www.ssllabs.com/projects/best-practices/">https://www.ssllabs.com/projects/best-practices/</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-8-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SSL and Home Automation',
    'post_content' => 'We are at Black Hat 2013 this week and have seen some really cool hacks. Today, we saw "Honey, I`m Home!! Hacking Z-Wave Home Automation Systems" presented by Behrang Fouladi and Sahand Ghanoun. They demonstrated how easy it is to unlock someone`s house with a laptop and a sub-$75 radio card. While you can encrypt your data and add protections to prevent packet replay, if you assume the other end is always friendly you can have a problem.<br /><br />The Z-Wave protocol uses a pre-shared key to encrypt a proper random number for use as the key for AES encryption of the connection. Teasing the pre-shared key out of the devices wasn`t interesting to the researchers. They found an easier method.<br /><br />The demo involved forcing a controllable dead-bolt lock using the protocol stack to rekey with a new home-controller: a human sitting at a laptop with a cheap radio. Once the dead-bolt rekeyed, it accepted the human`s unlock command and opened the door.<br /><br />Public-key cryptography can solve this problem. Providing a method for your home automation equipment to trust each other will give you the physical security you desire with your dead-bolt locks.<br /><br />wolfSSL provides public-key authentication with industry standard bulk encryption in a small package. Please <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a> today for more information.',
    'post_status' => 'publish',
    'post_date' => date('2013-8-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Nasty New Car Attacks, Automobile Hacks',
    'post_content' => 'Carmakers these days are clearly seduced by the power automotive electronics have to help sell their cars.  At wolfSSL, we`re seeing more and more connected auto devices getting designed (and secured by CyaSSL) in recent years.  All of the carmakers and their suppliers we deal with are quite cognizant of the security risks their connected devices pose, and the need for high quality small footprint SSL/TLS and encryption in their cars to battle man in the middle attacks.  That said, given the state of flux of the `connected car`, the inexperience of many automotive electronics engineers with security considerations, hacks will happen.  Today we note a great article on the topic.  <br /><br />Charlie Miller and Chris Valasek will be presenting a fresh round of Automobile Hacks at Defcon next month, and a well written teaser article on their work is available here from Andy Greenberg of Forbes:  <a href="http://www.forbes.com/sites/andygreenberg/2013/07/24/hackers-reveal-nasty-new-car-attacks-with-me-behind-the-wheel-video/">http://www.forbes.com/sites/andygreenberg/2013/07/24/hackers-reveal-nasty-new-car-attacks-with-me-behind-the-wheel-video/</a><br /><br />If you`re at Black Hat or Defcon in the coming weeks, and want to discuss mitigating MITM automotive attacks with SSL, we`ll be available.  We`ve been helping automakers secure their electronics for 8 years now, and can share some of our experiences.  Just flag us down through <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SSL and Cryptography in Software Defined Networks',
    'post_content' => 'Hi!  If you follow the networking market, you probably know that Software Defined Networks (SDN) represent a potential tectonic shift in how we think about and design network environments.  The concept has been around since 2005, but has gained significant momentum in the last couple of years, to the point where it is not just the talk of networking industry insiders, but has reached the mainstream financial press.  For a backgrounder on SDN, see <a href="http://en.wikipedia.org/wiki/Software-defined_networking">http://en.wikipedia.org/wiki/Software-defined_networking</a>.<br /><br />Our interest in SDN at wolfSSL is specific to the security aspects, and even more specifically to the SSL/TLS.  From our vantage point, there are a lot of things to think about, including SDN languages like Frenetic, standards like OpenFlow and vendors like IpInfusion and their ZebOS.  <br /><br />Currently, we believe that hardware cryptography is critical to the successful rollout of SDN, primarily for performance reasons.  As such, we are actively integrating performant support for a variety of hardware crypto solutions.  Recent examples include support for Cavium, AES-NI, STMicroelectronics, and Freescale.  <br /><br />It is still the early days for SDN, so we recognize that there are additional considerations for us beyond just hardware crypto.  We`d like your feedback.  If you have commentary on CyaSSL for SDN, then let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Simon and Speck Lightweight Block Ciphers in wolfCrypt and wolfSSL',
    'post_content' => 'Last month the NSA released a paper on Simon and Speck, which are lightweight block ciphers that appear to be applicable to a large part of our embedded user base.  The paper can be found here:  <a href="http://eprint.iacr.org/2013/404.pdf">http://eprint.iacr.org/2013/404.pdf</a><br /><br />Our users who have a keen interest in small size and low power consumption will find this paper particularly interesting.  <br /><br />We are considering the possibility of implementing Simon and Speck in wolfSSL and WolfCrypt.  Does this sound interesting to you?  If your answer is yes, then let us know your thoughts at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2013 First Half Report',
    'post_content' => 'wolfSSL has made considerable progress in the first half of 2013, including a company name change to wolfSSL,  improvements to the CyaSSL lightweight SSL library, initiation of our FIPS 140-2 certification, and the introduction of our wolfCrypt cryptography library.  Being an open source company, we like to keep our users, customers, and followers up to date on our progress.  As such, we have compiled an overview of wolfSSL`s steady development in the first half of 2013.<br /><br /><b>Business and Company Progress<br /></b><br />- Successfully participated in the following events: CES 2013, RSA USA 2013, DESIGN West 2013, and Interop 2013.  <br />- Name change that better reflects our company and culture.  To us the wolf represents us well as it is a creature that communicates effectively, works well in groups, and shares with the pack.<br />- Added more developers to the team<br />- Increased activity in onsite consulting to help customers design and validate their security architectures<br />- Dramatic increase in design wins for wolfCrypt<br />- Added many more high profile customers<br />- On track to double our business again this year<br />- We continue to actively support the open source community<br /><br /><b>CyaSSL Technical Progress<br /></b><br />- Timely fix for Lucky13 attack<br />- BLAKE2 (SHA-3 candidate) hash function support<br />- Memory/stack tracking with examples<br />- IPv6 example support including link local addresses<br />- Alignment support at the SSL layer for hardware devices that require it<br />- New configure switches per algorithm<br />- Wildcard domain name match check including Subject altnames<br />- Ability to unload certs/keys for lower memory use<br />- SNI (Server Name Indication) support<br />- DTLS 1.2 support including AEAD ciphers<br />- DTLS reliability enhancements<br />- SHA-384 cipher suites<br />- AES-CCM-8 crypto and cipher suites<br />- Camellia crypto and cipher suites<br />- Updated API documentation<br />- Added LeanPSK build option able to get size down to 20k<br /><br /><b>CyaSSL Porting Progress<br /></b><br />- Cavium NITROX support<br />- Updated ThreadX/NetX support<br />- KEIL MDK-ARM project files<br />- Updated Xcode project file<br />- HP/UX support<br />- Microchip PIC32 support<br />- Microchip MPLAB X project files for PIC32 Ethernet Starter Kit<br />- STM32F2 support including hardware crypto and RNG<br /><br /><b>Community<br /></b><br />- Gearman now support CyaSSL<br /><br />Team wolfSSL is looking forward to continued growth and development in the second half of 2013!  Stay tuned to our blog or social media streams to stay up-to-date on new developments.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Feedback Requested on Supported ECC Curves',
    'post_content' => 'The wolfSSL lightweight SSL library has supported ECC (Elliptic curve cryptography) since version 2.4.6 in December of 2012.  Currently wolfSSL supports the most common ECC curve type at each bit strength defined by the standard, including the following.<br /><br /><b>SECP160R1<br />SECP192R1</b>   (also called <b>PRIME192V1</b>)<br /><b>SECP224R1<br />SECP256R1</b>   (also called <b>PRIME256V1</b>)<br /><b>SECP384R1<br />SECP521R1<br /></b><br />wolfSSL defaults to SECP256R1, as is suggested, and as other SSL implementations do. We would like to get our users’ and readers’ feedback on these supported ECC curves.  Are there additional curves you would like to see added to wolfSSL?  If so, please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Some Notes on Testing wolfSSL',
    'post_content' => 'We are often asked about how we test wolfSSL.  At this point, we believe we have testing that is quite robust, but we acknowledge that there is no such thing as perfect testing.  With that knowledge in mind, we have the goal of incrementally improving and automating our testing rigs over time.  Our overriding goal in testing is to have the most advanced and robust and ever improving testing that we can, subject to our resources. <br /><br />We used to think of our testing plans in terms of a hierarchy, but we`ve improved on that thinking over time.  We currently represent our testing as a series of concentric universes, with each successively larger universe being vastly larger and more complex than the smaller one inside of it.  We`ll post some pictures in upcoming blog posts.  For now, here`s a rough representation of our testing universes in order of sequence:  <br /><br />1.  Build options:  We have an extremely large number of build option combinations.  So our most basic test universe is to build successfully with every possible combination of options.<br /><br />2.  API testing:  We test every available call in a particular build.<br /><br />3.  Connection testing and data passing variables:  We start with simple connection tests with limited data transmitted and then gradually dial up complexity.<br /><br />4.  Interop:  We test for interoperability with the other open source TLS implementations, including OpenSSL and GnuTLS.<br /><br />5.  We then connect to unknown servers in the real world.<br /><br />6.  We then build with a series of `real` applications, like cURL, wget, pppd, etc.  For some of our customers with top level support, we build the new release with their application.<br /><br />7.  Finally, we engage in another ever expanding universe of benchmark testing, where we look at sizing, transmission rates, connection speeds, etc.  More to come on that topic, as it is quite popular!<br /><br />Much of our effort is automated by Jenkins (hat tip to that project!).  Thanks for listening.  If you have specific questions about how we test, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Reduce Packet Data Overhead in M2M applications with wolfSSL',
    'post_content' => 'Many of our customers use the wolfSSL lightweight SSL/TLS package in M2M applications where usage is charged based on data transfer.  As such, it becomes important to minimize data transfer rates when running SSL.  Here are a few thoughts on how wolfSSL M2M users can minimize data packet overhead when implementing our embedded SSL:<br /><br />1) Use a stream cipher like RC4, HC-128, or RABBIT.  Stream ciphers don`t require padding, this will save at least half the cipher`s block size per message.<br /><br />2) Use session resumption as much as possible.  TLS session resumption uses less round trips and about 1/3 of the data compared to a full handshake, depending on certificate sizes and the certificate chain length mainly.  wolfSSL now has a built-in client session cache so using session resumption no longer places a burden on the application developer to map remote servers with session instances.<br /><br />3) Only sending the peer certificate instead of certificate chains can greatly reduce the data usage of a full TLS handshake.  This will require the receiver to know about the root CAs and intermediate CAs ahead of time but it can often be worth it.<br /><br />4) Use the shortest MAC you can, but still with good security.  This is probably SHA1 for now.  As more implementations begin to support truncated HMAC you could have the best of both.  SHA-384 for example, but truncated to 10 bytes.<br /><br />5) Group output messages.  wolfSSL has the ability to send each TLS record individually or to send each group as flight.  This is a small savings, mainly in IP/TCP/TLS record headers but it adds up over time.<br /><br />6) Use compression at the TLS level if you`re not doing it at the application level.  No sense in doing it twice though.',
    'post_status' => 'publish',
    'post_date' => date('2013-7-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Maximum Fragment Length with wolfSSL',
    'post_content' => 'Did you like the addition of SNI in the last wolfSSL release? If so, you probably will like the Maximum Fragment Length extension as well!<br /><br />TLS specifies a fixed maximum plaintext fragment length of 2^14 bytes. It may be desirable for constrained clients to negotiate a smaller maximum fragment length due to memory or bandwidth limitations. To enable the usage of Maximum Fragment Length at wolfSSL you can simply do:<br /><br /><b>./configure --enable-maxfragment<br /></b><br />Using Maximum Fragment Length on the client side requires an additional function call, which should be one of the following functions:<br /><br />wolfSSL_CTX_UseMaxFragment()<br />wolfSSL_UseMaxFragment()<br /><br /><b>wolfSSL_CTX_UseMaxFragment()</b> is most recommended when the client would like to contact the same server multiple times with the same configuration. Setting the Maximum Fragment Length extension at context level will enable it in all SSL objects created from that same context from the moment of the call forward. <br /><br /><b>wolfSSL_UseMaxFragment()</b> will enable it for one SSL object only, so it`s recommended to use this function when the maximum possible length between sessions changes.<br /><br />On the server side no call is required. The server will automatically attend to the client`s request for Maximum Fragment Length. It is the client`s responsibility to choose the proper length.<br /><br />Both SNI and Maximum Fragment Length extensions can be enabled with either:<br /><br /><b>./configure --enable-sni --enable-maxfragment<br /></b><br />OR<br /><br /><b>./configure --enable-tlsx<br /></b><br />If you have any questions about using Maximum Fragment Length with TLS please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-6-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Gearman Now Supports wolfSSL',
    'post_content' => 'We would like to announce to our community that Gearman, a framework designed to distribute tasks to multiple machines or processes, now has SSL/TLS support using the wolfSSL lightweight SSL library.<br /><br />From the <a href="http://www.gearman.org/">Gearman site</a>, Gearman “allows you to do work in parallel, to load balance processing, and to call functions between languages. It can be used in a variety of applications, from high-availability web sites to the transport of database replication events. In other words, it is the nervous system for how distributed processing communicates.”<br /><br />If you are interested in using Gearman with wolfSSL, Brian Aker explains how to do so in this Google Groups post:  https://groups.google.com/forum/?fromgroups#!topic/gearman/kHvarqZ6OYk.<br /><br />Gearman: <a href="http://www.gearman.org/">http://www.gearman.org/</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-6-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release 2.7.0 Now Available',
    'post_content' => 'The bi-monthly release of wolfSSL, 2.7.0, is now ready to download from our website.  New features include:<br /><br />- SNI (Server Name Indication) for both the client and server with --enable-sni<br />- KEIL MDK-ARM project files in IDE/MDK-ARM<br />- Domain name match checks now included wildcard and Subject altname checks by default<br />- More consistent error returns across all APIs<br />- Authority Subject ID support for Certificate matching<br />- Persistent session and certificate cache functionality<br />- Client session table lookups at the library level instead of making the application cache the sessions<br />- Camellia support for the SSL sniffer<br />- User controllable settings for DTLS timeout values<br />- DTLS reliability enhancements for the handshake<br />- Better ThreadX support out of the box<br /><br />Please see the README and our <a href="http://yassl.com/yaSSL/Docs.html">on-line documentation</a> for more information or feel free to <a href="http://yassl.com/yaSSL/Contact.html">contact us</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-6-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Born in the USA!',
    'post_content' => 'We receive a lot of questions about the origins of the wolfSSL lightweight SSL library and wolfCrypt software packages.  We get asked where they were developed, and by who?  These questions usually come from US government agencies and their contractors.  Simply stated, mes amis, wolfSSL and wolfCrypt were <a href="http://www.youtube.com/watch?v=tIekamBDiAw">Born in the USA</a> and written by <a href="http://www.youtube.com/watch?v=lMsIrKjSM6Y">US citizens</a>. <br /><br />If you have any additional questions about the origins of wolfSSL or wolfCrypt, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-6-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL at Black Hat USA 2013',
    'post_content' => 'wolfSSL will be exhibiting at the 2013 Black Hat USA conference (#blackhat) in Las Vegas, NV.  The conference will be held on July 27 - August 1, 2013 at Caesars Palace in Las Vegas, NV.  If you’re planning on attending the conference, please plan to stop by the wolfSSL booth (<b>#441</b>) to talk about the CyaSSL embedded SSL library, wolfCrypt embedded crypto engine, SSL inspection, and the yaSSL Embedded Web Server.<br /><br />From the Black Hat website, “The Black Hat Briefings are a series of highly technical information security conferences that bring together thought leaders from all facets of the infosec world - from the corporate and government sectors to academic and even underground researchers. The environment is strictly vendor-neutral and focused on the sharing of practical insights and timely , actionable knowledge.”<br /><br />We’re looking forward to being at the conference!  If you would like to set up a time to visit with us, or have any questions, please email us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-6-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Documentation for using wolfSSL with Keil MDK-ARM',
    'post_content' => 'The wolfSSL lightweight SSL package is used by a healthy chunk of Keil users.  In the interest of better enabling our Keil MDK-ARM users, we`ve added MDK-ARM 4 support and documented it here:  <a href="http://www.yassl.com/yaSSL/cyassl-keil-mdk-arm.html">http://www.yassl.com/yaSSL/cyassl-keil-mdk-arm.html</a>.<br /><br />What`s next?  MDK-ARM 5 support.  MDK-ARM 5 will make setup and integration even easier!  Let us know if you are interested in beta testing wolfSSL with MDK-ARM 5 at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-5-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfCrypt and wolfSSL Separation',
    'post_content' => 'Up to now, wolfCrypt cryptography library users have had to use it as a part of wolfSSL.  We are now embarking on the project to separate the two, and when finished should have a separate wolfCrypt download for our users that only need to use our crypto.  Our goals are to make the separate downloads easy to maintain and easy to set up.  If you are a wolfCrypt user, and have concerns or comments on how we do this, then please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-5-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Server Name Indication (SNI) with wolfSSL',
    'post_content' => 'Have you ever wondered how to use SNI with the wolfSSL embedded SSL library? SNI is useful when a server hosts multiple <br />‘virtual’ servers at a single underlying network address. It may be desirable for clients to provide the name of the server which it is contacting. To enable SNI with wolfSSL you can simply do:<br /><br /><b>./configure --enable-sni<br /></b><br />Using SNI on the client side requires an additional function call, which should be one of the following functions:<br /><br /><b>wolfSSL_CTX_UseSNI()<br />wolfSSL_UseSNI()<br /></b><br /><b>wolfSSL_CTX_UseSNI()</b> is most recommended when the client contacts the same server multiple times. Setting the SNI extension at the context level will enable the SNI usage in all SSL objects created from that same context from the moment of the call forward. <br /><br /><b>wolfSSL_UseSNI()</b> will enable SNI usage for one SSL object only, so it is recommended to use this function when the server name changes between sessions.<br /><br />On the server side one of the same function calls is required. Since the wolfSSL server doesn`t host multiple `virtual` servers, the SNI usage is useful when the termination of the connection is desired in the case of SNI mismatch. In this scenario, wolfSSL_CTX_UseSNI() will be more efficient, as the server will set it only once per context creating all subsequent SSL objects with SNI from that same context. <br /><br />If you have any questions about using SNI with TLS please let us know at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-5-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Support for Microchip TCP/IP Version 6',
    'post_content' => 'Are you interested in using the wolfSSL lightweight SSL/TLS library with version 6 of the Microchip TCP/IP stack?  If so, you’re in luck!  We recently added support for version 6 to wolfSSL.  Now wolfSSL supports running on top of either version 5 or version 6 of the stack.<br /><br />We have updated not only our library source code, but also our example PIC32 SSL client and server.  You can find more details on our PIC32-specific webpage, here: <a href="http://yassl.com/yaSSL/cyassl-pic32.html">http://yassl.com/yaSSL/cyassl-pic32.html</a>.<br /><br />To download the latest version of wolfSSL with support for Microchip TCP/IP version 6, please see our GitHub repository (<a href="https://github.com/cyassl/cyassl">https://github.com/cyassl/cyassl</a>).  Support will also roll into our next stable release of wolfSSL in June.<br /><br />wolfSSL Product Page:  <a href="http://yassl.com/yaSSL/Products-cyassl.html">http://yassl.com/yaSSL/Products-cyassl.html</a><br />Microchip TCP/IP Stack:  <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=2505&param=en535724">http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=2505&param=en535724</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-5-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL for Bare Metal and No OS Environments',
    'post_content' => 'Are you looking for an SSL/TLS library which will seamlessly integrate into your bare metal or No-OS environment?  If so, continue reading to learn why the wolfSSL lightweight SSL library is a perfect fit for such environments.<br /><br />wolfSSL has been designed with portability and ease of use in mind, allowing developers to easily integrate it into a bare metal or operating systemless environment.  As a large percentage of wolfSSL users are running the library on small, embedded devices, we have added several abstraction layers which make tying wolfSSL into these types of environments an easy task.<br /><br />Available abstraction layers include:<br />	+	Custom Input/Output<br />	+	Standard C library / Memory<br />	+	File system (Able to use cert/key buffers instead)<br />	+	Threading<br />	+	Operating System<br /><br />In addition to abstraction layers, we have tried to keep wolfSSL’s memory usage as low as possible.  Build sizes for a complete SSL/TLS stack range from 20-100kB depending on build options, with RAM usage between 1-36kB per connection.<br /><br />To learn more about how to integrate wolfSSL into your environment or get more information about reducing wolfSSL’s memory usage, please see the <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a> or <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a> directly.<br />',
    'post_status' => 'publish',
    'post_date' => date('2013-5-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SSL Through and Through',
    'post_content' => 'At wolfSSL we`ve been focusing on SSL/TLS/DTLS technology for 9 years.  We believe that`s important, and if you`re looking for an SSL provider for licenses, support, or custom consulting that may be important to you as well.  Some of our competitors have gone out of business, been sold to larger companies focused on other technologies, or have started on new technologies themselves.  For us, having a day to day primary interest in SSL is beneficial in providing a highly portable, lightweight, fast, up to date, scaleable, full featured solution.  If you`re looking at SSL solutions, we`d love to hear what`s important to you in a provider; we believe our focus on SSL will prove to be a good match for your requirements.',
    'post_status' => 'publish',
    'post_date' => date('2013-5-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL adds support for ARM`s Keil MDK-ARM and RTX',
    'post_content' => 'In an effort to ensure that the wolfSSL lightweight SSL library operates seamlessly with the Keil tools, we have recently added MDK-ARM 4 project files to our package.  Additionally, we have added support for Keil RTX.  Information on MDK-ARM 4 can be found here:  <a href="http://www.keil.com/arm/mdk.asp">http://www.keil.com/arm/mdk.asp</a>.  Information on RTX can be found here: <a href="http://www.keil.com/rl-arm/kernel.asp">http://www.keil.com/rl-arm/kernel.asp</a>.  Support is currently in beta.  Let us know if you would like to check it out by contacting us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />We will also be adding support for Keil MDK-ARM 5, when it comes out of beta.',
    'post_status' => 'publish',
    'post_date' => date('2013-5-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL will be Exhibiting at Interop 2013',
    'post_content' => 'wolfSSL will be exhibiting at the 2013 Interop conference in Las Vegas next week.  Interop brings together over ten thousand IT professionals for five days to provide training and education as well as providing an excellent networking opportunity.  The Interop Expo consists of over 350 exhibitors covering a wide range of products and solutions.  Interop has a 26 year history in the US and has expanded beyond its beginnings in network infrastructure to encompass a broad range of technologies including Cloud, Virtualization, Data Centers, Wireless & Mobility, and Information Security.<br /><br />wolfSSL will be exhibiting in booth #460, talking about the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">CyaSSL Embedded SSL Library</a>, <a href="perma://BLPageReference/29F5E419-67E5-4E39-808F-E1D6805FD680">wolfCrypt Embedded Crypto Engine</a>, <a href="perma://BLPageReference/71A1A7A1-5192-4F85-A8DB-E6F4B2B7DC3D">yaSSL Embedded Web Server</a>, and SSL Inspection.  If you have questions, are curious about our products, or would just like to chat about open source software, feel free to stop by!<br /><br />Interop will be held at the Mandalay Bay Convention Center in Las Vegas, NV - from May 7th through the 9th.  For more information about the conference, please visit the official site: <a href="http://www.interop.com/lasvegas/">http://www.interop.com/lasvegas/</a>.<br /><br />To schedule a meeting with wolfSSL during Interop, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-5-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Visit wolfSSL at DESIGN West 2013 this week',
    'post_content' => 'wolfSSL is exhibiting at DESIGN West 2013 this week in San Jose, CA.  From the DESIGN West site, “DESIGN West is the world`s only technical conference and expo for electronics design engineers, entrepreneurs, and technology professionals who create products with electronic content. Held in the heart of Silicon Valley, it is where the world`s top design engineers and product developers gather and learn, gain inspiration, and get practical information and hands-on training they can put to immediate use.”<br /><br />If you’re planning on attending, please stop by the wolfSSL booth (<b>Booth 1241</b>) to discuss the CyaSSL embedded SSL library, wolfCrypt embedded crypto engine, and yaSSL Embedded Web Server.  If you have any questions, or would like to set up a meeting with us at the conference, please let us know by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We look forward to seeing you there!<br /><br />DESIGN West 2013:  <a href="http://www.ubmdesign.com/">http://www.ubmdesign.com</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2013-4-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Looking for an IPv6 Compatible SSL Stack?',
    'post_content' => 'Many developers are now starting to think about IPv6 and what implications this will have on existing and future projects.  IPv6 is becoming increasingly widespread and adoption will further continue to increase into the future.  <br /><br />As a developer, project manager, or curious individual, you may be faced with finding an SSL library which is compatible with IPv6.  If so, rest assured!  The wolfSSL embedded SSL library is compatible with both IPv4 and IPv6!  The library itself has been designed to be IP neutral and work with either protocol version.  In addition, we provide an easy-to-use build option to IPv6-enable our example applications for testing purposes.<br /><br />To turn on IPv6 support when compiling wolfSSL and our example applications, use the “--enable-ipv6” build option:<br /><br /><b>./configure --enable-ipv6<br /></b><br />Addresses beginning with fe80:: are link-local only.  These addresses require an interface or scopeid suffix.  For example, if ifconfig shows something similar to this:<br /><br /><b>inet6 fe80::62c5:47ff:fe97:ac2c%en1 prefixlen 64 scopeid 0x6<br /></b><br />You could ping this address by doing either:<br /><br /><b>ping6 -I en1 fe80::62c5:47ff:fe97:ac2c<br /></b><br />or <br /><br /><b>ping6 fe80::62c5:47ff:fe97:ac2c%en1<br /></b><br />To start the wolfSSL example server using IPv6, remember to use the “-b” option to bind the server to any interface (unless localhost only is desired):<br /><br /><b>./examples/server/server -b<br /></b><br />If an example wolfSSL example server was running on another link-local host (started with the “-b” option), a wolfSSL client could connect to it by doing something similar to:<br /><br /><b>./examples/client/client -h fe80::20c:29ff:fedc:e701%en1<br /></b><br />Curious about how widespread IPv6 currently is?  Google currently tracks IPv6 adoption here:  <a href="http://www.google.com/ipv6/statistics.html">http://www.google.com/ipv6/statistics.html</a>, and you can see how many IPv6 hits/second Akamai is getting here: <a href="http://www.akamai.com/ipv6">http://www.akamai.com/ipv6</a>.<br /><br />If you have any questions about how to use wolfSSL with IPv6, or general questions about using wolfSSL embedded SSL or CTaoCrypt in areas such as the Internet of Things, smart energy, home automation, M2M communication, or cloud services, please get in touch with us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-4-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Tax Day Release of wolfSSL 2.6.0',
    'post_content' => 'Sick of all the tax day giveaways that you don`t really need, or worse, have to wait in line for?  How about a no wait release of CyaSSL 2.6.0 instead?  New features include:<br /><br />- DTLS 1.2 featuring AEAD ciphers.  We`re excited about this feature and welcome any feedback.<br /><br />-SHA-3 finalist Blake is now supported.  Blake2b is extremely fast and uses very little resources, so we like it a lot.<br /><br />- Support for SHA-384 cipher suites including ECC ones is included as well.  And if you ever need to do HMAC with SHA-512 that`s now supported as well.<br /><br />- The example client/server can now track memory and stack use with -t and --enable-stacksize respectively.<br /><br />- IPv6 examples/tests now allow link-local with scopeid resolution and full ipv6 addresses instead of defaulting to localhost.  As before, use --enable-ipv6 to turn on IPv6 in the examples and don`t forget -b on the server to bind to any interface.<br /><br />- CYASSL_GENERAL_ALIGNMENT manipulates the SSL input/output buffers to align crypto access for easier integration with hardware support.  SSL itself isn`t very friendly to alignment with 5 byte TLS headers and 13 byte DTLS buffers, but we think we have a good solution for this.<br /><br />- Many new ./configure options including disable/enable for rsa, dh, dsa, md5, sha, arc4, null (ciphers), oldtls, and asn (no certs or public keys allowed).  ./configure options are all lowercase now for better consistency.  A cyassl/options.h header is also now generated during the ./configure process that allows a user to easily use the same settings/flags that cyassl itself was built with.<br /><br />Please see the README and our <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">on-line documentation</a> for more information or feel free to <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a>.<br /><br />Happy Tax Day,<br />Team wolfSSL',
    'post_status' => 'publish',
    'post_date' => date('2013-4-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Is TLS False Start going to take off?',
    'post_content' => 'TLS requires both end points to have received and processed their peer`s Change Cipher Spec and Finished messages before starting to transfer their bulk encrypted data. It needs the Finished message to validate its peer`s identify. To save one round-trip time, an endpoint after having sent its Finished message could start sending its encrypted data using that cipher specification.<br /><br />wolfSSL currently does not directly support <a href="https://technotes.googlecode.com/git/falsestart.html">TLS False Start</a>, but it is tolerant of a peer sending its data immediately after sending its Finished message. It just will not send encrypted data to its peer until it has completed its handshake.<br /><br />Do you need wolfSSL to handle TLS False Start? Contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-4-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'CTaoCrypt will be changing to wolfCrypt',
    'post_content' => 'We would like to give our users an early heads up that our cryptography library, CTaoCrypt will soon be changing names to wolfCrypt.  With the name change, there may be some changes to the existing crypto API.  You’ll also begin to see changes in our documentation and website.<br /><br />If you have any questions about the conversion, please feel free to contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.<br /><br />Thanks,<br />- Team wolfSSL',
    'post_status' => 'publish',
    'post_date' => date('2013-4-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL adds support for SHA-3 finalist BLAKE',
    'post_content' => 'wolfSSL now supports BLAKE2b hashes at the cryptographic level.  Support for digest sizes from 256bits - 512 bits is included.  BLAKE was one of 5 finalists for the NIST hash competition to pick SHA-3.  BLAKE2 is an improved version that simplifies software implementations and has great speed while consuming little resources, a perfect fit for our philosophy.  BLAKE2b is the version that supports 256bit-512bit digests and is actually faster in software than MD5.  We`ve seen over 4 Gbps per core in our testing!  To try it out grab our latest branch at <a href="https://github.com/cyassl/cyassl">github</a> and --enable-blake2 on the ./configure line.  It will be included in our next major release as well.<br /><br />wolfSSL GitHub Repo:  <a href="https://github.com/cyassl/cyassl">https://github.com/cyassl/cyassl</a><br />BLAKE2 Website: <a href="https://blake2.net/">https://blake2.net/</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-3-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'DTLSv1.2 Now Available in wolfSSL',
    'post_content' => 'We have added DTLSv1.2 to wolfSSL. The latest sources are available in our <a href="https://github.com/cyassl/cyassl">GitHub repository</a>. To enable DTLSv1.2 in wolfSSL, configure the build with the option “<b>--enable-dtls</b>”. We are very excited to offer this new protocol. If you are interested in discussing the cipher suites available for DTLSv1.2, please contact us at <a href="mailto:info@wolfssl.com">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-3-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Lucky Thirteen Overview Article',
    'post_content' => 'Here`s another good article on the Lucky Thirteen breach quoting SSL researcher Ivan Ristic:  <a href="http://www.computerworlduk.com/news/security/3424689/new-attack-techniques-against-ssl-revealed/">http://www.computerworlduk.com/news/security/3424689/new-attack-techniques-against-ssl-revealed/</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-2-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL, provider of CyaSSL Embedded SSL, releases first embedded TLS and DTLS protocol fix for Lucky Thirteen Attack',
    'post_content' => 'Researchers have found a new a new attack vector for TLS 1.1 and 1.2 protocol implementations, which wolfSSL has promptly fixed in its leading embedded TLS product.<br /><br />In the paper "Lucky Thirteen: Breaking the TLS and DTLS Record Protocols" authors Nadhem AlFardan and Kenneth Paterson present a family of attacks that apply to CBC-mode for TLS (1.1 and 1.2) and DTLS (1.0 and 1.2). All of the attacks are based on a delicate timing analysis of the decryption processing needed in block mode. The various attacks are distinguishing, partial plaintext recovery, and full plaintext recovery in nature. All the attacks exploit the protocol when badly formatted padding is handled during processing. A MAC verification must still be performed on something to prevent existing timing attacks. The RFCs suggest using a zero-length pad which was thought to be safe, but these attacks show that it can be exploited.<br /><br />There are a few ways to avoid the attack. Using stream ciphers is the simplest. Stream ciphers like ARC4, HC- 128, and RABBIT are not vulnerable because they don`t use block mode and padding. HC-128 and RABBIT are unique to wolfSSL and also have the benefit of being extremely fast. Another way is to use Authenticated Encryption like AES-GCM and AES-CCM instead of block mode with CBC. wolfSSL includes several cipher suites utilizing Authenticated Encryption algorithms. Lastly, wolfSSL implemented the countermeasures suggested in the paper in version 2.5.0 to avoid timing attacks.<br /><br />Founded in 2004, wolfSSL offers open-source, embedded security solutions that are fast, small, portable and standard compliant including CyaSSL, the C-language SSL library for embedded and RTOS environments; yaSSL, the embedded C++ SSL library; and yaSSL Embedded Web Server, a fast, embeddable, secure web server. Dual licensed, wolfSSL caters to the security applications in industrial automation, smart energy, surveillance, medical, military, telecommunications markets and the open-source community. Distributed worldwide, wolfSSL is headquartered in Bozeman, Montana.',
    'post_status' => 'publish',
    'post_date' => date('2013-2-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.5.0 is Now Available',
    'post_content' => 'Release 2.5.0 of the wolfSSL lightweight SSL/TLS library has been released and is now <b><a href="http://yassl.com/yaSSL/download/downloadForm.php">available for download</a></b>.  This release has bug fixes and new features including:<br /><br />- Fix for TLS CBC padding timing attack identified by Nadhem Alfardan and Kenny Paterson: <a href="http://www.isg.rhul.ac.uk/tls/">http://www.isg.rhul.ac.uk/tls/</a><br />- Microchip PIC32 (MIPS16, MIPS32) support<br />- Microchip MPLAB X example projects for PIC32 Ethernet Starter Kit<br />- Updated CTaoCrypt benchmark app for embedded systems<br />- 1024-bit test certs/keys and cert/key buffers<br />- AES-CCM-8 crypto and cipher suites<br />- Camellia crypto and cipher suites<br />- Bumped minimum autoconf version to 2.65, automake version to 1.12<br />- Addition of OCSP callbacks<br />- STM32F2 support with hardware crypto and RNG <br />- Cavium NITROX support<br /><br />CTaoCrypt now has support for the <a href="http://www.microchip.com/pagehandler/en-us/family/32bit/">Microchip PIC32</a> and has been tested with the <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=2615&dDocName=en545713">Microchip PIC32 Ethernet Starter Kit</a>, the <a href="http://www.microchip.com/pagehandler/en_us/devtools/mplabxc/">XC32 compiler</a> and <a href="http://www.microchip.com/pagehandler/en-us/family/mplabx/">MPLAB X IDE</a> in both MIPS16 and MIPS32 instruction set modes. See the README located under the <cyassl_root>/mplabx directory for more details.<br /><br />To add <a href="http://www.cavium.com/processor_security.html">Cavium NITROX</a> support do:<br /><br />./configure --with-cavium=/home/user/cavium/software<br /><br />pointing to your licensed cavium/software directory.  Since Cavium doesn`t build a library we pull in the cavium_common.o file which gives a libtool warning about the portability of this.  Also, if you`re using the github source tree you`ll need to remove the -Wredundant-decls warning from the generated Makefile because the cavium headers don`t conform to this warning.  Currently wolfSSL supports Cavium RNG, AES, 3DES, RC4, HMAC, and RSA directly at the crypto layer.  Support at the SSL level is parital and currently just does AES, 3DES, and RC4.  RSA and HMAC are slower until the Cavium calls can be utilized in non blocking mode.  The example client turns on cavium support as does the crypto test and benchmark.  Please see the HAVE_CAVIUM define.<br /><br />wolfSSL is able to use the <a href="http://www.st.com/internet/mcu/subclass/1520.jsp">STM32F2</a> or <a href="http://www.st.com/internet/mcu/subclass/1521.jsp">STM32F4</a> hardware-based cryptography and random number generator through the STM32F2 Standard Peripheral Library. For necessary defines, see the CYASSL_STM32F2 define in settings.h. Documentation for the STM32F2 Standard Peripheral Library can be found in the following document: <br /><a href="http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/USER_MANUAL/DM00023896.pdf">http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/USER_MANUAL/DM00023896.pdf</a><br /><br />The wolfSSL manual is available <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">online</a> or in <a href="http://www.yassl.com/documentation/wolfSSL-Manual.pdf">PDF format</a>.  For build instructions and comments about the new features please check the manual.  If you have any question, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-2-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Passes to visit yaSSL at RSA 2013',
    'post_content' => 'We have expo passes available for RSA, coming up on the 26th of February at Moscone Center in San Francisco.  If you would like a pass code, then just email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL in other Open Source Projects',
    'post_content' => 'Hi!  If you are a long time user of wolfSSL, then you probably know that we actively engage the open source community.  Our intention is to create more and better open source software for all to use and enjoy.  <br /><br />What you may not know about is one of our key business policies, which is to provide free support to open source projects that consume our products.  So if you are building open source stuff, you are more than welcome to engage our support team for help.  The best way to do that is through our support forums.  However, if you have an issue that is sensitive, then you are welcome to email us at <a href="mailto:support@yassl.com">support@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Camellia Cipher Now Available in wolfSSL',
    'post_content' => 'We have added the <a href="http://en.wikipedia.org/wiki/Camellia_(cipher)">Camellia-CBC cipher</a> to CTaoCrypt and wolfSSL. The following cipher suites are available for TLS:<br /><br />	•	TLS_RSA_WITH_CAMELLIA_128_CBC_SHA<br />	•	TLS_RSA_WITH_CAMELLIA_256_CBC_SHA<br />	•	TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256<br />	•	TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256<br />	•	TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA<br />	•	TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA<br />	•	TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256<br />	•	TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256<br /><br />Camllia-CBC will be available in our next release. The latest sources are available in our <a href="https://github.com/cyassl/cyassl">GitHub repository</a>. To enable Camellia-CBC in wolfSSL, configure the build with the option “--enable-camellia”. We are very excited to offer this new cipher. If you are interested in other Camellia cipher suites, including any ECC cipher suites, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Pre-Shared Keys (PSK) with wolfSSL',
    'post_content' => 'Ever wondered how to use PSK with the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">embedded wolfSSL library</a>?  PSK is useful in resource constrained devices where public key operations may not be viable.  It`s also helpful in closed networks where a Certificate Authority structure isn`t in place.  To enable PSK with wolfSSL you can simply do:<br /><br />./configure --enable-psk<br /><br />Using PSK on the client side requires one additional function call:<br /><br />wolfSSL_CTX_set_psk_client_callback()<br /><br />There`s an example client callback in cyassl/test.h called my_psk_client_cb().  The example sets the client identity which is helpful for the server if there are multiple clients with unique keys and is limited to 128 bytes.  It could also examine the server identity hint in case the client is talking to multiple servers with unique keys.  Then the pre-shared key is returned to the caller, here that is simply 0x1a2b3c4d, but it could be any key up to 64 bytes in length (512 bits).<br /><br />On the server side two additional calls are required:<br /><br />wolfSSL_CTX_set_psk_server_callback()<br />wolfSSL_CTX_use_psk_identity_hint()<br /><br />The server stores it`s identity hint to help the client with the 2nd call, in our server example that`s "cyassl server".  An example server psk callback can also be found in my_psk_server_cb() in cyassl/test.h.  It verifies the client identity and then returns the key to the caller, which is again 0x1a2b3c4d, but could be any key up to 64 bytes in length.  If you have any questions about using PSK with TLS please let us know.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Updated API Documentation',
    'post_content' => 'We want to let our users and followers know that we recently updated the API documentation for the wolfSSL embedded SSL library.  With this update, all functions in the standard wolfSSL build (98) are now documented plus an additional 19 related to various defines related to DTLS, Callbacks, DER-specific, NTRU or OpenSSL extra functions.<br /><br />You can find the updated API documentation online in Chapter 17 of the wolfSSL Manual, here:<br /><br /><a href="http://yassl.com/yaSSL/Docs-cyassl-manual-17-cyassl-api-reference.html">http://yassl.com/yaSSL/Docs-cyassl-manual-17-cyassl-api-reference.html</a><br /><br />If you have any questions, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Visit the Leading Lightweight SSL Provider at RSA',
    'post_content' => 'We will be exhibiting at RSA again this year.  Please visit us at booth 755.  We will be talking about our latest releases of wolfSSL embedded SSL, Suite B, Fips 140-2, and answering specific questions for our users.  We will be fully staffed with engineering resources at the show, so bring us your most challenging questions!<br /><br />If you would like to set aside a specific time to chat, then please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Now Supports AES with CCM-8',
    'post_content' => 'We have added the <a href="http://en.wikipedia.org/wiki/CCM_mode">Counter with CBC-MAC Mode</a> with 8‑byte authentication (CCM-8) for AES to wolfSSL. The following cipher suites are available for TLS v1.2:<br /><br />	•	TLS_RSA_WITH_AES_256_CCM_8_SHA384<br />	•	TLS_RSA_WITH_AES_128_CCM_8_SHA256<br /><br />AES with CCM-8 will be available in our next release. The latest sources are available in our <a href="https://github.com/cyassl/cyassl">GitHub repository</a>. To enable AES with CCM-8 in wolfSSL, configure the build with the option “‑‑enable‑aesccm”. We are very excited to offer this new cipher. If you are interested in other AES-CCM-8 cipher suites, including any ECC cipher suites, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Getting started with wolfSSL`s ECC',
    'post_content' => 'Release 2.4.6 of wolfSSL is the first to include our ECC implementation publicly.  Let`s look at how to get started using the ECC features.  First, you`ll need to turn on ECC.  With the autoconf system this is simply a configure flag:<br /><br />./configure --enable-ecc<br />make<br />make check<br /><br />Note the 96 different TLS cipher suites that make check verifies.  You can easily use any of these tests individually, e.g., to try ECDH-ECDSA with AES256-SHA you can start our example server like this:<br /><br />./examples/server/server -d -l ECDH-ECDSA-AES256-SHA -c ./certs/server-ecc.pem -k ./certs/ecc-key.pem<br /><br />-d disables client cert check while -l specifies the cipher suite list.  -c is the certificate to use and -k is the corresponding private key to use.  To have the client connect try:<br /><br />./examples/client/client -A ./certs/server-ecc.pem<br /><br />where -A is the CA certificate to use to verify the server.  To have an OpenSSL client connect the wolfSSL server you could do:<br /><br />openssl s_client -connect localhost:11111<br /><br />since wolfSSL uses the port 11111 by default, though this can be changed with the port option -p.  To allow the server to bind to any interface instead of the default localhost use the -b option.  A full list of options can be seen with -?.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Intro to PKCS #3: Diffie-Hellman Key Agreement Standard',
    'post_content' => 'A while back, we <a href="perma://BLPageReference/045B3B22-2B81-4AE6-A1A7-23B64BE17F56">started a series</a> on the PKCS standards.  Our <a href="perma://BLPageReference/3AF2516C-FFF1-4706-BF7E-C4B46A7EBF9B">first post</a> was about PKCS #1, the RSA Cryptography Standard.  This is the second post in the PKCS standards series, introducing PKCS #3 - the Diffie-Hellman Key Agreement Standard.<br /><br />PKCS #3 is the Diffie-Hellman Key Agreement Standard and is currently defined by version 1.4 of the specification, located here: <a href="http://www.rsa.com/rsalabs/node.asp?id=2126">http://www.rsa.com/rsalabs/node.asp?id=2126</a>.  It defines a standard enabling two parties to agree on a secret key known only to them (without having prior arrangements).  This is done in such a way that even if an eavesdropper is listening to the communication channel on which the key agreement took place, the eavesdropper will not be able to obtain the secret key.  After the secret key has been agreed upon by the two involved parties, it may be used in a subsequent operation - such as encrypting further communications between the two parties.<br /><br />The specification itself defines standards for parameter generation, Phase 1 and 2 of the key agreement, and the object identifier to be used.<br /><br /><b>	A.	 Parameter Generation<br /></b><br />As stated in the specification, “a central authority shall generate Diffie-Hellman parameters, and the two phases of key agreement shall be performed with these parameters.”  This central authority will generate several parameters including an odd prime (p) and an integer (g), where the base satisfies 0 < g < p.  It may also optionally select an integer (l) which is the private-value length in bits and which satisfies 2^(l-1) <= p.<br /><br /><b>	A.	 Phase 1<br /></b><br />This section of the specification describes the first (of two) phases of the Diffie-Hellman key agreement and contains three steps, namely:<br /><br />	-	private-value generation<br />	-	exponentiation<br />	-	integer-to-octet-string conversion<br /><br />As stated by the specification, “the input to the first phase shall be the Diffie-Hellman parameters.  The output from the first phase shall be an octet string PV, the public value; and an integer x, the private value.”  Each party of the key agreement will perform Phase 1 independently of the other party.<br /><br /><b>	I.	 Phase 2<br /></b><br />This section of the specification describes the second phase of the Diffie-Hellman key agreement and contains three steps as well, namely:<br /><br />	-	octet-string-to-integer conversion<br />	-	exponentiation<br />	-	integer-to-octet-string conversion<br /><br />As stated by the specification, “the input to the second phase shall be the Diffie-Hellman parameters; an octet string PV’, the other entity’s public value; and the private value x.  The output from the second phase shall be an octet string SK, the agreed-upon secret key.”  As the first step, this step is performed by each party independently as well (but after they have exchanged public values from the Phase 1).<br /><br /><b>	I.	 Object Identifier<br /></b><br />The last item defined in PKCS #3 are two object identifiers to be used with Diffie-Hellman key agreement, pkcs-3 and dhKeyAgreement.  The pkcs-3 OID identifies Diffie-Hellman key agreement and is specified as:<br /><br />pkcs-3 OBJECT IDENTIFIER ::=  { iso(1)  member-body(2)  US(840)  rsadsi(113549)  pkcs(1)  3 }<br /><br />The second OID, dhKeyAgreement, identifies the PKCS #3 key agreement method.<br /><br />To learn more about PKCS #3, you can look through the specification, here:<br /><br /><a href="http://www.rsa.com/rsalabs/node.asp?id=2126">http://www.rsa.com/rsalabs/node.asp?id=2126</a><br /><br />To learn more about the wolfSSL embedded SSL library, you can download a free GPLv2-licensed copy from the yaSSL download page, <a href="http://yassl.com/yaSSL/download/downloadForm.php">http://yassl.com/yaSSL/download/downloadForm.php</a>, or look through the wolfSSL Manual, <a href="http://www.yassl.com/yaSSL/Docs-cyassl-manual-toc.html">http://www.yassl.com/yaSSL/Docs-cyassl-manual-toc.html</a>.  If you have any additional questions, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2013-1-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Linux Journal - Elliptic Curve Cryptography',
    'post_content' => 'If you are a reader of Linux Journal (<a href="http://www.linuxjournal.com/">http://www.linuxjournal.com/</a>), you may have seen the interesting article in this month’s issue about Elliptic Curve Cryptography written by Joe Hendrix:<br /><br /><a href="http://www.linuxjournal.com/content/january-2013-issue-linux-journal-security">http://www.linuxjournal.com/content/january-2013-issue-linux-journal-security</a><br /><br />In the article, Joe explains how ECC works (with several descriptive charts), talks about how NIST makes recommendations on the actual security provided by different algorithms with varying bit strengths, and shows readers how to use ECC in the popular OpenSSH application.  We enjoyed reading through it.<br /><br />Beginning with the 2.4.6 release of the wolfSSL embedded SSL library, wolfSSL now has support for ECC cipher suites as well.  We have had ECC support internally for quite some time, but have now made it available to our open source user base.<br /><br />wolfSSL’s open source ECC implementation can be found in the <b><cyassl_root>/cyassl/ctaocrypt/ecc.h</b> header file and the <b><cyassl_root>/ctaocrypt/src/ecc.c</b> source file.  Supported ECC cipher suites include:<br /><br /><b>/* ECDHE suites */<br /></b>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA<br />TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA<br />TLS_ECDHE_RSA_WITH_RC4_128_SHA<br />TLS_ECDHE_ECDSA_WITH_RC4_128_SHA<br />TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA<br /><br /><b>/* ECDH suites */<br /></b>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA<br />TLS_ECDH_RSA_WITH_AES_128_CBC_SHA<br />TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA<br />TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA<br />TLS_ECDH_RSA_WITH_RC4_128_SHA<br />TLS_ECDH_ECDSA_WITH_RC4_128_SHA<br />TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA<br />TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA<br /><br /><b>/* AES-GCM suites */<br /></b>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384<br /><br />You can download a GPLv2-licensed copy of <a href="http://www.yassl.com/yaSSL/Products-cyassl.html">wolfSSL</a> from our download page (<a href="http://yassl.com/yaSSL/download/downloadForm.php">http://yassl.com/yaSSL/download/downloadForm.php</a>).  If you have any questions or would like more information about our ECC implementation or the wolfSSL lightweight SSL library, feel free to let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.  We always enjoy hearing from our users!',
    'post_status' => 'publish',
    'post_date' => date('2013-1-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Attending CES 2013',
    'post_content' => 'yaSSL will be attending 2013 Consumer Electronics Show (CES) next week.  With the first conference taking place in 1967, the International Consumer Electronics Show (CES) is now the world’s largest consumer technology tradeshow.  With over 150,000 industry professionals in attendance and over 3,000 exhibitors, thousands of new products are launched at CES each year.<br /><br />CES 2013 will be held at the LVCC/Las Vegas Hilton and The Venetian in Las Vegas, January 8-11 (Tuesday - Friday), 2013.<br /><br />If you are planning on attending the International CES this year and would like to visit or meet, please let us know!  We’ll be talking about the wolfSSL embedded SSL library and yaSSL Embedded Web Server and how these products can be used to secure products or applications with SSL/TLS.  If you would like to set up a meeting, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />2013 International CES:  <a href="http://www.cesweb.org/">http://www.cesweb.org</a>',
    'post_status' => 'publish',
    'post_date' => date('2013-1-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'STM32 and wolfSSL - Hardware Crypto and RNG Support',
    'post_content' => 'We would like to announce that the wolfSSL embedded SSL library now has support for hardware-based cryptography and random number generation offered by the STM32F2.  Supported cryptographic algorithms include AES (CBC, CTR), DES (ECB, CBC), 3DES, MD5, and SHA1.  For details regarding the STM32F2 crypto and hash processors, please see the STM32F2xx Standard Peripheral Library document (linked below).  <br /><br />If you are using the STM32F2 with wolfSSL, you can see substantial speed improvements when using the hardware crypto versus using wolfSSL’s software crypto implementation.  The following benchmarks were gathered from the CTaoCrypt benchmark application (ctaocrypt/benchmark/benchmark.c) running on the STM3221G-EVAL board (STM32F2) using the STM32F2 Standard Peripheral Library and FreeRTOS.<br /><br /><b>wolfSSL Software Crypto, Normal Big Integer Math Library<br /></b><br />AES        1024 kB took 0.822 seconds,   1.22 MB/s<br />ARC4     1024 KB took 0.219 seconds,   4.57 MB/s<br />DES       1024 KB took 1.513 seconds,   0.66 MB/s<br />3DES     1024 KB took 3.986 seconds,   0.25 MB/s<br /><br />MD5          1024 KB took 0.119 seconds,   8.40 MB/s<br />SHA          1024 KB took 0.279 seconds,   3.58 MB/s<br />SHA-256  1024 KB took 0.690 seconds,   1.45 MB/s<br /><br />RSA 2048 encryption took 111.17 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took 1204.77 milliseconds, avg over 100 iterations<br />DH  2048 key generation   467.90 milliseconds, avg over 100 iterations<br />DH  2048 key agreement   538.94 milliseconds, avg over 100 iterations<br /><br /><b>STM32F2 Hardware Crypto, Normal Big Integer Math Library<br /></b><br />AES        1024 kB took 0.105 seconds,   9.52 MB/s<br />ARC4     1024 KB took 0.219 seconds,   4.57 MB/s<br />DES       1024 KB took 0.125 seconds,   8.00 MB/s<br />3DES     1024 KB took 0.141 seconds,   7.09 MB/s<br /><br />MD5           1024 KB took 0.045 seconds,  22.22 MB/s<br />SHA           1024 KB took 0.047 seconds,  21.28 MB/s<br />SHA-256  1024 KB took 0.690 seconds,   1.45 MB/s<br /><br />RSA 2048 encryption took 111.09 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took 1204.88 milliseconds, avg over 100 iterations<br />DH  2048 key generation  467.56 milliseconds, avg over 100 iterations<br />DH  2048 key agreement   542.11 milliseconds, avg over 100 iterations<br /><br />As the above benchmarks (and chart) show, the hardware-based algorithms on the STM32 demonstrate significantly faster speeds than that of their software counterparts.<br /><br />To enable STM32 hardware crypto and RNG support, define STM32F2_CRYPTO and STM32F2_RNG when building wolfSSL.  For a more complete list of defines which may be required, please see the WOLFSSL_STM32F2 define in <wolfssl_root>/wolfssl/wolfcrypt/settings.h.  You can find the most recent version of wolfSSL on GitHub, here: <a href="https://github.com/wolfssl/wolfssl">https://github.com/wolfssl/wolfssl</a>.<br /><br />If you would like to use wolfSSL with STM32 hardware-based cryptography or RNG, or have any questions, please contact us at <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a> for more information.<br /><br /><a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL library</a><br />STM32: <a href="http://www.st.com/internet/mcu/class/1734.jsp">http://www.st.com/internet/mcu/class/1734.jsp</a><br />STM32F2 Standard Peripheral Library documentation: <a href="http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/USER_MANUAL/DM00023896.pdf">http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/USER_MANUAL/DM00023896.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-12-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.4.6 is Now Available',
    'post_content' => 'Version 2.4.6 of the wolfSSL embedded SSL/TLS library has been released and is now available for download.  This release contains bug fixes and has a few new features including:<br /><br />- ECC into main (GPLv2) version<br />- Lean PSK build (reduced code size, RAM usage, and stack usage)<br />- FreeBSD CRL monitor support<br />- wolfSSL_peek()<br />- wolfSSL_send() and wolfSSL_recv() for I/O flag setting<br />- CodeWarrior Support<br />- MQX / MFS / RTCS Support<br />- Freescale Kinetis support including Hardware RNG<br />- autoconf builds use jobserver<br />- cyassl-config<br />- Sniffer memory reductions<br /><br />Thanks to Brian Aker for the improved autoconf system, make rpm, cyassl-config, warning system, and general good ideas for improving wolfSSL!<br /><br />The Freescale Kinetis K70 RNGA documentation can be found in Chapter 37 of the K70 Sub-Family Reference Manual:<br /><a href="http://cache.freescale.com/files/microcontrollers/doc/ref_manual/K70P256M150SF3RM.pdf">http://cache.freescale.com/files/microcontrollers/doc/ref_manual/K70P256M150SF3RM.pdf</a><br /><br />To download the open source, GPLv2-licensed version of wolfSSL 2.4.6, please visit our <a href="http://yassl.com/yaSSL/download/downloadForm.php">Download Page</a>.  If you have any questions or comments or would like more information on commercial versions of wolfSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />For build instructions, a full feature list, API reference, and more, please see the <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-toc.html">wolfSSL Manual</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Open Source for America',
    'post_content' => 'In case you didn`t notice, open source is growing rapidly in government usage.  <a href="http://OpensourceforAmerica.org/">OpensourceforAmerica.org</a> is keeping a helpful list of resources and examples of how open source is both helping government and expanding in usage.  See:  <a href="http://opensourceforamerica.org/projects/mentors/resources/">http://opensourceforamerica.org/projects/mentors/resources/</a>.  Our team is proud to participate in and support the growth of open source use in government and military projects!  If you`re wondering how the wolfSSL lightweight SSL implementation is used in government and defense projects, just contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Custom I/O: Handshaking',
    'post_content' => 'Last week we talked about wolfSSL’s <a href="perma://BLPageReference/14358509-0CEF-4BA6-BB5A-BA39B3A18DEB">custom I/O handling and how to set it up</a>. The following discussion assumes the I/O callbacks are reading and writing into buffers rather calling send() or recv().<br /><br />A tricky situation is during the handshake. When calling wolfSSL_connect(), the client will send cipher text first and try to receive a response from the server. The send callback will be called and then the receive callback, which will WANT_READ. Application code will have to actually send the first handshake message and wait for the response.<br /><br />The server receives and sends in reaction. Its receive callback is called, then its send callback, then the receive which will WANT_READ. The application has to send the handshake message.<br /><br />Both sides receive and send in reaction to each other. When the handshake hasn’t completed, calls to wolfSSL_read() and wolfSSL_send() call wolfSSL_negotiate() which will drive the handshaking. If things are set up right, a call to wolfSSL_read() may return WANT_READ and the cipher-send buffer will have data to be sent to the peer.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Don`t forget about Valgrind',
    'post_content' => 'One of our favorite tools at yaSSL is valgrind: <a href="http://valgrind.org/">http://valgrind.org</a> .  Originally a memory error detector, it`s now an instrumentation framework for dynamic analysis that also does thread error detection, cache and branch-prediction profiling, and heap profiling.  If you`ve never used it, you should.  If you are using it, you should probably be using it more.  <br /><br />We recently added an<b> --enable-valgrind</b> option to the wolfSSL lightweight SSL library to encourage us to use it more ourselves.  If valgrind is installed on your system all of the wolfSSL tests will be run under it.  This allows early detection of difficult to track down errors.  The detailed output makes tracking down and fixing errors a relatively simple process.  ',
    'post_status' => 'publish',
    'post_date' => date('2012-12-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'CTaoCrypt on TinyOS with TinyPKC',
    'post_content' => 'One of our community members recently ported CTaoCrypt’s RSA and ECC code to the TinOS operating system in a project called TinyPKC (<a href="http://www-db.in.tum.de/~kothmayr/tinypkc/">http://www-db.in.tum.de/~kothmayr/tinypkc/</a>).  TinyPKC was tested on 16-bit and 32-bit microcontroller platforms and should run on 8-bit platforms as well. It supports ECC key lengths from 112 bits to 521 bits and arbitrary RSA key lengths.<br /><br />TinyPKC uses a subset of the CTaoCrypt functionality and provides support for the following operations:<br /><br />    - RSA public key encryption / private key decryption<br />    - RSA private key signature generation / public key signature verification<br />    - ECDSA signature generation and verification<br />    - ECDH operations<br /><br />For more information, please see the TinyPKC website and the included README in the download.  Are you interested in running the wolfSSL embedded SSL library on TinyOS?  If so, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Partnership Program',
    'post_content' => 'yaSSL believes that business and technology partnerships are one of the keys to fostering success.  Such partnerships can come in many forms - be that business, technical, or community based, and work for both open source or commercial solutions.  To date, we have partnered with several companies, and are always looking for new partnerships.  To see a list of our current partners, please visit our Partner Page (<a href="http://yassl.com/yaSSL/Partners.html">http://yassl.com/yaSSL/Partners.html</a>).<br /><br />Are you interested in becoming a partner with yaSSL?  If so, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> for more information.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Dark Reading describes the top ten mobile security issues of 2012',
    'post_content' => 'Hi!  This top ten list crossed our desk today and we thought it was worthwhile to share with our users.  Combating MITM attacks and properly implementing SSL/TLS are on the list again this year.  <br /><br /><a href="http://www.darkreading.com/vulnerability-management/167901026/security/news/240144260/top-mobile-vulnerabilities-and-exploits-of-2012.html?cid=nl_DR_weekly_2012-12-13_html&elq=899a225ca89d467bbe5d74f5a0a246de">http://www.darkreading.com/vulnerability-management/167901026/security/news/240144260/top-mobile-vulnerabilities-and-exploits-of-2012.html?cid=nl_DR_weekly_2012-12-13_html&elq=899a225ca89d467bbe5d74f5a0a246de</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-12-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Custom I/O Setup',
    'post_content' => 'wolfSSL provides a mechanism to plug in your own application specific I/O routines. By default, the library uses functions that call the system’s recv() and send() functions with a file descriptor cached with the function wolfSSL_set_fd().<br /><br />The prototypes for the I/O routines are:<br /><br />        int CBIORecv(CYASSL* ssl, char* buf, int sz, void* ctx);<br />        int CBIOSend(CYASSL* ssl, char* buf, int sz, void* ctx);<br /><br />In the default case, the network socket’s file descriptor is passed to the I/O routine in the ctx parameter. The ssl parameter is a pointer to the current session. In the receive case, buf points to the buffer where incoming cipher text should be copied for wolfSSL to decrypt and sz is the size of the buffer. In the send case, buf points to the buffer where wolfSSL has written cipher text to be sent and sz is the size of that buffer.<br /><br />First you need to register your I/O callbacks with the CYASSL_CTX for your application using the functions wolfSSL_SetIORecv() and wolfSSL_SetIOSend().<br /><br />        wolfSSL_SetIORecv(ctx, myCBIORecv);<br />        wolfSSL_SetIOSend(ctx, myCBIOSend);<br /><br />As an example, for your application you want to control the socket for your own purposes. An example would be to have a server with a datagram socket which receives data from multiple clients or processes TLS through STDIN and STDOUT. In this case you would have four buffers:<br /><br />        cipher-receive        encrypted data received from peer<br />        cipher-send            encrypted data to send to peer<br />        clear-receive          clear data received from wolfSSL<br />        clear-send              clear data passed to wolfSSL<br /><br />Pointers to these buffers, values for their sizes, and read and write positions should be placed into a structure. This structure should be saved to the wolfSSL session with the functions wolfSSL_SetIOReadCtx() and wolfSSL_SetIOWriteCtx().<br /><br />        wolfSSL_SetIOReadCtx(ssl, buffer_data);<br />        wolfSSL_SetIOWriteCtx(ssl, buffer_data);<br /><br />The application receives a block of cipher text into the buffer cipher-receive. Next the application would call wolfSSL_read(ssl, buffer_data->clear_receive), causing wolfSSL to call myCBIORecv(). myCBIORecv() will be given a buffer, the size of the buffer, and the ctx, which has the cipher-receive buffer. The callback may be called many times for one call to wolfSSL_read(). If the cipher-receive buffer is empty, the callback should return -2, otherwise it should return the number of bytes copied into buf.<br /><br />When the library wants to send data, like during handshaking or when wolfSSL_send() is called with some clear text, the library will call myCBIOSend(). The callback is given a buffer full of encrypted data, and the length of the encrypted data. In this example, the callback would copy this cipher text into cipher-send and return the number of bytes copied. If the cipher-send buffer isn’t big enough, the callback should return -2.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Cryptographic Hashes for Hash Tables',
    'post_content' => 'Choosing a good hash function for a hash table is difficult to say the least.  Even if you can achieve good distribution and performance for a given hash function it`s still most likely dependent on table size and the type of input.  Resizing the table or getting unexpected input can quickly turn an otherwise good choice into a bad one.  Using a cryptographic hash function reduces nearly all of the problems.  Any and all table sizes are now equally supported.  Strings, numbers, and even binary data are all valid input.  And since a change in a single bit of input has an avalanche effect on the output, uniform distribution is achieved.  Really, the only possible negative is performance.  But it`s not nearly as bad as you probably think.  <br /><br />We tested 100 bytes of random data and did the test 1,000,000 times using the hash functions MD5, SHA1, and a typical MULTIPLIER type hash function.  Of course the basic hash function was the fastest at 0.66 microseconds per hash.  MD5 used 0.78 microseconds per hash while SHA1 consumed 1.02 microseconds per hash.  All in all, the small hit in performance seems well worth the gains in being able to use variable table sizes and any type of input without concern.  Testing was done using wolfSSL`s cryptography functionality in the CTaoCrypt module.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Training Course',
    'post_content' => 'Would you like to learn more about how SSL/TLS work, or more about the wolfSSL lightweight SSL library?  If so, yaSSL is now offering a training course on SSL/TLS and wolfSSL.  The wolfSSL training course covers details of SSL/TLS as well as the wolfSSL embedded SSL library.  Participants will have the opportunity to learn the inner workings of the SSL/TLS protocols as well as further their knowledge of the wolfSSL embedded SSL library.  Topics covered will include library design, building and getting started with wolfSSL, features, portability/customizability, certificates and keys, debugging and troubleshooting SSL, wolfSSL best practices, and details about the CTaoCrypt cryptography library.<br /><br />Course Objectives:<br /><br />Upon completion of the wolfSSL training course, attendees will:<br /><br />- Achieve a basic understanding of how SSL/TLS work<br />- Learn the package and design of wolfSSL<br />- Effectively build wolfSSL for target platforms<br />- Learn effective wolfSSL debugging strategies<br />- Add wolfSSL to ANSI-C based client and server applications<br />- Learn best practices for adding wolfSSL to embedded, desktop/enterprise, or cloud applications or devices<br />- Develop using wolfSSL’s underlying cryptography library, CTaoCrypt<br /><br />For a more detailed outline and more information on duration, scheduling, and pricing, please contact yaSSL at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL support for Green Hills INTEGRITY RTOS',
    'post_content' => 'Are you interested in using the wolfSSL lightweight SSL library on the Green Hills INTEGRITY RTOS?  Although wolfSSL doesn’t currently have INTEGRITY support, we would like to gauge user and community interest to help us plan our schedule for the upcoming year.  If you would like to see INTEGRITY support added to wolfSSL, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />From <a href="http://en.wikipedia.org/wiki/Integrity_(operating_system)">Wikipedia</a>, INTEGRITY “is royalty-free, POSIX-certified, and intended for use in embedded systems needing reliability, availability, and fault tolerance. It is built atop the velOSity microkernel and is intended mainly for modern 32- or 64-bit embedded system designs that support an <a href="http://en.wikipedia.org/wiki/Memory_management_unit">MMU</a>.”  To learn more about INTEGRITY, please visit the Green Hills website, here: <a href="http://www.ghs.com/products/rtos/integrity.html">http://www.ghs.com/products/rtos/integrity.html</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-12-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL 2012 Annual Report',
    'post_content' => '<b>Business and Company Progress<br /></b><br />	•	We doubled our customer base again this year and dramatically increased revenues, confirming the usefulness of our technology, our open source strategy, and our relevance in the emerging device security and BYOD markets.<br />	•	We have further penetrated key vertical markets, including home appliances, smart metering, sensors, M2M, gaming, VoIP, banking, and defense/military.   <br />	•	We expanded our partnerships with Synopsys, Freescale, Mentor Graphics, Intel, Microchip, ARM, Marvell, FreeRTOS, EBS Net, Cavium, and ST Microelectronics.<br />	•	We successfully participated in the following events:  CES, FOSDEM, Design West, OSCON, RSA, Black Hat, Game Developer Conference, Design East, Infosec UK, Intel Developer Forum, Intel Alliance Summit, and ARM TechCon.<br />	•	We increased the size of our team, and continue to hire top notch engineering talent.<br />	•	We continue to value and support the open source community through our free support offering for open source users.<br />	•	We released two new case studies surrounding M2M communication (Cinterion, CCww) and a new white paper with Intel about AES-NI.<br />	•	We gave presentations at FOSDEM 2012 (Technical Update), the Kerberos Consortium during RSA (Kerberos/GSS-API Android), DESIGN West (Nucleus Support), Infosecurity UK (What to look for in a SSL/TLS library), and the MySQL Meetup in Seattle (yaSSL in MySQL).<br />	•	yaSSL introduced a Japanese version of <a href="http://www.yassl.com/">www.yassl.com</a> to better cater to our Japanese users and customers.<br />	•	We introduced a new three-tiered support program.<br /><br /><b>wolfSSL Technical Progress<br /></b><br />	•	AES-GCM - Direct AES Galois Counter Mode support and cipher suites <br />	•	CRL - Certificate Revocation List processing with directory monitoring<br />	•	OCSP - Online Certificate Status Protocol support built in<br />	•	Lean PSK  - A low footprint, 24k, PSK TLSv1.2 build<br />	•	Reduced Memory use after handshake - Once the TLS handshake is complete, handshake resources are freed<br />	•	Lower stack memory use - Use of large static buffers eliminated<br />	•	Reliable DTLS, Cookies - DTLS cookies and full reliability now supported, no longer beta<br />	•	Unit/Suite Tests - Exposed unit API, hash, and cipher suite tests with valgrind support<br />	•	Static ECDH - Now supports several static ECDH cipher suites<br />	•	ECC client cert - Authentication with client ECC certificates now supported<br />	•	ECC released into open source - Now available on github and downloads<br />	•	SHA-384 - Direct use and cipher suites supported<br />	•	Subject AltName processing - AltNames easily retrieved from peer certificate for verification<br />	•	Sniffer SessionTicket support - Support for modern browsers using session tickets <br />	•	Command line example options - Example client and server now have several runtime options<br /><br /><b>wolfSSL Porting Progress<br /></b><br />	•	FreeRTOS and FreeRTOS Windows Simulator<br />	•	SafeRTOS<br />	•	Freescale MQX/RTCS/MFS.  wolfSSL is now ported to MQX and has been tested on the Kinetis MCU.  Example CodeWarrior projects are now available in the wolfSSL download.<br />	•	EBSnet RTIP<br />	•	Yocto/OpenEmbedded.  A new Yocto/OpenEmbedded layer is available for easy integration of wolfSSL into existing Yocto projects.<br />	•	Nucleus RTOS<br />	•	TinyOS.  Several CTaoCrypt algorithms have been ported to TinyOS<br /><br /><b>yaSSL Embedded Web Server Progress<br /></b><br />	•	Release version 1.0 with bug fixes and feature enhancements<br />	•	SafeRTOS port<br /><br /><b>Community<br /></b><br />	•	MIT Java GSS-API for Android<br />	•	wolfSSL is now able to be used as a crypto provider for MIT Kerberos<br />	•	wolfSSL now supports ssmtp 2.64<br />	•	libscs now has support for wolfSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2012-12-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be at CES 2013',
    'post_content' => 'yaSSL will be attending the 2013 Consumer Electronics Show (CES) this upcoming January.  With the first conference taking place in 1967, the International Consumer Electronics Show (CES) is now the world’s largest consumer technology tradeshow.  With 140,000 industry professionals in attendance, approximately 20,000 new consumer electronics products are launched at CES each year.<br /><br />CES 2013 will be held at the LVCC/Las Vegas Hilton and The Venetian in Las Vegas, January 8-11 (Tuesday - Friday), 2013.<br /><br />If you are planning on attending the International CES this year and would like to visit or meet, please let us know!  You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />International CES 2013:  <a href="http://www.cesweb.org/">http://www.cesweb.org</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-11-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Lightweight SSL in 20 kB with Lean PSK',
    'post_content' => 'Are you interested in using the wolfSSL embedded SSL library in an extremely resource constrained environment? If so, you may be interested to hear that we have recently implemented a wolfSSL “Lean PSK” build which enables the wolfSSL library to be built with a footprint size of 20kB!<br /><br />The “Lean PSK” build requires the use of pre-shared keys with wolfSSL, along with removing several additional features.  If you are curious, or would like to learn more, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-11-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Competitive Upgrade Program',
    'post_content' => 'One of the services that yaSSL provides is the wolfSSL Competitive Upgrade Program. With this program, yaSSL offers competitive upgrade pricing for those who wish move from an outdated, orphaned, or overpriced SSL library to the wolfSSL embedded SSL library with low cost and minimal disturbance to their code base.    <br /> <br />Here’s an outline of the Competitive Upgrade Program:<br /> <br />	1.	You need to currently be using a commercial competitor to wolfSSL.<br />	2.	You will receive up to two weeks of on-site consulting to switch out your old SSL library with wolfSSL.  Travel expenses are not included.<br />	3.	Normally, two weeks is the right amount of time for us to make the replacement in your code and do initial testing.  Additional consulting on a replacement is available as needed.<br />	4.	You will receive the standard wolfSSL royalty free license to ship with your product.<br /> <br />The purpose of this program is to enable users who are currently spending too much on their embedded SSL implementation to move to wolfSSL with ease.  If you are interested in learning more, or interested in how wolfSSL compares to what you are currently using, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-11-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ECC Support Comes to the wolfSSL Embedded SSL Library',
    'post_content' => 'Although ECC support for the wolfSSL lightweight SSL library has been available in our GitHub repository for the past several weeks, we wanted to officially announce it to our users and customers.  An official download of wolfSSL with ECC will be available on the www.yassl.com website with the next official release of wolfSSL.<br /><br />wolfSSL’s ECC implementation can be found in the <b><cyassl_root>/cyassl/ctaocrypt/ecc.h</b> header file and the <b><cyassl_root>/ctaocrypt/src/ecc.c</b> source file.  Supported ECC cipher suites include:<br /><br /><b>/* ECDHE suites */<br /></b>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA<br />TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA<br />TLS_ECDHE_RSA_WITH_RC4_128_SHA<br />TLS_ECDHE_ECDSA_WITH_RC4_128_SHA<br />TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA<br /><br /><b>/* ECDH suites */<br /></b>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA<br />TLS_ECDH_RSA_WITH_AES_128_CBC_SHA<br />TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA<br />TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA<br />TLS_ECDH_RSA_WITH_RC4_128_SHA<br />TLS_ECDH_ECDSA_WITH_RC4_128_SHA<br />TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA<br />TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA<br /><br /><b>/* AES-GCM suites */<br /></b>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256<br />TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384<br /><br />To view or download the most recent version of the wolfSSL sources with ECC integrated, please visit our source repository on GitHub (<a href="https://github.com/cyassl/cyassl">https://github.com/cyassl/cyassl</a>).  If you have any questions about ECC support in wolfSSL, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-11-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'MIT Kerberos GSS-API with wolfSSL Now Available for Android',
    'post_content' => 'Support for the MIT GSS-API library is now available for the Android platform - complete with an <b>org.ietf.jgss</b> (<a href="http://tools.ietf.org/html/rfc5653">RFC 5653</a>) compatible application programming interface, wolfSSL cryptography integration, and NDK sample application.<br /><br />You may have read our previous blog entry announcing the initial phases of our effort to port the MIT Kerberos libraries and wolfSSL embedded SSL library to the Android platform (see link in Reference section, below).  This post described initial availability of the Kerberos libraries to Android through the native NDK framework - enabling Android NDK developers to add Kerberos support to their NDK applications at a native C or C++ programming level.  At that time, we also commented on next steps for the project and sought feedback from the community on adding a Java API to make using Kerberos on Android easier and more standardized.<br /><br />Since that time, we have been hard at work enhancing the project, adding support for a new Java GSS-API wrapper, updating our example code, and adding new features to our sample NDK application.<br /><br /><b>1.  Java GSS-API Wrapper<br /></b><br />The addition of a Java wrapper around the native MIT GSS-API took part in two stages - a SWIG-generated (<a href="http://www.swig.org/">http://www.swig.org/</a>) Java interface, which then in turn was used as a building block for a <b>org.ietf.jgss</b> Java API.  The individual layers are visualized in the figure below.  Both the SWIG layer and the Java GSS-API layer are able to be used in a Java application to access the underlying MIT Kerberos/GSS-API libraries.  The SWIG layer is more tedious to use and less standardized than the Java GSS-API layer, but is closer to the C programming API of the native MIT GSS-API.  We suggest that Java developers use the org.ietf.jgss Java interface over using the SWIG layer directly.  As the org.ietf.jgss interface followed RFC 5653, Java developers should be able to refer to the standard Java documentation for the org.ietf.jgss package for usage instructions and class descriptions.<br /><br />Source code for this project has been released under the open source MIT license, and is currently available for download on GitHub.  Both the Java Generic Security Services API wrappers (SWIG and Java GSS-API), as well as example client and server applications and build instructions are located in the <b>kerberos-java-gssapi</b> package, at the following GitHub URL:<br /><br /><a href="http://github.com/cconlon/kerberos-java-gssapi">http://github.com/cconlon/kerberos-java-gssapi</a><br /><br /><b>2.  Enhanced Example Code<br /></b><br />Included in the Java GSS-API package, we have created several example applications to help developers understand how to use this project in their own application.  There are two sets of client and server examples provided.  The first one is a set of client and server applications which directly use the SWIG-generated Java interface.  The second set of applications is a client and server that use the more standardized Java GSS-API interface (org.ietf.jgss).<br /><br />It is recommended for Java developers to use the Java GSS-API examples, as they demonstrate programming and API usage which is more common in the Java programming language.  Before running any of the included examples, the development machine must first have a krb5.conf file and KDC set up correctly to match the principal names used in the examples.  For more details about building and running these example applications, please see the <b>README</b> included in the <b>kerberos-java-gssapi</b> package.<br /><br /><b>3.  Sample NDK Application<br /></b><br />As one of the main goals of this project was to bring MIT Kerberos/GSS-API support to the Android platform, we have created a sample Android NDK application to serve as an example and reference to Android developers.  This sample application provides a GUI wrapper around the MIT Kerberos kinit, klist, kvno, and kdestroy applications.  It also provides a sample client using the Java GSS-API interface to connect and communicate with the example server application (from Section 2, above).<br /><br />This package contains cross-compiled version of the MIT Kerberos libraries, and includes instructions on how to re-compile the Kerberos libraries yourself for the Android platform.  For details on how to build and run this example application in the Android emulator, please see the README file located in the NDK application package.<br /><br />All sources for this sample application are located in the <b>kerberos-android-ndk</b> package, located at the following URL:<br /><br /><a href="http://github.com/cconlon/kerberos-android-ndk">http://github.com/cconlon/kerberos-android-ndk</a><br /><br />yaSSL and MIT are excited to bring Android developers MIT Kerberos and GSS-API support and look forward to seeing what kinds of applications will use this functionality.  If you have any questions, comments, or feedback, we would enjoy to hear it!  Please contact us directly at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br /><b>References:<br /></b><br />MIT Kerberos:  <a href="http://web.mit.edu/kerberos/">http://web.mit.edu/kerberos/</a><br />wolfSSL:  <a href="http://yassl.com/yaSSL/Products-cyassl.html">http://yassl.com/yaSSL/Products-cyassl.html</a><br />kerberos-java-gssapi:  <a href="http://github.com/cconlon/kerberos-java-gssapi">http://github.com/cconlon/kerberos-java-gssapi</a><br />kerberos-android-ndk:  <a href="http://github.com/cconlon/kerberos-android-ndk">http://github.com/cconlon/kerberos-android-ndk</a><br />Initial announcement:  <a href="http://yassl.com/yaSSL/Blog/Entries/2011/11/15_Android_Kerberos_Port_using_wolfSSL_Embedded_SSL.html">http://yassl.com/yaSSL/Blog/Entries/2011/11/15_Android_Kerberos_Port_using_wolfSSL_Embedded_SSL.html</a><br /><br />Thanks,<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2012-11-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be attending Electronica 2012',
    'post_content' => 'yaSSL will be attending the Electronica 2012 conference later this month in Munich, Germany.  Electronica is the world`s leading trade fair for electronic components, systems and applications.  The range of exhibits covers technologies, products and solutions in the entire electronics industry.<br /><br />yaSSL will be talking about the wolfSSL embedded SSL library, yaSSL Embedded Web Server, and enhancements we’ve made to each recently.  Are you interested in adding SSL/TLS support to an application or device?  wolfSSL has been designed from the ground up to be optimized for resource-constrained environments while still offering the latest features and standards support.  wolfSSL supports up to TLS 1.2 with DTLS along with a long list of additional features.  For details, please see the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL product page</a>.<br /><br />Are you planning on attending Electronica and interested in scheduling a meeting with us?  If so, please let us know by emailing <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We look forward to visiting with you soon!<br /><br />Electronica 2012:  <a href="http://electronica.de/">http://electronica.de</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-11-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Security on Freescale Kinetis MQX with wolfSSL',
    'post_content' => 'Hello Kinetis users!  <br /><br />Our team has now ported and released wolfSSL lightweight SSL for Freescale Kinetis.  The newest work is for MQX/RTCS/MFS on Kinetis tower systems.  Check our Github repository for the most recent source code:<br /><br /><a href="https://github.com/cyassl/cyassl">https://github.com/cyassl/cyassl</a><br /><br />If you are a Kinetis user, you will also be pleased to know that we support FreeRTOS, Micrium, and bare metal or operating systemless (NO_OS) configurations as well.  You will find wolfSSL is optimal for connected home and Smart Grid security applications on Kinetis.<br /><br />In addition to MQX/RTCS/MFS support, Kinetis onboard Random Number Generator Accelerator (RNGA) support is also available for wolfSSL.  If you have a demanding performance requirement for your crypto, then let us know.  We can work with you to optimize the following hardware supported algorithms:  DES, 3DES, AES, MD5, SHA-1, SHA-256.  We are also available to help with SHA-3.<br /><br />We have bundled several example CodeWarrior projects with wolfSSL for MQX/RTCS/MFS, including a wolfSSL library project, CTaoCrypt test app, and wolfSSL example client.  When building wolfSSL for MQX, define FREESCALE_MQX in cyassl/ctaocrypt/settings.h.  This in turn defines FREESCALE_K70_RNGA which enables support for the Kinetis H/W RNGA.  <br /><br />You are welcome to contact us with any support or configuration questions at <a href="mailto:support@yassl.com">support@yassl.com</a>.<br /><br />Team yaSSL, from Montana, Idaho, Iowa, Washington, and Oregon.  All American Crypto you can Trust.  ',
    'post_status' => 'publish',
    'post_date' => date('2012-11-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server SafeRTOS Port',
    'post_content' => 'Have you been searching for a web server that runs on SafeRTOS?  We recently ported the yaSSL Embedded Web Server and wolfSSL embedded SSL library to the SafeRTOS operating system.  This means that you can easily serve up HTTPS content from your SafeRTOS-enabled project. The yaSSL Embedded Web Server offers a very small footprint, with build sizes of 100kB with SSL enabled (or 40kB without SSL).  It also offers a full list of features including SSI, aliases, digest authorization, IP restrictions, and more.<br /><br />From the SafeRTOS website, “SAFERTOS® is a unique real-time, deterministic operating system especially designed for critical applications. It is available pre-certified according to key standards in markets including Industrial and Medical. First certified by TÜV SÜD in 2007, SAFERTOS was developed in compliance with IEC61508 SIL3, and it continues to set the pace as the first pre-certified real-time operating system available in the ROM of a micro-controller.”<br /><br />If you are interested in learning more about our port, or would like to try out either of these products on a SafeRTOS platform, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> for details.<br /><br />yaSSL Embedded Web Server:  <a href="http://yassl.com/yaSSL/Products-yassl-embedded-web-server.html">http://yassl.com/yaSSL/Products-yassl-embedded-web-server.html</a><br />wolfSSL embedded SSL library:  <a href="http://yassl.com/yaSSL/Products-cyassl.html">http://yassl.com/yaSSL/Products-cyassl.html</a><br />SafeRTOS: <a href="http://www.highintegritysystems.com/safertos/">http://www.highintegritysystems.com/safertos/</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-10-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Good article on potential SHA-3 (aka Keccak) use in embedded systems',
    'post_content' => 'Here`s a good article if you`re wondering how SHA-3 will be used:  <a href="http://community.embeddedswstore.com/t5/Embedded-Connection/Why-Does-Embedded-Security-Get-Overlooked/ba-p/286">http://community.embeddedswstore.com/t5/Embedded-Connection/Why-Does-Embedded-Security-Get-Overlooked/ba-p/286</a><br /><br />From the article:<br /><br />“What then will SHA-3 be good for? While Polk says it may take years to identify all the possibilities for Keccak, it immediately provides an essential insurance policy in case SHA-2 is ever broken. He also speculates that the relatively compact nature of Keccak may make it useful for so-called “embedded” or smart devices that connect to electronic networks but are not themselves full-fledged computers. Examples include sensors in a building-wide security system and home appliances that can be controlled remotely.<br /> <br />‘The Internet as we know it is expanding to link devices that many people do not ordinarily think of as being part of a network,’ Polk says. ‘SHA-3 provides a new security tool for system and protocol designers, and that may create opportunities for security in networks that did not exist before.’”<br /><br />yaSSL is considering implementing a beta of SHA-3 in our wolfSSL embedded SSL product.  Our current timeline will have code available sometime around Christmas this year.  If you`re interested in taking a look at our implementation, then email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-10-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Some Android apps found to have serious SSL vulnerabilities',
    'post_content' => 'Researchers from two German universities have found that a large number of Android applications available today in the Google Play store have vulnerabilities related to SSL usage which may open the door for malicious man-in-the-middle attacks.  You can find several blog posts explaining the vulnerabilities including one from <a href="http://www.networkworld.com/news/2012/101912-android-ssl-263546.html">Network World</a> and the <a href="http://www.h-online.com/security/news/item/Encryption-found-insufficient-in-many-Android-apps-1732847.html">H Online</a>.<br /><br />The researchers explain several of the mis-use cases that can arise in these Android apps in their paper, linked below.  Listed from the paper, these include:<br /><br />“Trusting all Certificates. The TrustManager interface can be implemented to trust all certificates, irrespective of who signed them or even for what subject they were issued.<br /><br />Allowing all Hostnames. It is possible to forgo checks of whether the certificate was issued for this address or not, i. e., when accessing the server example.com, a certificate issued for some-other-domain.com is accepted.<br /><br />Trusting many CAs. This is not necessarily a flaw, but Android 4.0 trusts 134 CA root certificates per default. Due to the attacks on several CAs in 2011, the problem of the large number of trusted CAs is actively debated.<br /><br />Mixed-Mode/No SSL. App developers are free to mix secure and insecure connections in the same app or not use SSL at all. This is not directly an SSL issue, but it is relevant to mention that there are no outward signs and no possibility for a common app user to check whether a secure connection is being used. This opens the door for attacks such as SSL stripping or tools like Firesheep.”<br /><br />To read the full paper, take a look <a href="http://www2.dcsec.uni-hannover.de/files/android/p50-fahl.pdf">here</a>.  The wolfSSL embedded SSL library runs on Android and can be used in Android NDK-based applications for SSL support.  If you need guidance on how to correctly use wolfSSL in your project or application, email us at <a href="mailto:info@yassl.com">info@yassl.com</a> for more information.<br /><br />Research Paper: <a href="http://www2.dcsec.uni-hannover.de/files/android/p50-fahl.pdf">Why Eve and Mallory Love Android: An Analysis of Android SSL (In)Security</a><br />Network World: <a href="http://www.networkworld.com/news/2012/101912-android-ssl-263546.html">Some Android apps have serious SSL vulnerabilities, researchers say</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2012-10-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Visit with Team yaSSL at the 2012 ARM TechCon',
    'post_content' => 'Team yaSSL will be exhibiting at the 2012 ARM Technology Conference.  The ARM Technology Conference spans three days and will offer courses and exhibits for chip design teams working with ARM silicon IP and tools as well as courses and exhibits for software and systems design developers employing the ARM architecture.  The conference will be held October 30 - November 1, 2012 at the Santa Clara Convention Center in Santa Clara, CA.<br /><br />If you’re planning on attending the conference, please stop by to visit us at <b>booth TT7</b>!  We always like to hear from our users, customers, and fans, and will be happy to answer any questions you may have about our products.  We’ll be talking about the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you would like to schedule a meeting time, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Chip Design Day:  October 30, 2012<br />Software & Systems Design Days:  October 31 - November 1, 2012<br /><br />We’ll look forward to seeing you there!<br /><br />2012 ARM Technology Conference: <a href="http://www.armtechcon.com">www.armtechcon.com</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2012-10-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'NIST selects Keccak for SHA-3 ',
    'post_content' => 'On October 12, <a href="http://www.nist.gov/itl/csd/sha-100212.cfm">NIST announced</a> <a href="http://keccak.noekeon.org/">Keccak</a> as the winner of its Secure Hash Algorithm (SHA-3) competition.<br /><br />Keccak is designed to permute the data in a different manner than MD5, SHA-1, and SHA-2, making it immune to many of the attacks on those hashes. It promises roughly 13 cycles per byte to process the hash. The hash is limited to using bitwise XOR, AND, NOT, and rotations. It will need up to 1600 bytes of RAM for the hash state, but no lookup tables. It provides arbitrary sized output. Keccak can also perform keyed hashing, by setting the initial state by priming the hash with the key. The algorithm is simple and small, perfect for embedded systems.<br /><br />If you would be interested in talking about Keccak, SHA-3, and wolfSSL embedded SSL, send an email to <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />1. <a href="http://www.nist.gov/itl/csd/sha-100212.cfm">http://www.nist.gov/itl/csd/sha-100212.cfm</a><br />2. <a href="http://keccak.noekeon.org/">http://keccak.noekeon.org/</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-10-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New wolfSSL Layer Available for Yocto and OpenEmbedded',
    'post_content' => 'Do you currently use the Yocto Project or OpenEmbedded?  We would like to announce the availability of the “meta-yassl” layer for both Yocto and OpenEmbedded.  This layer adds support for the lightweight wolfSSL embedded SSL library to these projects and can be easily added to your existing Yocto or OpenEmbedded setup.  The layer can be found on GitHub at the following URL:<br /><br /><a href="https://github.com/cconlon/meta-yassl">https://github.com/cconlon/meta-yassl</a><br /><br />If you are not familiar with the Yocto Project, it is an “open source collaboration project that provides templates, tools and methods to help you create custom Linux-based systems for embedded products regardless of the hardware architecture.”  You can learn more about Yocto at <a href="http://www.yoctoproject.org">www.yoctoproject.org</a> or OpenEmbedded at <a href="http://www.openembedded.org">www.openembedded.org</a>.<br /><br />As a reminder, wolfSSL is open source and dual licensed under both the GPLv2 as well as a standard commercial license.  This means you are free to prototype with, test with, or use wolfSSL free of charge under the terms of the GPLv2.  If your project will need a commercial license or you would like commercial support direct from yaSSL, please contact us and we’ll be happy to give you more details.<br /><br />If you have any questions about the new meta-yassl layer, the wolfSSL embedded SSL library, or how we can help you integrate SSL into your project, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-10-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'White Paper: Implementation and Performance of AES-NI in wolfSSL Embedded SSL',
    'post_content' => 'yaSSL and Intel have jointly published a white paper describing how Intel’s AES-NI can be used with the wolfSSL embedded SSL library.  This paper provides a brief overview of the Intel AES-NI instructions and demonstrates the performance gains realized when Intel AES-NI is used in place of a more traditional software-only based AES implementation. The wolfSSL embedded SSL library developed by yaSSL, is used as a test bed in the white paper to perform the comparison as it can be built with either traditional AES or AES-NI support at compile time. As a secondary goal to demonstrating Intel AES-NI performance, this paper explains how to determine if a pre-built SSL library (static or shared) offers built-in support for the Intel Advanced Encryption Standard New Instructions.<br /><br />You can download the white paper directly from the yaSSL website at the following location.  If you have any questions about using wolfSSL on Intel hardware, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />wolfSSL AES-NI White Paper: <a href="perma://BLPageReference/CA5A7048-A7FD-422F-A32A-91E3AB8DCCB6">yaSSL White Papers</a> (<a href="http://yassl.com/yaSSL/cyassl-embedded-ssl-white-papers.html">http://yassl.com/yaSSL/cyassl-embedded-ssl-white-papers.html</a>)',
    'post_status' => 'publish',
    'post_date' => date('2012-10-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More Flexible Example Applications',
    'post_content' => 'You may have noticed that with our most recent release of the wolfSSL embedded SSL library (2.3.0), we have made our example client and server applications more flexible and easier to use.  These updated applications - client (./examples/client/client) and server (./examples/server/server) - now offer a variety of command line options to adjust things ranging from SSL certificates to protocol version selection.<br /><br />Looking at the example client application, if you run the app with the “--help” option, you will see a list of supported options:<br /><br /><b>./examples/client/client --help<br /></b>client 2.3.1 NOTE: All files relative to wolfSSL home dir<br />-?          Help, print this usage<br />-h <host>   Host to connect to, default 127.0.0.1<br />-p <num>    Port to connect on, default 11111<br />-v <num>    SSL version [0-3], SSLv3(0) - TLS1.2(3)), default 3<br />-l <str>    Cipher list<br />-c <file>   Certificate file,           default ./certs/client-cert.pem<br />-k <file>   Key file,                   default ./certs/client-key.pem<br />-A <file>   Certificate Authority file, default ./certs/ca-cert.pem<br />-b <num>    Benchmark <num> connections and print stats<br />-s          Use pre Shared keys<br />-d          Disable peer checks<br />-g          Send server HTTP GET<br />-u          Use UDP DTLS<br />-m          Match domain name in cert<br /><br />Likewise, looking at the server, you can see a variety of command line options available as well:<br /><br /><b>./examples/server/server --help<br /></b>server 2.3.1 NOTE: All files relative to wolfSSL home dir<br />-?          Help, print this usage<br />-p <num>    Port to listen on, default 11111<br />-v <num>    SSL version [0-3], SSLv3(0) - TLS1.2(3)), default 3<br />-l <str>    Cipher list<br />-c <file>   Certificate file,           default ./certs/server-cert.pem<br />-k <file>   Key file,                   default ./certs/server-key.pem<br />-A <file>   Certificate Authority file, default ./certs/client-cert.pem<br />-d          Disable client cert check<br />-b          Bind to any interface instead of localhost only<br />-s          Use pre Shared keys<br />-u          Use UDP DTLS<br /><br />We hope this will make testing connections and wolfSSL builds much easier and less time consuming.  If you have any suggestions for future improvement, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-10-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The CRIME attack and wolfSSL embedded SSL',
    'post_content' => 'The CRIME attack has been in the news recently, and some of our users have been asking about it.  The short version of responding to the attack is simple:  disable TLS compression.  In wolfSSL, compression is disabled by default.  The Tor project has posted an excellent explanation of the attack in their blog.  For more details, see:  <a href="https://blog.torproject.org/blog/some-thoughts-crime-attack">https://blog.torproject.org/blog/some-thoughts-crime-attack</a>.  <br /><br />If you have questions on this attack in relation to wolfSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-9-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Avoid BEAST attack when using wolfSSL lightweight SSL implementation',
    'post_content' => 'Hi!  To our users concerned about the following security advisory:  <a href="http://www.securelist.com/en/advisories/50605">http://www.securelist.com/en/advisories/50605</a>, it is a vulnerability related specifically to SSL 3.0 and TLS 1.0.  When using wolfSSL, you can avoid this vulnerability using one of several methods, including:<br /><br />	1.	 Using a higher level of the SSL/TLS protocol - either TLS 1.1 or TLS 1.2<br />	2.	 Using TLS 1.0 or SSL 3.0 with a stream cipher. wolfSSL supports several, including RC4, HC-128, and RABBIT.<br />3.  If you must use SSL 3.0 or TLS 1.0 with a block cipher, split the first SSL write at the application level into fragments (as modern browsers do).<br /><br />If you have further concerns or questions, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-9-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at IDF 2012: Day 2',
    'post_content' => 'Day 2 of the Intel Developer Forum (#idf2012) is well underway here in San Francisco.  With over 6,000 attendees, activity around exhibits and demos has been very active.  The Technology Showcase runs from 11am - 1pm and again from 4pm - 7pm today in the Exhibit hall at Moscone West.  <br /><br />Do you need a lightweight, speedy implementation of SSL for you project, application, or device?  If so, come visit with us at booth #424.  We can discuss with you the benefits of running the wolfSSL embedded SSL library in either a resource-constrained or a large-scale cloud environment.',
    'post_status' => 'publish',
    'post_date' => date('2012-9-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at IDF 2012 - AES-NI and RDRAND',
    'post_content' => 'yaSSL is attending IDF 2012 (#idf2012) this week in San Francisco.  As exhibitors and visitors are busy talking about the newest technology advancements from Intel and their partners, yaSSL is talking about several Intel technology features related to wolfSSL as well.  wolfSSL currently supports Intel’s AES-NI to accelerate AES operations on supported processors.  In addition, wolfSSL will soon be getting support for Intel’s RDRAND.  To learn more about these features and the wolfSSL embedded SSL library, visit us at booth 424 this week at IDF 2012!',
    'post_status' => 'publish',
    'post_date' => date('2012-9-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Now Available in the MacPorts Project',
    'post_content' => 'If you are a user of the popular MacPorts project on OS X, you may be happy to hear that the wolfSSL embedded SSL library is now available as a MacPorts package.  If you are not familiar with the MacPorts Project, a brief summary from their website does an excellent job of explaining the project.  At the time this post was written, there were 15,657 ports in the MacPorts tree.<br /><br />As stated on their <a href="http://www.macports.org/index.php">homepage</a>, “The MacPorts Project is an open-source community initiative to design an easy-to-use system for compiling, installing, and upgrading either command-line, X11 or Aqua based open-source software on the <a href="http://www.apple.com/macosx/">Mac OS X</a> operating system. To that end we provide the command-line driven MacPorts software package under a <a href="http://opensource.org/licenses/bsd-license.php">BSD License</a>, and through it easy access to thousands of ports that <a href="http://guide.macports.org/#introduction">greatly simplify</a> the task of <a href="http://guide.macports.org/#using">compiling and installing</a> open-source software on your Mac.<br /><br />We provide a single software tree that attempts to track the latest release of every software title (port) we distribute, without splitting them into “stable” Vs. “unstable” branches, targeting mainly the current Mac OS X release (10.8, A.K.A. Mountain Lion) and the immediately previous two (10.7, A.K.A. Lion and 10.6, A.K.A. Snow Leopard).”<br /><br />To install the wolfSSL MacPorts package on OS X, there are only a few simple steps required:<br /><br />	1.	 Download and install MacPorts (<a href="http://www.macports.org/install.php">http://www.macports.org/install.php</a>)<br />	2.	 From the OS X terminal, run the command, “sudo port install cyassl”. This will install wolfSSL into the /opt/local directory.<br /><br />To learn more about MacPorts, please visit their website at <a href="http://www.macports.com">www.macports.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-9-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Exhibiting at the 2012 Intel Developer Forum',
    'post_content' => 'yaSSL will be exhibiting at the Intel Developer Forum in San Francisco, CA next month.  Intel Developer Forum provides a place for the technology industry to gather and hear about Intel’s latest advances in technology.  Attendees are able to hear Intel’s latest announcements, learn about their most important initiatives, and get insights from the Intel employees, executives and Fellows who are bringing tomorrow’s technology to life.  The conference will include a number of Keynotes and Technical Sessions as well as a Technology Showcase and Expo hall with over 100 exhibiting companies. The conference will be held at Moscone West in San Francisco, CA on September 11-13, 2012.<br /><br />As a sponsor/exhibitor, we would like to offer you several ways to register to attend Thursday of IDF for free! To register for a free pass to the IDF Technology Showcase on Thursday, September 13 between 11:00am-2:00pm, you can use code <b>GESYASS</b> when registering at the link below.  To register for a complimentary Day Pass that provides full access to IDF for Thursday only – including the Keynote, Technical Sessions and Technology Showcase, use promo code <b>CTHDAY3</b>.<br /><br />If you’re planning on attending, please stop by the yaSSL booth (<b>Booth 424</b>) to discuss the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you have any questions, or would like to set up a meeting with us at the conference, please let us know by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We look forward to seeing you there!<br /><br /><a href="http://www.intel.com/content/www/us/en/intel-developer-forum-idf/san-francisco/idf-2012-san-francisco.html">IDF San Francisco 2012</a><br />IDF Registration: <a href="http://www.intel.com/idf/registration">www.intel.com/idf/registration</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2012-8-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using Crypto Algorithms Separately from CTaoCrypt',
    'post_content' => 'As you may know, CTaoCrypt is the underlying cryptography library used by the wolfSSL embedded SSL library.  We’ve had several users choose to use CTaoCrypt’s crypto algorithms because they are easy to isolate and use independently of the library itself.  For example, if you need to use MD5 in your own code but don’t want to write it yourself, you could extract CTaoCrypt’s MD5 implementation and use it directly in your code.<br /><br />Most crypto algorithms in CTaoCrypt are contained within a source file and header file.  For MD5, the relevant code would be in ./cyassl/ctaocrypt/md5.h and ./ctaocrypt/src/md5.c.  Other algorithms follow the same directory and source file pattern.<br /><br />If you have any questions about using CTaoCrypt’s algorithms separately, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.  As always, feel free to download the GPLv2-licensed source code for wolfSSL/CTaoCrypt directly from our <a href="http://yassl.com/yaSSL/download/downloadForm.php">download page</a> and try it out for yourself.<br />',
    'post_status' => 'publish',
    'post_date' => date('2012-8-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server 1.0 is Now Available',
    'post_content' => 'The third release of the yaSSL Embedded Web Server is now available for <a href="http://yassl.com/yaSSL/download/downloadForm.php">download</a>!  Changes in this release include bug fixes, updated wolfSSL support, iOS (Apple TV) build support, better Windows build support, CGI and SSI extension pattern matching and more.<br /><br /><a href="perma://BLPageReference/71A1A7A1-5192-4F85-A8DB-E6F4B2B7DC3D">The yaSSL Embedded Web Server</a> is focused on being small, fast, and embeddable.  Features include CGI, SSI, IP restrictions, access and error log support, and SSL among others.  The <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL embedded SSL library</a> can be used to easily secure ports with SSL/TLS up to TLS 1.2, giving you a secure connection while maintaining small size and fast speed.  <br /><br />If you have any questions, or would like to learn more about the yaSSL Embedded Web Server and how it can help your project, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2012-8-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL to include SNI (Server Name Indication) in Upcoming Release',
    'post_content' => 'Hi!  We`ve had recent requests for SNI in wolfSSL.  SNI is well documented on wikipedia here:  <a href="http://en.wikipedia.org/wiki/Server_Name_Indication">http://en.wikipedia.org/wiki/Server_Name_Indication</a>.<br /><br />If you are interested in using SNI with wolfSSL, then please contact us and let us know.  We may be able to add you to our beta list.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-8-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.3.0 is Now Available',
    'post_content' => 'Version 2.3.0 of the wolfSSL embedded SSL/TLS library has been released and is now available for download.  This release contains bug fixes and new features. Changes include the following (with details and comments for each listed below):<br /><br />- AES-GCM crypto and cipher suites<br />- “make test” cipher suite checks<br />- Subject AltName processing<br />- Command line support for client/server examples<br />- Sniffer SessionTicket support<br />- SHA-384 cipher suites<br />- Verify cipher suite validity when user overrides<br />- CRL directory monitoring<br />	-	DTLS Cookie support, reliability coming soon<br /><br /><b>AES-GCM<br /></b><br />The addition of AES-GCM (<a href="http://en.wikipedia.org/wiki/Galois/Counter_Mode">Galois/Counter Mode</a>) cryptography and cipher suites brings the wolfSSL embedded SSL library one step away from being NSA Suite B compliant. The one missing element is ECC - which wolfSSL will be getting in September 2012.<br /><br />wolfSSL 2.3.0 offers four different implementations of AES-GCM balancing speed versus memory consumption. If available, wolfSSL will use 64-bit or 32-bit math. For embedded applications, there is a speedy 8-bit version that uses RAM-based lookup tables (8KB per session) which is speed comparable to the 64-bit version and a slower 8-bit version that doesn`t take up any additional RAM. To enable AES with GCM in wolfSSL, configure the build with the option "--enable-aesgcm". The configure option may be modified with the options "=word32", "=table", or "=small", i.e. "--enable-aesgcm=table".<br /><br /><b>“make test” Cipher Suite Checks<br /></b><br />With the last few releases of wolfSSL, we’ve been working on enhancing wolfSSL’s default test cases which are executed when “make test” is issued from the wolfSSL root directory.  With this release, we have added test cases for wolfSSL’s ciphers suites.  The cipher suite checks iterate through wolfSSL’s SSL 3.0, TLS 1.0, 1.1, and 1.2 cipher suites (as defined in the /tests/test.conf file), verifying that each suite works correctly.  When running “make test” you will now see output similar to the following for each cipher suite tested:<br /><br /># server SSLv3 RC4-SHA<br /># client SSLv3 RC4-SHA<br />trying server command line[1]: SuiteTest -v 0 -l RC4-SHA <br />trying client command line[1]: SuiteTest -v 0 -l RC4-SHA <br />Client message: hello cyassl!<br />Server response: I hear you fa shizzle!<br /><br /><b>Subject AltName Processing<br /></b><br />An X.509 certificate may contain a Subject Alternative Name, or “subjectAltName” extension which allows identities to be bound to the subject of the certificate.  These names might be included in addition to the existing name in the Subject field of an X.509 certificate, or they may included in place of the standard Subject field of the certificate.  Subject Alternative Names may take a variety of formats including an email address, DNS name, IP address, or a URI.  This extension is defined in Section 4.2.1.6 of RFC 5280 (<a href="http://tools.ietf.org/html/rfc5280">http://tools.ietf.org/html/rfc5280</a>).<br /><br />With this release, wolfSSL now processes Subject Alternative Names in certificates.  wolfSSL has a new API function, wolfSSL_X509_get_next_altname() which allows retrieval of the subjectAltNames that have been processed.<br /><br /><b>Command Line Support for client/server Examples<br /></b><br />The wolfSSL example client and server can now be run from the command line with a number of different options.  These options allow users to select the Host, Port, SSL version, cipher list, certificate file, key file, CA file, toggle DTLS and pre shared keys, and more.  To see the available options, run either ./examples/client/client or ./examples/server/server with the “-?” option:<br /><br />./examples/client/client -?<br /><br />The available options will be listed, similar to:<br /><br />client 2.3.0 NOTE: All files relative to wolfSSL home dir<br />-?          Help, print this usage<br />-h <host>   Host to connect to, default 127.0.0.1<br />-p <num>    Port to connect on, default 11111<br />-v <num>    SSL version [0-3], SSLv3(0) - TLS1.2(3)), default 3<br />-l <str>    Cipher list<br />-c <file>   Certificate file,           default ./certs/client-cert.pem<br />-k <file>   Key file,                   default ./certs/client-key.pem<br />-A <file>   Certificate Authority file, default ./certs/ca-cert.pem<br />-b <num>    Benchmark <num> connections and print stats<br />-s          Use pre Shared keys<br />-d          Disable peer checks<br />-g          Send server HTTP GET<br />-u          Use UDP DTLS<br />-m          Match domain name in cert<br /><br /><b>Sniffer SessionTicket Support<br /></b><br />wolfSSL’s Sniffer (or Inspection) functionality has been made more robust by the addition of support for TLS Session Tickets.  The SessionTicket TLS extension is defined in RFC 5077 (<a href="http://tools.ietf.org/html/rfc5077">http://tools.ietf.org/html/rfc5077</a>).  This extension enables a TLS server to resume sessions without storing per-client session information on the server side.  The server encapsulates the current session state for a specific client into a ticket and forwards it to the client.  That client is then able to resume a session if needed by using the previously-obtained ticket from the server.<br /><br /><b>SHA-384 Cipher Suites<br /></b><br />With the addition of GCM support to wolfSSL, we have also added a number of SHA-384 cipher suites.  New SHA-384 suites include:<br /><br />TLS_RSA_WITH_AES_256_GCM_SHA384<br />TLS_DHE_RSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384<br />TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384<br /><br /><b>Verify Cipher Suite Validity when User Overrides<br /></b><br />wolfSSL 2.3.0 now checks to make sure that certificates and keys loaded into wolfSSL are valid for specified cipher suites chosen by the user.  This added check enhances wolfSSL’s robustness and will prevent errors some users see when hand-picking cipher suites to use while not having all the correct functionality built into wolfSSL.<br /><br /><b>CRL Directory Monitoring<br /></b><br />As you may know, we added initial support for CRL (Certificate Revocation List) with the release of wolfSSL 2.2.0 in May of this year.  With this 2.3.0 release, we have added the ability to have wolfSSL actively monitor a specific CRL directory.  Example usage can be seen in the wolfSSL example server (./examples/server/server.c) inside of the HAVE_CRL defines:<br /><br />wolfSSL_EnableCRL(ssl, 0);<br />wolfSSL_LoadCRL(ssl, crlPemDir, SSL_FILETYPE_PEM, CYASSL_CRL_MONITOR |       <br />                                                 CYASSL_CRL_START_MON);<br />wolfSSL_SetCRL_Cb(ssl, CRL_CallBack); <br /><br /><b>DTLS Cookie Support<br /></b><br />wolfSSL has had DTLS support for quite some time, but we’re currently working on making it more functional and robust.  With this release, wolfSSL’s DTLS implementation now supports cookies.  Cookies are used in DTLS to prevent denial of service attacks.  As stated in section 4.2.1 of RFC 4347 (<a href="http://tools.ietf.org/html/rfc4347">http://tools.ietf.org/html/rfc4347</a>):<br /><br />“Datagram security protocols are extremely susceptible to a variety of denial of service (DoS) attacks.  Two attacks are of particular concern:<br /><br />	•	An attacker can consume excessive resources on the server by transmitting a series of handshake initiation requests, causing the server to allocate state and potentially to perform expensive cryptographic operations.<br /><br />	•	An attacker can use the server as an amplifier by sending connection initiation messages with a forged source of the victim. The server then sends its next message (in DTLS, a Certificate message, which can be quite large) to the victim machine, thus flooding it.<br /><br />In order to counter both of these attacks, DTLS borrows the stateless cookie technique used by Photuris (http://tools.ietf.org/html/rfc4347#ref-PHOTURIS) and IKE (http://tools.ietf.org/html/rfc4347#ref-IKE).  When the client sends its ClientHello message to the server, the server MAY respond with a HelloVerifyRequest message.  This message contains a stateless cookie generated using the technique of Photuris.  The client MUST retransmit the ClientHello with the cookie added.  The server then verifies the cookie and proceeds with the handshake only if it is valid.  This mechanism forces the attacker/client to be able to receive the cookie, which makes DoS attacks with spoofed IP addresses difficult. “<br /><br />We’re currently working on adding reliability to our DTLS implementation. This should be rolling out in the near future, so keep an eye on our blog for more news!<br /><br />To download the open source, GPLv2-licensed version of wolfSSL 2.3.0, please visit our <a href="http://yassl.com/yaSSL/download/downloadForm.php">Download Page</a>.  If you have any questions or comments or would like more information on commercial versions of wolfSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />For build instructions, a full feature list, API reference, and more, please see the <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-toc.html">wolfSSL Manual</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-8-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL to release ECC code in September to become fully Suite B compliant',
    'post_content' => 'Hi!  As you may know, we`ve released our GCM code recently.  Our next major open source release, coming in September, will include our ECC implementation.  This will bring wolfSSL into Suite B compliance.  If you need our ECC code before our next release, just contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> and we`ll get it into your hands.',
    'post_status' => 'publish',
    'post_date' => date('2012-8-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Now Supports AES with GCM',
    'post_content' => 'We have added the <a href="http://en.wikipedia.org/wiki/Galois/Counter_Mode">Galois/Counter Mode</a> for AES to wolfSSL. It adds an Authenticated Data with Associated Data (AEAD) cipher to TLS v1.2 where the cipher provides its own message authentication. The following cipher suites are available:<br /><br />* TLS_DHE_RSA_WITH_AES_256_GCM_SHA384<br />* TLS_DHE_RSA_WITH_AES_128_GCM_SHA256<br />* TLS_RSA_WITH_AES_256_GCM_SHA384<br />* TLS_RSA_WITH_AES_128_GCM_SHA256<br />* TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384<br />* TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384<br />* TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256<br />* TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256<br />* TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384<br />* TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384<br />* TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256<br />* TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256<br /><br />We offer four different implementations balancing speed versus memory consumption. If available, it will use 64-bit or 32-bit math. For embedded SSL applications, there is a speedy 8-bit version that uses RAM-based lookup tables (8KB per session) that is speed comparable to the 64-bit version and a slower 8-bit version that doesn`t take up any additional RAM.<br /><br />AES with GCM will be available in our next release. The latest sources are available in our <a href="https://github.com/cyassl/cyassl">GitHub repository</a>. To enable AES with GCM in wolfSSL, configure the build with the option "--enable-aesgcm". The configure option may be modified with the options "=word32", "=table", or "=small", i.e. "--enable-aesgcm=table". <br /><br />We are very excited to offer this new cipher. Adding AES with GCM makes wolfSSL compatible with <a href="http://en.wikipedia.org/wiki/NSA_Suite_B_Cryptography">NSA Suite B</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-8-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Case Study: Securing GSM / GPRS Modem Modules with wolfSSL',
    'post_content' => 'yaSSL has released a new case study highlighting how one of our customers, CCww, is using the wolfSSL embedded SSL library to secure GSM / GPRS modem modules.  This case study highlights the key requirements CCww had for securing their modules, how wolfSSL was used as a solution, and summarizes CCww’s thoughts on the project.<br /><br />You can download the case study directly from the yaSSL website at the following location.  If you have any questions about using wolfSSL to secure your project, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />yaSSL / CCww Case Study: <a href="http://www.yassl.com/files/casestudy/casestudy_yassl_ccww.pdf">http://www.yassl.com/files/casestudy/casestudy_yassl_ccww.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-7-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Are you attending Black Hat USA this week?',
    'post_content' => 'Black Hat USA 2012 (#blackhat) is taking place this week at Caesars Palace in Las Vegas, NV.  Team yaSSL is exhibiting at pedestal P5, located in the Octavius Ballroom Foyer, just outside of the expo hall.  If you’re attending the conference, please stop by the yaSSL pedestal to visit about the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  <br /><br />If you would like to set up a specific time to visit with us, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-7-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Reminder: Enter to win a New Apple iPad from yaSSL',
    'post_content' => 'We wanted to remind our readers to enter our sweepstakes for a chance to win a New Apple iPad (16GB, Wi-Fi).  The sweepstakes will be coming to a close August 1, 2012 (just 9 days away!).  For a chance to win, just take our short SSL survey (10 questions) at the following link.  The contest is limited to one entry per individual.<br /><br />Begin the survey, here: <a href="http://www.surveymonkey.com/s/585N8LZ">http://www.surveymonkey.com/s/585N8LZ</a><br /><br /><b>Eligibility</b>: To be eligible to win you must be a legal resident of the fifty (50) United States or the District of Columbia and be at least eighteen (18) years old at the time of entry.<br /><br />We appreciate your time and feedback!  All results and comments will be taken into consideration to improve our products.  If you have any questions, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-7-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Intro to PKCS #1: RSA Cryptography Standard',
    'post_content' => 'As the first post in our PKCS series, we will be looking at PKCS #1.  PKCS #1 is the RSA Cryptography Standard and is defined in <b><a href="http://tools.ietf.org/html/rfc3447">RFC 3447</a></b> (<a href="https://tools.ietf.org/html/rfc3447">http://tools.ietf.org/html/rfc3447</a>).  It defines standards for implementing public and private keys based on the RSA algorithm including cryptographic primitives, encryption schemes, signature schemes, and ASN.1 syntax for representing the keys and identifying the schemes.<br /><br /><b>A.  </b><b>Cryptographic Primitives<br /></b><br />As stated in the RFC, cryptographic primitives are “basic mathematical operations on which cryptographic schemes can be built. Four different types of cryptographic primitives are defined in PKCS #1: encryption, decryption, signature, and verification.<br /><br />An encryption primitive produces a ciphertext from a plaintext under the control of a public key.  A decryption primitive produces a plaintext from a ciphertext under the control of a corresponding private key.  PKCS #1 defines one pair of encryption/decryption primitives, specified as RSAEP and RSADP in RFC 3447, with exponentiation being the main mathematical operation used.<br /><br />A signature primitive produces a signature from a message under the control of a private key.  A verification primitive recovers the message from the signature under the control of the corresponding public key.  The specific primitives defined for signature and verification in PKCS #1 are RSASP1 and RSAVP1.<br /><br /><b>B.  </b><b>Encryption and Signature Schemes<br /></b><br />As stated in RFC 3447, “a scheme combines cryptographic primitives and other techniques to achieve a particular security goal.”  The two types of schemes defined in PKCS #1 are encryption schemes and signature schemes with appendix.  The schemes presented in PKCS #1 are limited in that they only present methods to process data with either a public or private key.  They do not include any type of recommendations or steps to handle key management.<br /><br />Both encryption schemes and signature schemes can be applied in many situations.  One example given in RFC 3447 regarding an encryption scheme is usage in a key establishment protocol, where the message contains key material that needs to be delivered from party A to party B confidentially.  An example given by the RFC for signature scheme usage could be as a signature algorithm for X.509 certificates.  Note that signature schemes with appendix (defined in PKCS#1) are different than signature schemes with message recovery.<br /><br /><b>C.  </b><b>ASN.1 Syntax<br /></b><br />The last item which is defined in PKCS #1 is ASN.1 object identifiers for RSA public and private keys and the RSA public and private key structure.  The intended applications of these definitions include X.509 certificates, PKCS #8, and PKCS #12.<br /><br />The wolfSSL embedded SSL library uses the PKCS #1 standard for RSA public and private keys and RSA operations.  For example, if you examine the code, you can see how wolfSSL’s RsaKey type (./cyassl/ctaocrypt/rsa.h) matches up to the RSA key definition in PKCS #1.<br /><br />To learn more about PKCS #1, you can look through <b>RFC 3447</b>, here:<br /><br /><a href="http://tools.ietf.org/html/rfc3447">http://tools.ietf.org/html/rfc3447</a><br /><br />To learn more about the wolfSSL embedded SSL library, you can download a free GPLv2-licensed copy from the yaSSL download page, <a href="http://yassl.com/yaSSL/download/downloadForm.php">http://yassl.com/yaSSL/download/downloadForm.php</a>, or look through the wolfSSL Manual, <a href="http://www.yassl.com/yaSSL/Docs-cyassl-manual-toc.html">http://www.yassl.com/yaSSL/Docs-cyassl-manual-toc.html</a>.  If you have any additional questions, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-7-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'PKCS Standards Blog Post Series',
    'post_content' => 'PKCS is a set of “Public Key Cryptography Standards” which were devised and published by RSA Security, Inc. beginning in the 1990s.  The PKCS standards encapsulate everything from the RSA algorithm to password-based encryption to standards for certificate requests and cryptographic tokens. Because many of these standards are directly related to SSL/TLS and the wolfSSL embedded SSL library, we will be posting a series of blog posts on these widely-used standards over the next several weeks.<br /><br />The PKCS Standards include:<br /><br />PKCS#1 = RSA Cryptography Standard<br />PKCS#3 = Diffie-Hellman Key Agreement Standard<br />PKCS#5 = Password-based Encryption Standard<br />PKCS#6 = Extended-Certificate Syntax Standard<br />PKCS#7 = Cryptographic Message Syntax Standard<br />PKCS#8 = Private-Key Information Syntax Standard<br />PKCS#9 = Selected Attribute Types<br />PKCS#10 = Certificate Request Standard<br />PKCS#11 = Cryptographic Token Interface<br />PKCS#12 = Personal Information Exchange Syntax Standard<br />PKCS#13 = Elliptic Curve Cryptography Standard<br />PKCS#14 = Pseudo-random Number Generation<br />PKCS#15 = Cryptographic Token Information Format Standard<br /><br />Stay tuned to our blog to learn more about the PKCS standards and how they relate to the wolfSSL embedded SSL library.',
    'post_status' => 'publish',
    'post_date' => date('2012-7-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at Black Hat USA 2012',
    'post_content' => 'yaSSL will be exhibiting at the 2012 Black Hat USA conference (#blackhat) in Las Vegas, NV.  The conference will be held on July 21-26, 2012 at Caesars Palace in Las Vegas, NV.  If you’re planning on attending the conference, please plan to stop by the yaSSL booth to talk about the wolfSSL embedded SSL library and yaSSL Embedded Web Server.<br /><br />From the Black Hat website, “The Black Hat Briefings are a series of highly technical information security conferences that bring together thought leaders from all facets of the infosec world - from the corporate and government sectors to academic and even underground researchers. The environment is strictly vendor-neutral and focused on the sharing of practical insights and timely , actionable knowledge.”<br /><br />We’re looking forward to being at the conference!  If you would like to set up a time to visit with us, or have any questions, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-6-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at OSCON 2012',
    'post_content' => 'Team yaSSL will be attending OSCON 2012 this year in Portland, Oregon.  This year’s conference will be held July 16th - 20th at the Oregon Convention Center.  If you are planning on attending this year’s O’Reilly OSCON and would like to visit with us, please let us know.  We always like to talk about open source software! You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />As stated by Zack Urlocker of <a href="http://www.infoworld.com/">InfoWorld</a>, “For those who have not been to OSCON, it`s a great technical conference covering the whole spectrum of open source, including Linux, MySQL, the LAMP stack, Perl, Python, Ruby on Rails, middleware, applications, cloud computing, and more. OSCON always has great keynotes, tutorials, and evening Birds-of-a-Feather sessions. As with many conferences, a lot of the meat takes place in hallway conversations and impromptu sessions."<br /><br />We hope to see you there!<br /><br />O’Reilly OSCON 2012:  <a href="http://www.oscon.com/oscon2012/">http://www.oscon.com/oscon2012/</a><br /><br />Slides from Todd Ouska’s presentation on Secure Memcache at OSCON 2010 can be found <a href="perma://BLPageReference/BE72E8B3-6A94-4859-A653-32DB2E3ACB23">here</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-6-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Sweepstakes: Win a New Apple iPad from yaSSL!',
    'post_content' => 'Would you like a chance to win a New Apple iPad (16GB, Wi-Fi) directly from yaSSL?  We’re conducting a short SSL survey (10 questions) and giving anyone who completes the survey a chance to enter into our drawing.  The prize drawing will be held August 1, 2012, and the contest is limited to one entry per individual.<br /><br />Begin the survey, here: <a href="http://www.surveymonkey.com/s/585N8LZ">http://www.surveymonkey.com/s/585N8LZ</a><br /><br /><b>Eligibility</b>: To be eligible to win you must be a legal resident of the fifty (50) United States or the District of Columbia and be at least eighteen (18) years old at the time of entry.<br /><br />We appreciate your time and feedback!  All results and comments will be taken into consideration to improve our products.  If you have any questions, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-6-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Case Study: wolfSSL enables Cinterion to Secure M2M Communication',
    'post_content' => 'yaSSL has released a case study highlighting how one of our customers, Cinterion, is using wolfSSL to secure machine-to-machine (M2M) communication modules.  This case study highlights the key requirements Cinterion had for securing Machine-to-Machine modules, how wolfSSL was used as a solution to easily secure these modules, and summarizes Cinterion’s thoughts on the project.<br /><br />Machine-to-Machine communication refers to either wired or wireless communication taking place between devices (such as sensors or meters).  To learn more about M2M, you will find the Wikipedia link, below.<br /><br />You can download the case study directly from the yaSSL website at the following location.  If you have any questions about using wolfSSL to secure M2M communication, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />wolfSSL / Cinterion (M2M) Case Study: <a href="http://www.yassl.com/files/casestudy/casestudy_yassl_cinterion.pdf">http://www.yassl.com/files/casestudy/casestudy_yassl_cinterion.pdf</a><br />Wikipedia (Machine-to-Machine): <a href="http://en.wikipedia.org/wiki/Machine-to-Machine">http://en.wikipedia.org/wiki/Machine-to-Machine</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-6-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL with Cavium NITROX Security Processors',
    'post_content' => 'wolfSSL will soon be getting support for the Cavium NITROX processors, thus enabling wolfSSL users to take advantage of the incredible performance boosts provided by the NITROX family.  Cavium’s NITROX processors combine cryptographic acceleration with the latest security algorithms providing an ideal platform for the next generation of security applications.<br /><br />The NITROX PX family can deliver performance ranging from 500 Mbps to 2.5 Gbps for full IPsec or SSL protocol offload, and anywhere from 4K to 17K RSA operations per second using 1024bit exponent RSA.  The NITROX III family can additionally boost IPsec or SSL offload performance to anywhere from 5 Gbps to 40 Gbps, and can provide 35K to 200K RSA operations per second using 1024bit exponent RSA.<br /><br />Are you interested in using wolfSSL with a Cavium NITROX processor?  If so, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />NITROX Security Processors:  <a href="https://www.cavium.com/processor_security.html">https://www.cavium.com/processor_security.html</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2012-6-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.2.0 is Now Available',
    'post_content' => 'Version 2.2.0 of the wolfSSL embedded SSL/TLS library has been released and is now available for download.  This release contains bug fixes, feature enhancements, and is a recommended update for all users. Changes include:<br /><br />- Initial CRL (Certificate Revocation Lists) support with --enable-crl<br />- Initial OCSP (Online Certificate Status Protocol) support with --enable-ocsp<br />	-	Static ECDH suites including:<br />	TLS_ECDH_RSA_WITH_AES_256_CBC_SHA<br />	TLS_ECDH_RSA_WITH_AES_128_CBC_SHA<br />	TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA<br />	TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA<br />	TLS_ECDH_RSA_WITH_RC4_128_SHA<br />	TLS_ECDH_ECDSA_WITH_RC4_128_SHA<br />	TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA<br />	TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA<br />- SHA-384 support<br />- ECC client certificate support<br /><br />For more information on CRL checkout: <a href="http://en.wikipedia.org/wiki/Certificate_revocation_list">http://en.wikipedia.org/wiki/Certificate_revocation_list</a> .  More details on OCSP can be found here: <a href="http://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol">http://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol</a> .  The example/client has basic usage and the full API will be available in the manual. The addition of SHA-384 support makes wolfSSL even more compatible with other SSL implementations such as OpenSSL.<br /><br />To download the open source, GPLv2-licensed version of wolfSSL 2.2.0, please visit our <a href="http://yassl.com/yaSSL/download/downloadForm.php">Download Page</a>.  If you have any questions or comments or would like more information on commercial versions of wolfSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />For build instructions, a full feature list, API reference, and more, please see the <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-toc.html">wolfSSL Manual</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-5-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Freescale Technology Forum 2012',
    'post_content' => 'The Freescale Technology Forum this year is taking place June 18-21 in San Antonio, Texas.  This Forum brings together a variety of individuals including embedded systems engineers, technical experts, business leaders, media, and analysts.  Throughout the four-day event, attendees will gain practical, forward thinking solutions through hundreds of hours of technical sessions and product demonstrations.  Attendees will also have the chance to visit with Freescale experts, industry experts, peers, media, analysts, and more to help work through problems and get questions answered quickly and effectively.<br /><br />If you’re interested in attending the Freescale Technology Forums this year, you can view package prices and register on the Freescale website, here: <a href="http://www.freescale.com/webapp/sps/site/overview.jsp?code=FTF_2012_AMERICA_HOME_CAT">http://www.freescale.com/webapp/sps/site/overview.jsp?code=FTF_2012_AMERICA_HOME_CAT</a>.<br /><br />If you are interested in using yaSSL’s products on a Freescale device and have questions, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2012-5-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Need yet another developer',
    'post_content' => 'Hi!  yaSSL is looking for another hard core C developer who like systems level work and the challenge of developing open source security software! We`re well positioned in the market, growing fast, have a great work environment for the right individual. Let us know if you`re interested or know someone who`d be a good fit.  Contact us at <a href="mailto:larry@yassl.com">larry@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-5-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Porting wolfSSL into OpenSSH',
    'post_content' => 'Hi!  This is a short note to let you know that we have ported wolfSSL into the sshd sources.  This effort was done for a customer of the wolfSSL embedded SSL product.  This particular customer of ours was looking for a version of OpenSSH with a smaller footprint, TLS 1.2 and some specialized ciphers.  Alpha versions of the code base can be made available to select members of our user base in June 2012, with wider availability in beta form on the 4th of July.    <br /><br />If you are interested in trying OpenSSH with wolfSSL, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-5-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Seattle MySQL Meetup Group Monthly Meeting:  Securing MySQL',
    'post_content' => 'The Seattle MySQL Meetup group holds a meeting each month to discuss items relevant to MySQL and open source projects in general.  yaSSL will be giving a presentation on MySQL security at the June meetup, being held on Monday, June 4, 2012 at 7:00pm.  To learn more about the meetup and RSVP, please visit the meetup page:<br /><br /><a href="http://www.meetup.com/seattlemysql/events/63039352/">http://www.meetup.com/seattlemysql/events/63039352/</a><br /><br /><b>Presentation Description:<br /></b><br />Because of the potential effects of either data loss or exposure, database security and administration is a necessity in today’s world. As a world leader in database solutions, MySQL has gained a large user base. These users are of varying skill level, some of which have focused heavily on database security and some who have never given it a second thought. This presentation will give users an overview of MySQL security practices with a main focus on configuring and building MySQL with SSL. It will provide an introductory walkthrough in MySQL security for the new MySQL admin and offer a refreshing review for the seasoned MySQL expert.<br /><br />This presentation will touch on several aspects of MySQL database security, including:<br /><br />- Good Security Practices for MySQL<br />	+ Setting Appropriate Passwords<br />	+ Securing Test Databases, mysqld<br />	+ mysql_secure_installation script<br />	+ Privileges<br /><br />- SSL/TLS in MySQL<br />	+ An Overview of SSL, x509<br />	+ Configuring and Building MySQL with SSL<br />	+ MySQL SSL Command Options<br />	+ SSL Certificate Creation<br />	+ Performance Comparison<br /><br />If you have questions about yaSSL’s upcoming presentation, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-5-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New features coming to wolfSSL in May',
    'post_content' => 'We`ve added some new features to wolfSSL that will go into the general release this month.  The features are:<br /><br />1.  Support for SHA-384<br />2.  Client ECC certificates<br />3.  Static ECDH<br />4.  GCM<br /><br />With the addition of SHA-384 and GCM, wolfSSL will become NSA Suite B compliant.<br /><br />If you need access to these features right away, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> and we can possibly arrange for an early private code drop.',
    'post_status' => 'publish',
    'post_date' => date('2012-5-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Supports SPDY',
    'post_content' => 'Hi yaSSL users!  See the following link for an explanation on SPDY:  <a href="http://www.readwriteweb.com/hack/2012/04/what-web-users-need-to-know-ab.php">http://www.readwriteweb.com/hack/2012/04/what-web-users-need-to-know-ab.php</a><br /><br />SPDY is a new protocol for web use proposed by Google and supported by many of the large web companies.  It is based on HTTP, but it is faster and more suited to modern web usage.  <br /><br />You will note that SPDY mandates SSL, which will provide everyone more security in their day to day web use.  We should also note that our friends at NGINX are supporting SPDY.<br /><br />If you have comments or questions on running wolfSSL with SPDY, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-5-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Live from Infosecurity Europe 2012',
    'post_content' => 'Day two of the 2012 Infosecurity Europe conference (#infosec12) is underway at Earl’s Court in London as visitors and exhibitors discuss the new technology coming out regarding security products and services.  yaSSL has been talking about embedded SSL and embedded web servers at booth J64, and has given a talk on the usability and necessity of SSL / TLS on day one of the conference.  <br /><br />We would like to thank those who attended the presentation, and encourage you to send any questions about either the presentation or yaSSL’s products to <a href="mailto:info@yassl.com">info@yassl.com</a>.  If you would like a copy of the slides, please email us a request, or watch our site.  We’ll get the slides posted as soon as possible.<br /><br />If you are currently attending (or plan to attend) the conference, we encourage you to stop by the yaSSL booth to say hello!<br /><br />Thanks,<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2012-4-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Secure Communication: Usability & Necessity of SSL/TLS',
    'post_content' => 'Network-related applications and devices often use secure communication. Although keeping network communications safe should be a top priority to all developers and engineers, it often gets left behind due to lack of understanding, insufficient funding, or looming deadlines.<br /><br />Securing a project with SSL shouldn’t have to include a steep learning curve, deep pockets, or an unlimited time frame. By learning a few basics of how things work, where the technology is best used, and what features to look for when trying to choose the right SSL implementation, a developer or engineer can easily, simply, and quickly secure their project - putting both themselves and their employer’s minds at ease.<br /><br />yaSSL will be giving a presentation at the upcoming Infosecurity Europe conference next week which will address these issues.  yaSSL’s presentation will introduce SSL - including why secure communication is important, introductory details about SSL, x509, and the underlying cryptography. It will give an overview of where SSL is used today - including Home Energy, Gaming, Databases, Sensors, VoIP, and more. A description and “shopping list” of important items to look for when trying to choose an SSL implementation will give developers and engineers a solid foundation to begin securing their projects with SSL and will enable them to have more informed discussions with potential vendors on the expo floor at Infosecurity Europe 2012.<br /><br /><b>Date: </b>  April 24, 2012<br /><b>Time:</b>  12:40pm - 1:05pm<br /><b>Location:</b>  Technical Theater (at Infosecurity Europe, Earl’s Court, London, England)<br /><b>Speaker: </b> Chris Conlon<br /><br />Infosecurity Europe:  <a href="http://www.infosec.co.uk/">http://www.infosec.co.uk</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-4-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Great Article on SSL Interception Proxies and Transitive Trust',
    'post_content' => 'We recently found a great article on SSL/TLS interception proxies and transitive trust from Jeff Jarmoc at Dell SecureWorks.  In his article, Jeff provides a brief introduction, background, and history of the SSL and TLS protocols, then dives into talking about SSL interception proxies.<br /><br />Reading through the article gives insights into how and why these proxies are used in the real world and explains some of the major risks associated with their use.  Although risks can range anywhere from legal exposure to an increased threat surface to a potential for decreased cipher strength, these proxies are a necessary part of many networks.<br /><br />Jeff introduces a helpful test framework (linked below) for determining which (if any) vulnerabilities an SSL proxy is susceptible to.  The framework is designed to be run from behind the proxy, and is as simple as visiting a web page.  Following an explanation of some of these vulnerabilities, Jeff lists some of the current vulnerabilities found in existing proxy solutions today.<br /><br />The wolfSSL embedded SSL library has had the ability to do SSL inspection for quite some time now, as we originally posted about it in <a href="perma://BLPageReference/1DFDD280-F507-47B9-8AB7-3A1D0B12E31D">September of 2010</a>.  If you have any questions about wolfSSL’s SSL inspection, please feel free to contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br /><a href="http://www.secureworks.com/research/threats/transitive-trust/">Transitive Trust: SSL/TLS Interception Proxies and Transitive Trust</a><br />Proxy Test Framework: <a href="https://ssltest.offenseindepth.com/">https://ssltest.offenseindepth.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-4-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Article on Security Fundamentals for Embedded Software',
    'post_content' => 'We recently read a good article from EE Times about security fundamentals for embedded software.  This article points out that embedded software and device developers should take security precautions into consideration, as many developers assume that their applications or devices are not vulnerable to attack.<br /><br />Topics covered in the article include doing a “threat analysis” to determine how attackers could attack an embedded device, things to keep in mind when developing embedded software systems, and common mistakes made by embedded developers which can easily lead to vulnerability.<br /><br />Article:  <a href="http://www.eetimes.com/design/embedded/4304104/Security-fundamentals-for-embedded-software?pageNumber=0&Ecosystem=embedded#">Security fundamentals for embedded software</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-4-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'GCM Encryption Mode Coming Soon to wolfSSL',
    'post_content' => 'A while back, we posted that the wolfSSL embedded SSL library would be getting support for Galois/Counter Mode (GCM) encryption in the near future.  This is still true!  If everything goes as planned, GCM support should be generally available for wolfSSL in June of this year.  Specifically, GCM will be used in wolfSSL with AES and as a cipher suite for SSL.  <br /><br />One of the benefits of GCM is its efficiency and performance in both hardware and software.  Galois/Counter Mode (GCM) for block ciphers incorporates both CTR (counter mode) as well as a message authentication code (MAC), providing both integrity and confidentiality.  It is designed for block ciphers with a block size of 128 bits and is able to take full advantage of parallel processing and pipelining.  Referencing the Wikipedia article on GCM, “the key feature is that the Galois field multiplication used for authentication can be easily computed in parallel thus permitting higher throughput than the authentication algorithms that use chaining modes, like CBC.”<br /><br />To learn more about the performance and security details of GCM, you can visit the Wikipedia page listed below.  We expect to see GCM more widely adopted in the near future.  If you`re interested in testing AES with GCM or have any question or comments please let us know.<br /><br />GCM (Wikipedia):  <a href="http://en.wikipedia.org/wiki/Galois/Counter_Mode">http://en.wikipedia.org/wiki/Galois/Counter_Mode</a><br />RFC 5288 (AES Galois Counter Mode (GCM) Cipher Suites for TLS): <a href="https://tools.ietf.org/html/rfc5288">https://tools.ietf.org/html/rfc5288</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-4-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be exhibiting at Infosecurity Europe 2012',
    'post_content' => 'yaSSL will be exhibiting at the 2012 Infosecurity Europe Conference and Exhibition (#infosec12) to be held at Earl’s Court, London, England on April 24-26, 2012.  If you’re planning on attending the conference, please stop by the yaSSL booth (Booth J64) to discuss the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you have any questions, or would like to set up a meeting with us at the conference, please let us know by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Registration for the Infosecurity Europe conference is FREE.  More information on the conference can be found at the following link:<br /><br />2012 Infosecurity Europe:  <a href="http://www.infosec.co.uk">http://www.infosec.co.uk</a>/',
    'post_status' => 'publish',
    'post_date' => date('2012-4-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Feedback Requested on wolfSSL and Qt Integration',
    'post_content' => 'Would you like to see the wolfSSL embedded SSL library integrated into the popular Qt framework?  We’ve been throwing around the idea of adding wolfSSL support to Qt and want to hear your feedback.  If wolfSSL was integrated into Qt, it would be available as a build option and alternative to using Qt with OpenSSL.<br /><br />wolfSSL could provide the Qt framework with a much smaller footprint when compared to using Qt with OpenSSL.  Looking at typical build sizes of both wolfSSL and OpenSSL, it is typical to see a 20X decrease in footprint size.<br /><br />What do you think?  Please let us know your thoughts, comments, and feedback at <a href="mailto:info@yassl.com">info@yassl.com</a>, or by posting in our related thread in our forums.<br /><br />Qt (Nokia):  <a href="http://qt.nokia.com">http://qt.nokia.com</a><br />Qt (Wikipedia):  <a href="http://en.wikipedia.org/wiki/Qt_(framework">http://en.wikipedia.org/wiki/Qt_(framework</a>)',
    'post_status' => 'publish',
    'post_date' => date('2012-4-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Live from DESIGN West 2012',
    'post_content' => 'The 2012 DESIGN West conference in underway in San Jose, CA this week. With thousands of attendees anxious to learn about new embedded technology, chips, operating systems, and methods, yaSSL is having a great time talking about embedded SSL, SSL proxies, and embedded web servers.<br /><br />If you`re attending DESIGN West this year, stop by the yaSSL booth to say hello! We`re located in booth #2239 and will be on the expo floor both Wednesday and Thursday. If you would like to set up an individual meeting with yaSSL this week, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2012-3-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Exhibiting at DESIGN West 2012',
    'post_content' => 'yaSSL will be attending the DESIGN West 2012 next week in San Jose, CA.  DESIGN West is a collection of summits including ESC, Android, Black Hat, DesignMED, Multicore DevCon, Designing with LEDs, and Sensors in Design. DESIGN West brings together the largest community of designers, technologists, business leaders, and suppliers all in one place.  The conference will be held in the McEnery Convention Center in San Jose, CA on March 26-29, 2012.<br /><br />If you’re planning on attending, please stop by the yaSSL booth (<b>Booth 2239</b>) to discuss the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you have any questions, or would like to set up a meeting with us at the conference, please let us know by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We look forward to seeing you there!<br /><br />DESIGN West 2012:  <a href="http://www.ubmdesign.com/">http://www.ubmdesign.com</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2012-3-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Article on Wireless Sensor Networks',
    'post_content' => 'We would like to recommend an article from EE Times that we recently read which talks about the design and challenges of wireless sensor networks.  This article explains some of the challenges faced when implementing a wireless sensor network and the different architectures which can be used, including both clustered sensor architectures and layered architectures.  <br /><br />Sensor networks offer many advantages - they actively provide a robust, reliable, accurate, and fault tolerant network to a wide range of application areas. Applications of wireless sensor networks currently include seismic, thermal, visual, infrared, and other areas within commercial, consumer, government, and academic fields.<br /><br />One of the challenges that wireless sensor networks face include a necessity for secure, low-power, resource-constrained nodes. The wolfSSL embedded SSL library is ideal for helping secure communication between such nodes because of it’s low resource (ROM/RAM) usage and easy portability to such small devices. To learn more about wolfSSL’s resource usage, you can visit the product page, <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">here</a>.<br /><br />In the upcoming weeks, yaSSL will be releasing a case study highlighting how one of our customers is using wolfSSL to secure machine-to-machine (M2M) communication, and how wolfSSL has helped overcome some of the challenges outlined in this article.  Stay tuned to our blog for updates!<br /><br />Article:  <a href="http://www.eetimes.com/design/embedded/4237855/Building-wireless-M2M---IoT-sensor-networks--issues-and-challenges?pageNumber=0">Building wireless M2M & IoT sensor networks: issues and challenges</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-3-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Your Feedback Requested on Camellia Cipher in wolfSSL',
    'post_content' => 'Team yaSSL has recently been considering the addition of the Camellia block cipher to the wolfSSL embedded SSL library, and we would like to request your feedback on this addition.  Do you think it would be a beneficial addition?  If it was added to wolfSSL, would you be interested in using it?  Because we strive to shape our SSL library around what our users want and need, we greatly value your feedback.<br /><br />If you are unfamiliar with the Camellia block cipher, you can find a Wikipedia article on the cipher here: <a href="http://en.wikipedia.org/wiki/Camellia_(cipher)">http://en.wikipedia.org/wiki/Camellia_(cipher)</a>, or the Camellia cipher’s English homepage, here: <a href="http://info.isl.ntt.co.jp/crypt/eng/camellia/index.html">http://info.isl.ntt.co.jp/crypt/eng/camellia/index.html</a>.<br /><br />Please send any feedback to <a href="mailto:info@yassl.com">info@yassl.com</a>!<br /><br />Thanks!<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2012-3-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Live from the GDC 2012 Expo',
    'post_content' => 'The 2012 Game Developers Conference expo is in progress.  There has been a wide variety of people wandering around the floor to learn about new technologies, engines, sdks, tools, and games that will help advance the gaming industry in the upcoming year.<br /><br />In booth 743, yaSSL is talking about SSL and how SSL/TLS can be used to secure both games and gaming platforms.  You may not have realized it, but wolfSSL is very popular for gaming development and is currently in use in millions of games.  Some of the reasons for wolfSSL’s popularity for securing games include:<br /><br />1.  <b>Experience</b>:  The yaSSL team has been supplying game developers with an efficient, portable SSL Stack for years.<br /><br />2.  <b>Small</b>:  Our code size is small.  We won`t bog down your game.<br /><br />3.  <b>Portable</b>:  We run on all the major gaming consoles/platforms and some of the minor ones.<br /><br />4.  <b>Scalable</b>:  Building a MMPORG and require security?  We have experience helping with that too.  wolfSSL won`t consume all of your server`s memory.<br /><br />5.  <b>Streaming media</b>:  wolfSSL was built with securing streaming media in mind.<br /><br />Let us know if you have questions.  If you are a game developer and would like to speak with our references in the gaming industry, just email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.  In addition, if you’re attending GDC this year, please stop by our booth to learn more and have a chance to meet the yaSSL team!<br /><br />To view additional pictures from yaSSL at GDC, please visit our facebook page: <a href="http://www.facebook.com/cyassl">http://www.facebook.com/cyassl</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-3-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at RSA 2012',
    'post_content' => 'The 2012 RSA Conference in San Francisco wrapped up last week.  yaSSL exhibited at the conference and is happy to report a successful show.  We talked to a number of people about the wolfSSL embedded SSL library and the yaSSL Embedded Web Server, had some great meetings, and enjoyed spending time with our partners in the bay area.<br /><br />If you weren’t able to attend the conference, or still have outstanding questions about SSL, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.  We’re always happy to visit and help your project get to market as quickly as possible.<br /><br />Stay tuned for information regarding yaSSL exhibiting at the 2012 Game Developer this next week!',
    'post_status' => 'publish',
    'post_date' => date('2012-3-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0.8 is Now Available',
    'post_content' => 'Version 2.0.8 of the wolfSSL embedded SSL/TLS library has been released and is now available for download.  This release contains bug fixes, some feature enhancements, and is a recommended update for all users:<br /><br />- A fix for malicious certificates pointed out by Remi Gacogne (thanks!) resulting in NULL pointer use.<br />- Respond to renegotiation attempt with no_renegoatation alert<br />- Add basic path support for load_verify_locations()<br />- Add set Temp EC-DHE key size<br />- Extra checks on RSA test when porting into <br /><br />To download the open source, GPLv2-licensed version of wolfSSL 2.0.8, please visit our <a href="http://yassl.com/yaSSL/Download.html">Download Page</a>.  If you have any questions or comments or would like more information on commercial versions of wolfSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />For build instructions, a full feature list, API reference, and more, please see the <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-toc.html">wolfSSL Manual</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-2-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL working with Nginx',
    'post_content' => 'Hi!  We have been asked a number of times about wolfSSL integration with the Nginx web server.  If you are not familiar with Nginx, it is a high performance, high concurrency web server that is becoming extremely popular these days.  You can learn more about Nginx at <a href="http://nginx.com/">nginx.com</a>.<br /><br />Nginx and wolfSSL make a likely pairing because they are both lean, compact, fast, and scale well under high volumes of connections.  The big news today is that wolfSSL is now working with Nginx in the lab, and we expect it to become generally available in the near future.  At this time, we are seeking feedback from those who are particularly interested in using wolfSSL with Nginx and would like to work with us as beta testers.  Let us know what you think at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2012-2-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OpenSSL in Devices gets cracked when trying to "enhance" randomness',
    'post_content' => 'Hi!  The security world has been buzzing this week about two new sets of research into what we will call statistical key cracking.  The hack is one that we would not expect out of your average script kiddie, because it combines sophisticated scanning with mathematical prowess.  The overview story is the first link below.  The second and third links take you to the researchers previews.<br /><br /><a href="http://arstechnica.com/business/news/2012/02/crypto-shocker-four-of-every-1000-public-keys-provide-no-security.ars?comments=1#comments-bar">http://arstechnica.com/business/news/2012/02/crypto-shocker-four-of-every-1000-public-keys-provide-no-security.ars?comments=1#comments-bar</a><br /><br /><a href="http://eprint.iacr.org/2012/064.pdf">http://eprint.iacr.org/2012/064.pdf</a><br /><br /><a href="https://freedom-to-tinker.com/blog/nadiah/new-research-theres-no-need-panic-over-factorable-keys-just-mind-your-ps-and-qs">https://freedom-to-tinker.com/blog/nadiah/new-research-theres-no-need-panic-over-factorable-keys-just-mind-your-ps-and-qs</a><br /><br />We are particularly interested in the work from Nadia Heninger and her team, given that our user base is skewed towards embedded systems.<br /><br />Our takeaways from this new research are high entropy seeds are vital to proper key generation.  If a high entropy device is available use it, if not, don`t try to write your own.  Connect securely to a remote server where a high entropy seed can be relayed over the SSL/TLS connection.  And don`t stir the RNG between (p) and (q) generation.  This crack is based on a low entropy seed and the stirring between (p) and (q) generation.  wolfSSL avoids this problem in two ways, by using a high entropy seed from /dev/random and by not stirring between (p) and (q) but before each (p) instead.',
    'post_status' => 'publish',
    'post_date' => date('2012-2-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and LibSCS',
    'post_content' => 'wolfSSL is now available as a crypto provider for KoanLogic’s SCS library, LibSCS.  SCS, a small cryptographic protocol layered on top of the HTTP cookie facility [<a href="http://tools.ietf.org/html/rfc6265">RFC6265</a>], allows its users to produce and consume authenticated and encrypted cookies, as opposed to usual cookies, which are un-authenticated and sent in clear text.<br /><br />From the LibSCS README, “By having a non-tamperable proof of authorship attached, each SCS cookie can always be validated by the originator, making it possible for a server to handle clients` session state without the need to store it locally.  In fact, an SCS enabled server could completely delegate the application state storage to the client (e.g. a web browser) and use it, in all respects, as a remote storage device.  The result of the cryptographic transformations applied to state data can be used to ensure that its information authenticity and confidentiality attributes are the same as if they were stored privately on server-side.”<br /><br />You can build LibSCS with wolfSSL by running the following commands.  You must have KoanLogic’s makl installed on your development machine (<a href="http://koanlogic.com/makl/">http://koanlogic.com/makl/</a>) to build the package.  See the libscs README and INSTALL files for more detailed instructions.<br /><br />makl-conf --crypto=cyassl<br />makl<br /><br />libscs GitHub repository:  <a href="https://github.com/koanlogic/LibSCS">https://github.com/koanlogic/LibSCS</a><br /><br />If you have any questions about wolfSSL with LibSCS, please contact KoanLogic (info@koanlogic) or yaSSL (info@yassl.com).',
    'post_status' => 'publish',
    'post_date' => date('2012-2-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The Gravity',
    'post_content' => 'yaSSL currently secures over 50 million points on the internet.  We don`t talk about who is using wolfSSL, for obvious reasons, but the numbers are big and growing.  <br /><br />We take our work seriously, and hope you feel comfortable with our efforts.  We endeavor to build a business, a community, and do the right thing.  We welcome your feedback.  If you believe that we have failed at some point, then let us know.  We`ll correct it.  We`re open source and open minded about what you have to say.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> and let us know how we`re doing!',
    'post_status' => 'publish',
    'post_date' => date('2012-2-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Free RSA Expo Hall Invites from yaSSL!',
    'post_content' => 'Are you planning on attending the 2012 RSA conference later this month?  The conference is being held February 27 through March 2, 2012 at Moscone Center in San Francisco, CA.  yaSSL will be exhibiting in <b>booth 330</b> this year and is looking forward to talking about the wolfSSL embedded SSL library, the yaSSL Embedded Web Server, and new progress we’ve made in the last year.<br /><br />If you are interested in attending the Expo, yaSSL would like to offer you a free pass!  Just use the following promo code when registering for an Expo pass on the RSA conference website.  The deadline to use the following pass code is February 24, 2012.<br /><br /><b>Expo Pass Code</b>: EC12YAS<br />Registration site:  <a href="http://rsaconference.com/events/2012/usa/registration.htm">http://rsaconference.com/events/2012/usa/registration.htm</a><br /><br />We look forward to seeing you there!  If you have any pre-conference questions about our products, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> and we’ll be happy to help.',
    'post_status' => 'publish',
    'post_date' => date('2012-2-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at FOSDEM 2012',
    'post_content' => 'yaSSL would like to thank all those who attended our 2010-2011 “Technical / Community Update” in the Hardware Cryptography devroom at FOSDEM 2012 this week in Brussels, Belgium.  We appreciate your support and enjoy keeping you informed on new progress we make with the wolfSSL embedded SSL library and yaSSL Embedded Web Server.<br /><br />If you missed our presentation, we will be putting our slides and presentation up online shortly.  Stay tuned to our blog for updates and relevant links.  If you were in attendance, we’d love to hear your feedback on our presentation or our 2010-2011 progress.  What do you think yaSSL should improve upon in 2012?  Are you looking for specific features or platform support which we currently don’t have?  We value your feedback and suggestions, and welcome you to contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks for your support!<br />- Team yaSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2012-2-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL FreeRTOS / OpenRTOS Support',
    'post_content' => 'Did you know that the wolfSSL embedded SSL library supports FreeRTOS and OpenRTOS?  FreeRTOS is a real-time operating system for embedded devices which is designed to be both small and simple.  With an incredibly large user base, FreeRTOS/OpenRTOS supports 27 architectures and is downloaded from over 77 thousand times every year!<br /><br />Just like wolfSSL, FreeRTOS is open source, royalty free, and very portable.  To build wolfSSL for FreeRTOS, uncomment the #define for FREERTOS in ./cyassl/ctaocrypt/settings.h.<br /><br />You can find a full list of FreeRTOS features on the FreeRTOS/OpenRTOS website.  To learn more about wolfSSL, please visit the wolfSSL <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">product page</a>.  If you have any questions about using wolfSSL with FreeRTOS, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />FreeRTOS / OpenRTOS:  <a href="http://www.freertos.org">http://www.freertos.org</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-1-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be Attending FOSDEM 2012',
    'post_content' => 'yaSSL will be attending FOSDEM 2012 in Brussels, Belgium next week - February 4-5, 2012.  We’ll be making an attempt to visit with many of the open source projects attending the conference.  If you are attending and want to visit about wolfSSL or the yaSSL Embedded Web Server, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a> and we can try to set up a time to meet.<br /><br />We are also planning on giving an overview of yaSSL’s technical and community progress in the past year in the Security Devroom.  We’ll keep you posted on further details of this as the schedule solidifies in the next week.<br /><br />If you haven’t heard of FOSDEM, it is a free and non-commercial event organized by the community for the community.  It has several goals, including providing Free Software and Open Source developers and communities a place to meet to get in touch, be informed about current developments in the open source world, attend interesting talks, and promote the development of open source solutions.  <br /><br />FOSDEM is free to attend, and registration is not necessary, so if you’re going to be in the area, stop by and say hello!<br /><br />FOSDEM 2012:  <a href="http://www.fosdem.org/2012">http://www.fosdem.org/2012</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-1-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL 2011 Annual Report on MarketWatch.com',
    'post_content' => 'Our 2011 annual report is now up on MarketWatch.com (see link below).  yaSSL saw some great progress in 2011 which was very exciting!  We’re looking forward to 2012 and seeing what the new year brings.  If you have any questions about our annual report, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />yaSSL 2011 Annual Report (MarketWatch): <br /><a href="http://www.marketwatch.com/story/yassl-marks-growth-of-embedded-ssl-in-findings-from-2011-annual-report-2012-01-23">http://www.marketwatch.com/story/yassl-marks-growth-of-embedded-ssl-in-findings-from-2011-annual-report-2012-01-23</a><br /><br />Thanks!<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2012-1-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Interesting Article on Device Level Security',
    'post_content' => 'As the security of individual field devices (sensors, transmitters, acuators, etc.) is often overlooked, these devices can provide a target for cyber attacks.  This article by Matt Luallen of <a href="http://www.controleng.com/single-article/security-at-the-device-level/bb4c8b1ea5.html">Control Engineering</a> explains this fact in more detail - once again reminding us that security of such devices should not be taken lightly.  Luallen states that “If your technicians can configure a field device through the control system, dedicated handheld tools, or by plugging in a laptop to the network, an attacker can do the same thing if he follows the right path.”  <br /><br />Secure communication is an important building block of device security.  The wolfSSL embedded SSL library has been designed for resource-constrained embedded systems and can easily be added to your device.  To learn more about wolfSSL and how it can help with your device security, feel free to contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Security At The Device Level:  <a href="http://www.controleng.com/single-article/security-at-the-device-level/bb4c8b1ea5.html">http://www.controleng.com/single-article/security-at-the-device-level/bb4c8b1ea5.html</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-1-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Attending CES 2012',
    'post_content' => 'yaSSL will be attending CES 2012 this week.  With the first conference taking place in 1967, the International Consumer Electronics Show (CES) is now the world’s largest consumer technology tradeshow.  With 140,000 industry professionals in attendance, approximately 20,000 new consumer electronics products are launched at CES each year.<br /><br />CES 2012 will be held at the LVCC/Las Vegas Hilton and The Venetian in Las Vegas, January 10-13 (Tuesday - Friday), 2012.<br /><br />If you are planning on attending the International CES this year and would like to visit or meet, please let us know!  You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />International CES 2012:  <a href="http://www.cesweb.org/">http://www.cesweb.org</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2012-1-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL 2011 Annual Report',
    'post_content' => 'yaSSL has made great progress 2011!  Company growth, active partnerships, technical improvements, and our community have all made great strides forward.  We are very happy with the results of 2011 and look forward to an exciting year in 2012!  Looking to 2012, we are planning ongoing improvements to our technology and have doubled our technical resources in order to better serve our users in 2012.  <br /><br />Listed below is an overview of our progress in 2011.<br /><br /><b>Business and Company Progress<br /></b><br />1.  We participated and/or exhibited in the following events: FOSDEM, ESC Silicon Valley, O`Reilly MySQL Conference & Expo, RSA Conference, Game Developers Conference, Infosecurity Europe, OSCON, ESC Boston, and the ARM Technology Conference<br /><br />2.  We gave presentations at both FOSDEM 2011 (Lightning Talk) and the 2011 O`Reilly MySQL Conference (Securing MySQL with a Focus on SSL) and published an article in the Linux Journal (Installing an Alternate SSL Provider on Android).  Our presentations can be found on our <a href="http://yassl.com/yaSSL/Docs-media.html">Media page</a>.<br /><br />3.  We made significant improvements to our documentation (including the <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-toc.html">wolfSSL Manual</a>, <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-17-cyassl-api-reference.html">wolfSSL API Reference</a>, and <a href="http://yassl.com/yaSSL/Docs-cyassl-manual-11-ssl-tutorial.html">SSL Tutorial</a>) and to our <a href="http://yassl.com/yaSSL/Home.html">website</a>.<br /><br />4.  Our customer base doubled in 2011 and we increased our revenues by 5X.<br /><br /><b>Meaningful progress with our partner community:<br /></b><br />1.  ARM:  wolfSSL is now included in the ARM / Avnet Embedded Software Store (<a href="http://www.embeddedsoftwarestore.com">www.embeddedsoftwarestore.com</a>).<br />2.  Intel:  Continued a successful partnership with Intel, along with becoming a general member of the Intel Embedded Alliance<br />3.  We added Security Innovation and SkypeKit as a new partners.<br />4.  We added KoanLogic as a new partner.<br /><br /><b>wolfSSL Technical Progress<br /></b><br />Feature highlights from our five releases of the wolfSSL embedded SSL library in 2011 include:<br /><br />1.  Added Elliptic Curve (ECC) cipher suites to wolfSSL<br />2.  Added support for ECC, EC-DSA, and EC-DH to our CTaoCrypt crypto library<br />3.  Better TLS 1.2 support through more comprehensive interoperability testing with other SSL implementations<br />4.  Added SHA256 cipher suites and certificate signatures<br />5.  Added PKCS8 private key encryption support<br />6.  Added Password based key derivation function 2 (PBKDF2)<br />7.  Added PKCS #12 PBKDF support as part of our plan to get to full PKCS12 support<br />8.  Included UID parsing for x509 certificates<br />9.  Included runtime memory hooks for users wanting to change memory functions at runtime<br />10.  Added runtime hooks for customizable logging ability<br />11.  Added compiler function visibility and better naming for less namespace pollution<br />12.  Created simpler header structure for users<br />13.  Added make test support<br />14.  CTaoCrypt runtime library detection ability<br />15.  Added AES counter (CTR) mode<br />16.  EDH on both client and server sides<br />17.  Made NTRU Cipher Suites available<br /><br /><b>yaSSL Embedded Web Server Progress<br /></b><br />1.  Released version 0.2 with bug fixes and feature enhancements<br />	1.	 Improved documentation and examples<br /><br /><b>Porting Progress<br /></b><br />1.  CURL port.  wolfSSL can now be built with CURL (as a build option).<br />2.  Mbed Release.  wolfSSL was ported to Mbed in late 2010 and is now available for the Mbed cloud compiler.<br />3.  KLone Web Application Framework.  wolfSSL is now ported to the KLone Web Application Framework by KoanLogic.<br />4.  memcached patch.  wolfSSL now provides SSL security for memcache.<br />5.  FreeRTOS support.  wolfSSL now supports FreeRTOS/OpenRTOS.<br />6.  Haiku OS.  wolfSSL now works with the Haiku Operating System.<br />7.  lwIP support.  wolfSSL now supports running on top of lwIP.<br />8.  Microchip pic32 support.  wolfSSL now supports running on the pic32.<br />9.  reSIPprocate port<br />10.  We now support wpa_supplicant as a compile time option.<br />11.  Added hostapd support<br />12.  Apple TV port:  wolfSSL and yasslEWS now can be run on the Apple TV.<br />13.  Added wolfSSL crypto provider to MIT Kerberos library.<br />14.  wolfSSL Android NDK package.  wolfSSL can now be used in Android NDK applications.<br />15.  Ported MIT Kerberos to Android using Google’s Android NDK.<br /><br /><b>Code & Community<br /></b><br />1.  Migrated wolfSSL code to GitHub<br />2.  Introduced the yaSSL Support Forums<br />3.  Added BMX6 to the wolfSSL Community<br /><br />We are looking forward to the upcoming year and sharing new features and technology improvements with our embedded SSL users and community.',
    'post_status' => 'publish',
    'post_date' => date('2012-1-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server Porting Services',
    'post_content' => 'Are you interested in using the yaSSL Embedded Web Server in your project or on your device but have discovered that it currently lacks support for your desired platform?  yaSSL offers a porting service for the yaSSL Embedded Web Server for just this occasion.<br /><br />If you are interested in having us port the yaSSL Embedded Web Server to your platform, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> for more information about cost and time estimates.',
    'post_status' => 'publish',
    'post_date' => date('2012-1-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Born in the USA!',
    'post_content' => 'We receive a lot of questions about the origins of the wolfSSL and CTaoCrypt software packages.  We get asked where they were developed, and by who?  These questions usually come from US government agencies and their contractors.  Simply stated, mes amis, wolfSSL was <a href="http://www.youtube.com/watch?v=tIekamBDiAw">Born in the USA</a> and written by <a href="http://www.youtube.com/watch?v=lMsIrKjSM6Y">US citizens</a>. <br /><br />If you have any additional questions about the origins of the wolfSSL embedded SSL library, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2012-1-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL in Dropbear',
    'post_content' => 'Hi!  Would you be interested in wolfSSL ported into <a href="http://matt.ucc.asn.au/dropbear/dropbear.html">Dropbear</a>? We have been thinking about putting wolfSSL into Dropbear SSH, and would like your feedback.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you think wolfSSL should be ported into Dropbear.',
    'post_status' => 'publish',
    'post_date' => date('2012-1-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Benchmarking the wolfSSL Embedded SSL Library',
    'post_content' => 'Many of our users are curious about how the wolfSSL embedded SSL library will perform on a specific hardware device or in a specific environment.  Because of the wide variety of different platforms and compilers used today in embedded, enterprise, and cloud-based environments, it is hard for us to give generic performance calculations across the board.<br /><br />To help our users and customers in determining SSL performance for wolfSSL / CTaoCrypt, we provide a benchmark application which is bundled with wolfSSL.  wolfSSL uses the CTaoCrypt cryptography library for all crypto operations by default.  Because the underlying crypto is a very performance-critical aspect of SSL/TLS, our benchmark application runs performance tests on CTaoCrypt’s algorithms.  <br /><br />The benchmark utility is located in ctaocrypt/benchmark.  Typical output may look like:<br /><br />./ctaocrypt/benchmark/benchmark<br />AES      5 megs took 0.033 seconds, 149.84 MB/s<br />ARC4     5 megs took 0.017 seconds, 297.23 MB/s<br />HC128    5 megs took 0.004 seconds, 1185.10 MB/s<br />RABBIT   5 megs took 0.011 seconds, 453.14 MB/s<br />3DES     5 megs took 0.236 seconds,  21.18 MB/s<br /><br />MD5      5 megs took 0.011 seconds, 444.13 MB/s<br />SHA      5 megs took 0.019 seconds, 261.73 MB/s<br />SHA-256  5 megs took 0.041 seconds, 122.98 MB/s<br />SHA-512  5 megs took 0.023 seconds, 213.44 MB/s<br /><br />RSA 2048 encryption took   0.11 milliseconds, avg over 100 iterations<br />RSA 2048 decryption took   2.36 milliseconds, avg over 100 iterations<br />DH  2048 key generation    0.88 milliseconds, avg over 100 iterations<br />DH  2048 key agreement     0.92 milliseconds, avg over 100 iterations<br /><br />This is especially useful for comparing the public key speed before and after changing the math library. You can test the results using the normal math library (./configure), the fastmath library (./configure --enable-fastmath), and the fasthugemath library (./configure --enable-fasthugemath).<br /><br />As always, please contact <a href="mailto:info@yassl.com">info@yassl.com</a> with any questions or comments.',
    'post_status' => 'publish',
    'post_date' => date('2011-12-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Supporting the GOST Block Cipher in wolfSSL',
    'post_content' => 'Hi!  Team yaSSL has been considering the addition of the GOST block cipher to our wolfSSL embedded SSL library.  If you are unfamiliar with GOST, there is a great wikipedia article here:  <a href="http://en.wikipedia.org/wiki/GOST_(block_cipher).">http://en.wikipedia.org/wiki/GOST_(block_cipher).</a>  If you think wolfSSL should include GOST, then let us know.  We appreciate your feedback.  Just contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-12-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'GCM Encryption Mode Coming to wolfSSL',
    'post_content' => 'We`ve started implementing Galois/Counter Mode (GCM) into wolfSSL.  Specifically for use with AES and as a cipher suite for embedded SSL.  One of the benefits of GCM is its efficiency and its performance appears to be pretty good as well.  As an authenticated encryption algorithm it provides both integrity and confidentiality.  We expect to see it more widely adopted in the near future.  If you`re interested in testing AES with GCM or have any question or comments please let us know.<br /><br />GCM (Wikipedia):  <a href="http://en.wikipedia.org/wiki/Galois/Counter_Mode">http://en.wikipedia.org/wiki/Galois/Counter_Mode</a><br /><br />-Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-12-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL in the Embedded Software Store',
    'post_content' => 'A short time ago, we announced the unveiling of the online Embedded Software Store by ARM and Avnet (<a href="perma://BLPageReference/44409DEB-C42F-4415-B987-4EADEB49B1BE">previous post</a>).  Since that time, there has been some feedback on the site itself and many bugs and errors have been fixed.<br /><br />We wanted to point our readers to the wolfSSL product page on the Embedded Software Store, now that it has been updated.  Do you have any feedback on the store itself or on the wolfSSL product page?  Do you like the idea of having an online store for your embedded software needs?<br /><br /><b>wolfSSL Product Page </b>(Embedded Software Store):  <br /><a href="http://embeddedsoftwarestore.com/store/em/SearchCommand?storeId=500201&langId=-1&catalogId=500201&action=Product&R=5001841600038">http://embeddedsoftwarestore.com/store/em/SearchCommand?storeId=500201&langId=-1&catalogId=500201&action=Product&R=5001841600038</a><br /><br />We look forward to hearing your thoughts at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks!<br />- yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-12-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0.2 is Now Available',
    'post_content' => 'Version 2.0.2 of the wolfSSL embedded SSL/TLS library has been released and is now available for download!  The first final release of wolfSSL 2.0 after three release candidates provides users and customers with additional bug fixes and feature enhancements.  Specifically, version 2.0.2 adds:<br /><br />	-	Bug fixes<br />	-	CTaoCrypt Runtime library detection settings when directly using the crypto library<br />	-	Default certificate generation now uses SHAwRSA and adds SHA256wRSA generation<br />	-	All test certificates now use 2048-bit and SHA-1 for better modern browser support<br />	-	Direct AES block access and AES-CTR (counter) mode<br />	-	Microchip pic32 support<br /><br />To download the open source, GPLv2-licensed version of wolfSSL 2.0.2, please visit our <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">Download Page</a>.  If you have any questions or comments or would like more information on commercial versions of wolfSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />For build instructions, a full feature list, API reference, and more, please see the <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-12-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Secure your printer, prevent fires!',
    'post_content' => 'We`ve noticed a couple articles lately mentioning printers as potential attack vectors.  One is particularly disturbing in that not only is a network breach possible, as if that`s not bad enough, but cracked firmware could cause a printer to heat up enough to start a fire: <a href="http://redtape.msnbc.msn.com/_news/2011/11/29/9076395-exclusive-millions-of-printers-open-to-devastating-hack-attack-researchers-say">http://redtape.msnbc.msn.com/_news/2011/11/29/9076395-exclusive-millions-of-printers-open-to-devastating-hack-attack-researchers-say</a> .  <br /><br />An easy way to prevent attack vectors like these is to build in a secure firmware updater.  Of course we think the embedded SSL solution wolfSSL is a perfect fit for this job.  Several printer models already use wolfSSL to secure documents and resources on the network.  We`d like to assist and provide tools to printer vendors (or any device vendor really) to protect the firmware, preventing attacks against data, property, and even lives.  Let us know if you have any questions or comments or are interested in building/using tools for firmware protection.<br /><br />Team yaSSL.',
    'post_status' => 'publish',
    'post_date' => date('2011-11-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Supports Forward Secrecy',
    'post_content' => 'Ever wondered what forward secrecy is and how it applies to SSL/TLS?  Forward secrecy protects current encryption even in the event of a future crack of a long term private key.  Using ephemeral keying in TLS with DHE or ECDHE yields this protection because the temporary key is unique and never used again.  So even if the server`s private key is cracked two years from now your current communication is still secure.  wolfSSL offers several cipher suites that give users this added security:<br /><br />TLS_DHE_RSA_WITH_AES_256_CBC_SHA256<br />TLS_DHE_RSA_WITH_AES_128_CBC_SHA256<br /><br />TLS_DHE_RSA_WITH_AES_256_CBC_SHA<br />TLS_DHE_RSA_WITH_AES_128_CBC_SHA<br /><br />TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA<br />TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA<br />TLS_ECDHE_RSA_WITH_RC4_128_SHA<br />TLS_ECDHE_ECDSA_WITH_RC4_128_SHA<br />TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA<br />TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA<br />  <br />If you have any comments or questions please let us know.<br /><br />Happy Thanksgiving, <br />Team yaSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-11-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'How Does wolfSSL Compare to OpenSSL?',
    'post_content' => 'We often get asked how wolfSSL compares to OpenSSL and what advantages it brings to a project if it replaces a current OpenSSL implementation.  To give you a short comparison, see the points below.<br /><br />	•	<b>Size</b>:  With a 30-100kB build size and runtime memory usage between 3-36kB, wolfSSL can be up to 20 times smaller than OpenSSL.  In an embedded environment where footprint size is critical or a large cloud environment where memory usage per connection makes a big impact on the performance and success of a project, wolfSSL is an optimal SSL and cryptography solution.<br /><br />	•	<b>Standards Support</b>:  wolfSSL is up-to-date with the most recent standards of TLS 1.2 and DTLS which OpenSSL has yet to address.  With the recently-presented crack in TLS 1.0, your project should use either TLS 1.1 or TLS 1.2 for maximum security - both of which wolfSSL fully supports on both the client and server side.<br /><br />	•	<b>Progressive Cipher Support</b>:  wolfSSL is kept progressive with support for new and secure ciphers.  wolfSSL includes some of the best current ciphers for streaming media support, including the HC-128 and RABBIT stream ciphers.  Standard ciphers are supported as well including EDH on both the client and server side.<br /><br />	•	<b>Portability</b>:  wolfSSL is the leading SSL library for real-time, mobile, embedded, and enterprise systems, by virtue of its breadth of platform support and successful implementations.  With a long list of supported platforms out of the box, your time to market can be decreased dramatically by using wolfSSL.  OpenSSL requires porting to many platforms, which can cost your team both time and money.<br /><br />	•	<b>License</b>:  wolfSSL is dual licensed and available both under the GPLv2 as well as a standard commercial license.  OpenSSL is available under a unique license from multiple sources.<br /><br />	•	<b>Support</b>:  wolfSSL was written from the ground up and is maintained and developed by the original developers.  With a wolfSSL license comes one full year of support.  Available directly through phone, email or the yaSSL product support forums, your questions are answered quickly and accurately to help you make progress on your project as quickly as possible.<br /><br />	•	<b>Ease of Use</b>:  OpenSSL is burdened with legacy code that must be maintained and kept up to date.  wolfSSL was written from the beginning with developers in mind.  Because of this mindset, wolfSSL has been developed with a simple and documented API, easy-to-use abstraction layers for OS, Custom I/O, and Standard C library, and clear usage examples.<br /><br />If you have any further questions about how wolfSSL compares to OpenSSL, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-11-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Android Kerberos Port using wolfSSL Embedded SSL',
    'post_content' => 'yaSSL has recently ported the MIT Kerberos libraries to Android.  The Android platform has previously been void of Kerberos support - forcing Android developers who are creating new applications or porting existing projects to either modify existing code or exclude Kerberos functionality from their apps and libraries altogether.<br /><br />yaSSL has taken the first steps in bringing Kerberos to the Android platform.  The native MIT Kerberos libraries have been cross-compiled for Android and are now able to be used natively with the Android NDK.  yaSSL has added the wolfSSL embedded SSL library`s cryptography library (<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">CTaoCrypt</a>) as a crypto implementation for Kerberos, allowing embedded projects to use wolfSSL`s lightweight and fully functional crypto backend on Android.<br /><br />In addition to the cross-compiled MIT Kerberos libraries, yaSSL has created a sample Android NDK application wrapping the functionality of <b>kinit</b>, <b>klist</b>, <b>kvno</b>, and <b>kdestroy</b> with a simple GUI front-end.  We hope this application provides a starting place for application developers interested in using Kerberos on Android.<br /><br />The MIT Kerberos libraries and sample application are distributed under the MIT license (using wolfSSL`s FLOSS exception) and the code will be in the MIT Kerberos code repository in the near future.  Until it has been merged into the MIT repositories, you can find the sample application on GitHub at the following URL.  The sample application includes cross-compiled Kerberos and wolfSSL libraries.  Instructions on cross compiling MIT Kerberos yourself will be released in the near future.<br /><br /><a href="https://github.com/cconlon/kerberos-android-ndk">https://github.com/cconlon/kerberos-android-ndk</a><br /><br />Our next step is to work on adding Java bindings for the native Kerberos GSS-API library on Android.  As we have looked into several methods of accomplishing this, we would like to hear what the community would like to see regarding the Java bindings.  Also, we would like to explore if there are any existing solutions which could be useful.  The options we have looked at thus far include:<br /><br />- Porting over an existing org.ietf.jgss Java package to Android and tying that into the native GSS-API library through JNI.<br />- Using SWIG to generate Java wrappers to the native GSS-API.<br /><br />Are you interested in using Kerberos on Android?  What do you think the best path would be for adding Java bindings?  Do you have any suggestions about the direction of the project so far?  If so, please let us know your thoughts at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks!<br /><br />Team yaSSL<br /><a href="mailto:info@yassl.com">info@yassl.com</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-11-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL on Microchip',
    'post_content' => 'We recently did a preliminary port of wolfSSL to Microchip’s PIC32, which will be further explained and announced in a future release of wolfSSL.  Are you using wolfSSL with a Microchip board?  If so, we’re prepared to support you if you run into any problems or issues.<br /><br />Let us know at <a href="mailto:info@yassl.com">info@yassl.com</a> if you’ve tried wolfSSL with a Microchip board, or if you have any questions about wolfSSL in general.<br /><br />Microchip PIC32:  <a href="http://www.microchip.com/en_us/family/32bit/">http://www.microchip.com/en_us/family/32bit/</a><br /><br />- Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-11-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Scaling with SSL',
    'post_content' => 'Why is wolfSSL a great solution when you have millions of connections per server?  Memory consumption per connection can be as low as 3k, varying with the size of input and output buffers.  This brings wolfSSL’s runtime memory consumption to 3-36kB depending on buffer size.  Input and output buffers are created on demand when smaller than MAX_RECORD_SZ unless the user turns on STATIC_CHUNKS_ONLY.  <br /><br />In contrast,  OpenSSL typically consumes 50-140k per connection.  wolfSSL emphasizes small size, speed, and low memory use.  These attributes make wolfSSL ideal for scaling on a huge magnitude.   Other libraries often run into problems when trying to scale to hundreds of thousands of connections for applications like load balancing or cloud services.  We have users doing just that.  <br /><br />Want to hear about how wolfSSL is being scaled in the cloud?  Contact us and we`ll share some of the use cases currently in production.  ',
    'post_status' => 'publish',
    'post_date' => date('2011-11-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Keep Updated on Recent News',
    'post_content' => 'If you would like to stay updated on yaSSL news, press releases, and new software versions, please follow us on Twitter, Facebook, or follow our blog RSS feed.  You can find us at the following locations:<br /><br />Facebook:  <a href="http://www.facebook.com/cyassl">www.facebook.com/cyassl</a><br />Twitter: <a href="http://www.twitter.com/cyassl">www.twitter.com/cyassl</a><br />Blog RSS: <a href="http://www.yassl.com/yaSSL/Blog/rss.xml">http://www.yassl.com/yaSSL/Blog/rss.xml</a><br /><br />If you have any questions about wolfSSL or the yaSSL Embedded Web Server, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks,<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-11-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'ARM and Avnet Launch Embedded Software Store',
    'post_content' => 'During the ARM Technology Conference last week, ARM and Avnet Electronics Marketing announced the launch of their online Embedded Software Store.  The goal of this store is to provide developers and companies a single place to easily explore, find, and purchase software components, thus helping bring new products to market faster than ever.<br /><br />The store is now online and can be viewed at <a href="http://www.embeddedsoftwarestore.com/">www.embeddedsoftwarestore.com</a>.  Users can choose from a large collection of reputable software vendors, including yaSSL!  The site offers a streamlined checkout process, including a quick download delivery system and preview of all license agreements in advance of the purchase.<br /><br />Press Release: <a href="http://www.arm.com/about/newsroom/avnet-electronics-marketing-and-arm-launch-embedded-software-store.php">http://www.arm.com/about/newsroom/avnet-electronics-marketing-and-arm-launch-embedded-software-store.php</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-10-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is at ARM TechCon 2011',
    'post_content' => 'As you may know, yaSSL is currently exhibiting at the 2011 ARM Technology Conference in sunny Santa Clara, CA.  This is the third and final day of the show, with the Expo open from 10:30am to 4:00pm PDT.  We’ve had a steady flow of traffic at our booth visiting about the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.<br /><br />If you are attending ARM TechCon this year, please stop by our booth (Booth 712) to learn about our SSL implementation and how you can use it in your next project.  While you’re here, you can pick up one of our new stickers too!<br /><br />If you have any questions or comments, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-10-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Certificate Generation Update',
    'post_content' => 'We`ve noticed a trend lately of the latest operating systems and browsers removing support for MD5 signed SSL certificates.  iOS 5, IE 9, and others have moved away from MD5.  wolfSSL now signs certificates with SHA-1 by default and has support for SHA-256 signed certificates as well.  If anyone would like support for SHA-512 please let us know, though it doesn`t appear to be widely adopted at the moment.  The default test certificates for embedded wolfSSL are now all SHA-1 with RSA 2048 bit.  It`s the same combination you`ll notice from most banks, paypal, and google.  If you have any questions or feedback please let us know.<br /><br />Cheers,<br />Team yaSSL <br />',
    'post_status' => 'publish',
    'post_date' => date('2011-10-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Our Friend Matt Gordon at Micrium Shares His Thoughts on Clean Coding',
    'post_content' => 'See here:  <a href="http://www.eetimes.com/design/embedded/4008302/Six-Rules-for-Writing-Clean-Code?cid=NL_Embedded&Ecosystem=embedded">http://www.eetimes.com/design/embedded/4008302/Six-Rules-for-Writing-Clean-Code?cid=NL_Embedded&Ecosystem=embedded</a> for Matt`s take on how to write clean code that is easily useable and readable by others.',
    'post_status' => 'publish',
    'post_date' => date('2011-10-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Energy Efficient ARM Code',
    'post_content' => 'Here`s an excellent article in EE Times on writing energy efficient ARM code <a href="http://www.eetimes.com/design/embedded/4210470/Efficient-C-Code-for-ARM-Devices?cid=NL_Embedded&Ecosystem=embedded">http://www.eetimes.com/design/embedded/4210470/Efficient-C-Code-for-ARM-Devices?cid=NL_Embedded&Ecosystem=embedded</a> .<br /><br />Our wolfSSL embedded SSL product is designed with many of these principles in mind, but of course the design goal of energy efficiency takes a back seat to overall security.  In some cases, the goals of energy efficiency and overall security mesh well.<br /><br />By the way, come see us at ARM TechCon.  If you need a pass, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a> and we`ll send you one.',
    'post_status' => 'publish',
    'post_date' => date('2011-10-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Team yaSSL Salutes the Life and Work of Dennis Ritchie',
    'post_content' => 'As heavy users of the C language and Unix operating environments, we`ll simply note our gratitude for Ritchie`s work.  There`s any number of articles on the topic of his passing.  <br /><br />One of the best ones is here:  <br /><a href="http://www.wired.com/wiredenterprise/2011/10/dennis-ritchie/">http://www.wired.com/wiredenterprise/2011/10/dennis-ritchie/</a><br /><br />Wikipedia (Dennis Ritchie): <a href="http://en.wikipedia.org/wiki/Dennis_Ritchie">http://en.wikipedia.org/wiki/Dennis_Ritchie</a>',
    'post_status' => 'publish',
    'post_date' => date('2011-10-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0.0rc3 is Now Available',
    'post_content' => 'The latest release of wolfSSL is now ready for download: <a href="http://yassl.com/yaSSL/Download.html">http://yassl.com/yaSSL/Download.html</a> .  <br /><br />New features in the embedded SSL release include better autoconf support, allowing easier integration with other projects whether those projects use autoconf or not.  More complete make install and uninstall, using the default system directories.  make test / make check are now implemented.  The wolfSSL headers are now in <cyassl/*.h> while the CTaoCrypt headers can be found in <cyassl/ctaocrypt/*.h>.  Our main OpenSSL compatibility header is now <cyassl/openssl/ssl.h> and the rest are located in <cyassl/openssl/*.h>.  <br /><br />Special thanks to Brian Aker for his suggestions and patches that contributed to the overhaul.  For more information check out the updated <a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a>.<br /><br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-10-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Visit with Team yaSSL at the 2011 ARM TechCon',
    'post_content' => 'Team yaSSL will be exhibiting at the 2011 ARM Technology Conference.  The ARM Technology Conference spans three days and will offer courses and exhibits for chip design teams working with ARM silicon IP and tools as well as courses and exhibits for software and systems design developers employing the ARM architecture.  The conference will be held October 25-27, 2011 at the Santa Clara Convention Center in Santa Clara, CA.<br /><br />If you’re planning on attending the conference, please stop by to visit us at <b>Booth 712</b>!  We always like to hear from our users, customers, and fans, and will be happy to answer any questions you may have about our products.  We’ll be talking about the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you would like to schedule a meeting time, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />To register for a <b>FREE</b> expo pass, use promo code <b>VIPEXPO</b>, or use the same code to get a 20% discount off any conference pass.<br /><br />Chip Design Day:  October 25, 2011<br />Software & Systems Design Days:  October 26-27, 2011<br /><br />We’ll look forward to seeing you there!<br /><br />2011 ARM Technology Conference: <a href="http://www.armtechcon.com">www.armtechcon.com</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-10-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at ESC Boston 2011',
    'post_content' => 'Team yaSSL is currently exhibiting at the Embedded Systems Computing (ESC) conference in Boston, MA.  Today is the final day of the show.  The yaSSL booth (Booth #723) has seen a steady stream of traffic which has provided a consistent variety of interesting conversations.  If you’re attending the show, please stop by the booth to learn more about our wolfSSL embedded SSL library and the yaSSL Embedded Web Server.<br /><br />If you’re not attending the show but still have questions, we welcome you to send them to <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-9-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS 1.0 Cracked',
    'post_content' => 'It has been widely publicized that TLS (any version less than or equal to 1.0), using AES-CBC mode has been recently cracked.  We have received a number of questions and there has been a flurry of activity in the SSL world around this topic.  Hence, we feel compelled to make a few statements of our own.  Here are our thoughts:<br /><br />	1.	 The current crack is specific to TLS, versions less than or equal to 1.0.  We support both TLS 1.1 and TLS 1.2.  <br /><br />2.  We have supported TLS 1.2 for over 18 months now, and believe that we have the most robust and well tested implementation.<br /><br />3.  We can also note that we`ve done as much TLS 1.2 interop testing as possible.  <br /><br />To protect yourself from this attack, we recommend using either TLS 1.1 or TLS 1.2 in your project or application.  If you must use an older version of the protocol (SSL 3.0, TLS 1.0), we recommend that you use stream ciphers, as they are not vulnerable to the CBC crack.  wolfSSL supports several stream ciphers including ARC4, RABBIT, and HC-128.  For a full list of wolfSSL features, please see the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">product page</a>.<br /><br />References on the above will follow in further posts on our blog.  If you have any questions, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-9-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL supports FreeRTOS',
    'post_content' => 'We recently ported the wolfSSL embedded SSL library to FreeRTOS.  FreeRTOS is a real-time operating system for embedded devices which is designed to be small and simple. Currently, it officially supports 27 architectures and is downloaded over 77 thousand times every year.<br /><br />Like wolfSSL, FreeRTOS is portable, open source and royalty free.  If you are running your project on FreeRTOS and need SSL/TLS support, give wolfSSL a try and see what you think.  The wolfSSL embedded SSL library supports the industry standards up to TLS 1.2 and is optimized for embedded environments.<br /><br />For a full list of features in FreeRTOS/OpenRTOS, and to learn more about the project in general, visit the FreeRTOS website at <a href="http://www.freertos.org">http://www.freertos.org</a>/.<br /><br />If you have any questions about using wolfSSL with FreeRTOS, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks!<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-9-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is a General Member of the Intel Embedded Alliance',
    'post_content' => 'yaSSL is strongly committed to fostering both partnerships and community, and as such, we make it a point to go out of our way to support both.  We can now report that yaSSL is a General Member of the Intel Embedded Alliance:  a community of embedded developers and solution providers.  We hope to see new opportunities arise through this membership that will be beneficial to both yaSSL and our users.<br /><br />You can now find wolfSSL and the yaSSL Embedded Web Server listed in the Intel Embedded Alliance <a href="https://www.intelcommsalliance.com/kshowcase/view">Solutions Directory</a>:<br /><br />wolfSSL Embedded SSL Library:  <a href="https://www.intelcommsalliance.com/kshowcase/view/view_item/4ed553cb10e4af6f2caade07967c6efef3fd7976">Directory Link</a><br />yaSSL Embedded Web Server:  <a href="https://www.intelcommsalliance.com/kshowcase/view/view_item/f55ecb6680c68047b5bd8f74344c3e354dd2838d">Directory Link</a><br /><br />If you are interested in forming a partnership with yaSSL, or have any questions regarding our partnership or community involvement, please contact us <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-9-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL NDK for Android Development',
    'post_content' => 'Are you developing for Android?  If so, we have recently created an Android NDK package for the wolfSSL Embedded SSL library.  Using this package as a guide, you should be able to easily integrate the native wolfSSL library into your Android application for either SSL or cryptography use.<br /><br />wolfSSL supports the current SSL standards up to TLS 1.2 as well as a long list of ciphers (which can be used individually by your application as well), and is dual licensed under both the GPLv2 as well as a standard commercial license.  For a full list of features of the wolfSSL embedded SSL library, please see the product page, here: <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL Product Page</a>.<br /><br />The wolfSSL NDK contains the wolfSSL library as well as a sample application that runs through tests of the CTaoCrypt crypto library.  You can find the NDK package at the following GitHub repository: <a href="https://github.com/cconlon/cyassl-android-ndk">https://github.com/cconlon/cyassl-android-ndk</a>.<br /><br />Let us know what you think at <a href="mailto:support@yassl.com">support@yassl.com</a>.  We welcome your feedback and constructive criticism to make our package better.<br /><br />- Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-9-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS 1.2 signature_algorithm Extension',
    'post_content' => 'Some of you may be familiar with the TLS 1.2 <b>signature_algorithm</b> extension, and might be curious if wolfSSL supports it.  The signature_algorithm extension is found in section 7.4.1.4.1 RFC5246 (<a href="http://tools.ietf.org/html/rfc5246#section-7.4.1.4.1">http://tools.ietf.org/html/rfc5246#section-7.4.1.4.1</a>), and is a hello extension of type supported_signature_algorithms.  The purpose of this extension is to allow clients to indicate to the server which signature/hash algorithm pairs may be used in digital signatures.  If the client supports the default algorithms, the client is not required to send this extension.<br /><br />wolfSSL supports the default algorithms, and as such, the wolfSSL client does not support this extension.  The wolfSSL server will accept this extension if received from a client, but currently doesn’t do anything with the response it receives.  This is something that will most likely be added to wolfSSL in the future when more clients and servers start using non-default extension algorithms.<br /><br />If you have any questions about wolfSSL, or would like more information, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks,<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-9-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Are you using wolfSSL in your Project?',
    'post_content' => 'Are you currently using wolfSSL in your open source, community, or hobby project?  If so, we’d love to hear about what you’ve done so far and what your plans are for the future.  yaSSL is dedicated to helping community-based projects who are using the wolfSSL embedded SSL library or the yaSSL Embedded Web Server.  Let us know about your project at <a href="mailto:info@yassl.com">info@yassl.com</a> and we’ll put you up on our <a href="perma://BLPageReference/AC02F8B6-B02B-44CD-A4E9-BCE4C21224D5">Community page</a>.<br /><br />Technical support for community-based open source projects is free and available either through our <a href="http://www.yassl.com/forums">support forums</a>, or by emailing us directly at <a href="mailto:support@yassl.com">support@yassl.com</a>.<br /><br />To access and download our most recent wolfSSL source code, please visit our project page on GitHub, <a href="https://github.com/cyassl/cyassl">here</a>.  As always, please feel free to contact us with any questions you might have regarding our products.<br /><br />Thanks!<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-9-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be Exhibiting at the 2011 ARM Technology Conference',
    'post_content' => 'Team yaSSL will be exhibiting at the 2011 ARM Technology Conference.  The ARM Technology Conference spans three days and will offer courses and exhibits for chip design teams working with ARM silicon IP and tools as well as courses and exhibits for software and systems design developers employing the ARM architecture.  The conference will be held October 25-27, 2011 at the Santa Clara Convention Center in Santa Clara, CA.<br /><br />If you’re planning on attending the conference, please stop by to visit us at <b>Booth 712</b>!  We always like to hear from our users, customers, and fans, and will be happy to answer any questions you may have about our products.  We’ll be talking about the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you would like to schedule a meeting time, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We’ll look forward to seeing you there!<br /><br />2011 ARM Technology Conference: <a href="http://e.ubmelectronics.com/armtechcon/index.html">http://e.ubmelectronics.com/armtechcon/index.html</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-9-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Why is wolfSSL the #1 Choice For Game Developers?',
    'post_content' => 'You may have not realized it, but wolfSSL is very popular for game development, and is in use in millions of games.  <br /><br />Here`s why:  <br /><br />1.  <b>Experienced</b>:  The yaSSL team has been supplying game developers with an efficient, portable SSL Stack for years.<br /><br />2.  <b>Small</b>:  Our code size is small.  We won`t bog down your game.<br /><br />3.  <b>Portable</b>:  We run on all the major gaming consoles/platforms and some of the minor ones.<br /><br />4.  <b>Scalable</b>:  Building a MMPORG and require security?  We have experience helping with that too.  wolfSSL won`t consume all of your server`s memory.<br /><br />5.  <b>Streaming media</b>:  wolfSSL was built with securing streaming media in mind.<br /><br />Let us know if you have questions.  If you are a game developer and would like to speak with our references in the gaming industry, just email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-8-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Build Sizes',
    'post_content' => 'One predominant question we get asked frequently is what are the build size and runtime memory usage of the wolfSSL embedded SSL library.  Hopefully this post will help clear things up.<br /><br />Firstly, wolfSSL was built from the ground up to be optimized for embedded and resource-constrained devices and environments.  As such, we have kept a close eye on keeping our SSL library small while still providing the features our users want and need.<br /><br />Build sizes (compiled binary size) for wolfSSL range between <b>30-100kB</b> depending on build options and the compiler being used.  Typically on an embedded system, build sizes will be around <b>60kB</b>.  This size will include a full-featured TLS 1.2-compliant client and server.  For details on build options, please see <a href="perma://BLPageReference/FD352C90-E273-4482-8F1A-931053F7C82D">Chapter 2 of the wolfSSL Manual</a>.<br /><br />Looking at runtime memory usage, wolfSSL will generally consume somewhere between 5-50kB (average is around <b>3kB</b>).  The runtime RAM usage per connection will vary depending the size of the input/output buffers being used.  For example, with standard 16kB buffers, the total runtime memory usage of wolfSSL with a single connection would be 3kB + 16kB + 16kB = <b>35kB</b>.<br /><br />If you have any further questions about wolfSSL code sizes, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.  For a full list of wolfSSL features, please visit the <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL Product Page</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-8-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Exhibiting at ESC Boston 2011',
    'post_content' => 'Team yaSSL will be exhibiting at ESC Boston this year.  ESC Boston brings together the entire embedded community from engineers, designers, system architects, vendors and suppliers, analysts and media for four days of hands-on training, educational sessions, an interactive Expo with hundreds of exhibitors featuring the most important emerging products and technologies the embedded community has to offer, networking opportunities, prizes and giveaways, and more.<br /><br />The conference will be held September 26-29, 2011 at the Hynes Convention Center in Boston, Massachusetts.  yaSSL will be talking about securing your devices and applications with the wolfSSL Embedded SSL library, and web-enabling your projects with the yaSSL Embedded Web Server.<br /><br />If you’re planning on attending the conference, please stop by to visit us at <b>Booth 723</b>!  We always like hearing from our users, customers, and fans, and will be happy to answer any questions you may have about our products.  If you would like to schedule a meeting time, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We’ll look forward to seeing you there!<br /><br />ESC Boston 2011: <a href="http://esc.eetimes.com/boston/">http://esc.eetimes.com/boston/</a>',
    'post_status' => 'publish',
    'post_date' => date('2011-8-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Running the yaSSL Embedded Web Server on the Apple TV',
    'post_content' => 'Do you want to install a HTTPS-capable web server on your Apple TV?  If so, continue reading below to find out how the open source yaSSL Embedded Web Server can easily be installed on the second generation Apple TV.<br /><br />Following our port of wolfSSL to the second generation Apple TV, our next step was to get the yaSSL Embedded Web Server running on the Apple TV.  Having a web server running on the Apple TV brings with it many benefits including the ability to host a website from a very small, energy-efficient, discreet, and quiet device.<br /><br />If you missed our post on porting wolfSSL to the Apple TV, you can read it here: <a href="perma://BLPageReference/DF5F5F38-81DB-44FB-A5F9-980C823CB150">Running wolfSSL on the Apple TV 2</a>.  If you would like to install the yaSSL Embedded Web Server on your Apple TV with HTTPS support, follow the instructions in our previous post prior to installing yasslEWS. Note that you will need to build wolfSSL with either the <b>--enable-opensslExtra</b> or <b>--enable-webServer</b> build option.<br /><br /><b>Requirements:<br /></b><b><br /></b>	1.	Jailbroken second generation Apple TV (we leave this step for you to do)<br />	2.	wolfSSL installed on Apple TV for HTTPS support (see link above)<br /><br /><b>	1.	Compiling the Web Server<br /></b><b><br /></b>In order to easily compile the yaSSL Embedded Web Server for iOS (specifically the Apple TV), we added a new target to the makefile.  You can download our updated yasslEWS makefile, here:  <a href="http://www.yassl.com/files/yasslews/Makefile">Updated yasslEWS iOS Makefile</a>.<br /><br />After placing the new Makefile in your yasslEWS directory, simply run the following command. This will build yasslEWS for iOS and the ARM architecture.<br /><br />make ios<br /><br /><b>	1.	 Web Server Installation<br /></b><b><br /></b>After compiling the web server, move the application and configuration file to the Apple TV using your favorite FTP client.  We chose to place the yaSSL Embedded Web Server in the following location on the Apple TV.<br /><br />/private/var/mobile/Applications/yasslews<br /><br /><b>	1.	 Running the Web Server<br /></b><br />If you followed our previous instructions on installing wolfSSL on the Apple TV, the wolfSSL libraries should be located at “/usr/local/cyassl_atv2”. To make sure the loader can find them, you’ll need to set the path:<br /><br />export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/usr/local/cyassl_atv2/lib<br /><br />Then, to start the web server with both insecure (HTTP) and secure (HTTPS) ports, issue the following command.  Keep in mind that you can set runtime options either on the command line during startup or in the configuration file (yasslEWS.conf).  The yaSSL Embedded Web Server will automatically load the configuration file name “yasslEWS.conf” if present in the same directory as the executable.  For a list of config options, use the “./yasslEWS -h” command.<br /><br />./yasslEWS -s server.pem -p 8080,8081s -e error.txt<br /><br /><b>	1.	 Build Sizes<br /></b><br />One of the great things about using wolfSSL and the yaSSL Embedded Web Server is that they have been designed and optimized to run on embedded devices - thus giving them an extremely small footprint.  Below you can see the sizes on disk of the compiled wolfSSL library and yaSSL Embedded Web Server using the above methods for the Apple TV - a total disk footprint of 181 kB for both SSL and a web server!<br /><br /><b>wolfSSL<br /></b>122 kB Footprint<br />Full Feature Set<br />Standards up to the current TLS 1.2<br /><br /><b>yaSSL Embedded Web Server<br /></b>59kB Footprint<br />Full Feature Set<br /><br />For more information about the wolfSSL embedded SSL library or the yaSSL Embedded Web Server, please visit their respective product pages (<a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">wolfSSL</a>, <a href="perma://BLPageReference/71A1A7A1-5192-4F85-A8DB-E6F4B2B7DC3D">yaSSLEWS</a>).  yaSSL products are open source and dual licensed under both the GPLv2 as well as standard commercial licensing.<br /><br />If you have any questions or comments, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.  We’re interested in hearing what you think!<br /><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-8-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Running wolfSSL on the Apple TV 2',
    'post_content' => 'The Apple TV brought with it a long list of desirable and useful features for the home - including high usability, a small form factor, easy setup, and low cost.  We here at yaSSL are users and fans of the second generation Apple TV, and as such, recently ported the wolfSSL embedded SSL library to the Apple TV 2.  We were quite surprised by how easy it was to get wolfSSL up and running.<br /><br />The Apple TV 2 runs iOS with the Apple A4 (ARM Cortex-A8) processor and is equipped with 256 Mb of RAM and a 8GB flash drive, giving it more than enough space and speed to effectively run wolfSSL.<br /><br /><b>Installation<br /></b><br /><b>	1.	 Jailbreak your Apple TV<br /></b>Installation of wolfSSL onto the Apple TV requires that the TV be jailbroken first. There are any number of readily-accessible posts around the internet explaining this process, therefore, we will leave this step up to you.<br /><br /><b>	1.	 Cross compile wolfSSL for iOS and ARM<br /></b>For this step, we used a modified version of a script written by Michael Aaron Safyan to cross compile libraries for iOS.  You can find our modified version of the script for iOS 4.3 and the armv7 architecture, here: <a href="http://www.yassl.com/files/scripts/iOS4.3-configure.sh">Cross Compile Script</a>.  This script uses the ARM toolchain from the iOS Developer tools that come with the iPhone SDK.  It sets environment variables, then runs wolfSSL’s normal ./configure script.<br /><br />If you want to change the location where wolfSSL is installed, you can edit the script to adjust for your desired directory location.  To build wolfSSL, place the cross compile script (iOS4.3-configure.sh) in the root directory of the wolfSSL download and run the following commands.  This builds wolfSSL with the --enable-fastmath option.<br /><br />./iOS4.3-configure.sh<br />make<br />sudo make install<br /><br />If unaltered, this will install the cross-compiled wolfSSL library into /usr/local/cyassl_atv2.<br /><br /><b>	1.	 Copy wolfSSL to the Apple TV<br /></b>Use your favorite FTP client to upload the contents of the /usr/local/cyassl_atv2 directory to the same location on your second generation Apple TV.  If desired, you can also copy additional wolfSSL elements to the Apple TV such as the CTaoCrypt benchmark utility, the wolfSSL testsuite, or examples.  We chose to place these on the Apple TV under the /var/mobile/Applications/cyassl directory.<br /><br /><b>	1.	 Benchmark Results<br /></b>Our results of running the CTaoCrypt benchmark application are below:<br /><br />AES         5 megs took 0.500 seconds,   9.99 MB/s<br />ARC4      5 megs took 0.174 seconds,  28.66 MB/s<br />RABBIT   5 megs took 0.126 seconds,  39.56 MB/s<br />3DES       5 megs took 2.196 seconds,   2.28 MB/s<br /><br />MD5        5 megs took 0.163 seconds,  30.73 MB/s<br />SHA        5 megs took 0.137 seconds,  36.61 MB/s<br />SHA-256  5 megs took 0.309 seconds,  16.20 MB/s<br /><br />RSA 1024 encryption took   1.12 milliseconds, avg over 100 iterations<br />RSA 1024 decryption took  17.81 milliseconds, avg over 100 iterations<br />DH  1024 key generation   11.90 milliseconds, avg over 100 iterations<br />DH  1024 key agreement    11.22 milliseconds, avg over 100 iterations<br /><br /><br />If you have any questions or comments about our port to the Apple TV, please let us know at info@yassl.com.  We’d be happy to hear what you think!',
    'post_status' => 'publish',
    'post_date' => date('2011-8-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL can scale too!',
    'post_content' => 'Most of the focus of wolfSSL has been towards the embedded world, emphasizing small size, speed, and low memory use.  Ironically, these attributes also make wolfSSL ideal for scaling on a huge magnitude.   Other libraries often run into problems when trying to scale to hundreds of thousands of connections for applications like load balancing or cloud services.  We have users doing just that.  <br /><br />If you`d like to try wolfSSL in a highly scaled environment, drop us a line, we`re eager to help and explore performance options with you.',
    'post_status' => 'publish',
    'post_date' => date('2011-8-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OSCON 2011: Mid-week at the Conference',
    'post_content' => 'OSCON 2011 is off to a good start, with the Expo floor being open all day today and many exciting and interesting sessions being held, there’s no lack of interesting things to capture our attention.  Team yaSSL will be around the Expo floor and the Oregon Convention Center both Wednesday (7/27) and Thursday (7/28).  We hope to run into many of our users!  If you are attending OSCON this year and would like to meet up to visit, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>!<br /><br />- Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2011-7-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Attending OSCON 2011',
    'post_content' => 'Team yaSSL will be attending OSCON 2011 this year in Portland, Oregon.  This year’s conference will be held July 25th through 29th at the Oregon Convention Center.  If you are planning on attending this year’s O’Reilly OSCON and would like to visit with us, please let us know!  We’ll be on the Expo floor Tuesday, Wednesday and Thursday. You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />As stated by Zack Urlocker of <a href="http://www.infoworld.com/">InfoWorld</a>, “For those who have not been to OSCON, it`s a great technical conference covering the whole spectrum of open source, including Linux, MySQL, the LAMP stack, Perl, Python, Ruby on Rails, middleware, applications, cloud computing, and more. OSCON always has great keynotes, tutorials, and evening Birds-of-a-Feather sessions. As with many conferences, a lot of the meat takes place in hallway conversations and impromptu sessions."<br /><br />We hope to see you there!<br /><br />O’Reilly OSCON 2011:  <a href="http://www.oscon.com/oscon2011/">http://www.oscon.com/oscon2011/</a><br /><br />Slides from Todd Ouska’s presentation on Secure Memcache at last year’s OSCON can be found <a href="perma://BLPageReference/BE72E8B3-6A94-4859-A653-32DB2E3ACB23">here</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-7-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 RC2 - Call for Testing',
    'post_content' => 'With release candidate 2, the full 2.0 version of wolfSSL is drawing near.  We have chosen to put out several release candidates for wolfSSL 2.0 because of the volume of new features that were added combined with the number of bugs that are fixed in this release.<br /><br />We would like to invite any interested developers and users to download and test wolfSSL 2.0 RC2 and let us know what you find.  This will help speed up the release process, and hopefully turn up some bugs that we can fix before the final release.  For testing, you can download the most recent version of wolfSSL 2.0 RC2 from our GitHub page, here:<br /><br /><a href="https://github.com/cyassl/cyassl">https://github.com/cyassl/cyassl</a><br /><br />Instructions for building wolfSSL can be found in the <a href="perma://BLPageReference/FD352C90-E273-4482-8F1A-931053F7C82D">wolfSSL Manual, Chapter 2</a>, titled "Building wolfSSL".  With RC2, we have also updated our documentation.  If you find any documentation mistakes, or have suggestions in how we can improve, please let us know.  Updated documentation can be found on our <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">Docs page</a>.<br /><br />Please send any feedback, questions, or comments to <a href="mailto:info@yassl.com">info@yassl.com</a>, or post to our support forums <link>.<br /><br />Thanks for your help!<br /><br />Team yaSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-7-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New wolfSSL API Reference',
    'post_content' => 'Recently we’ve been working on enhancing and expanding our documentation and focusing on making it more useful for our users.  One of the things that we recently released is an API Reference for the wolfSSL embedded SSL library.  The wolfSSL API reference is available both online and in the wolfSSL Manual PDF.  You can find it online, here:<br /><br /><a href="perma://BLPageReference/DA6AD5D0-201F-4D79-A74C-39CE9ED679BA">wolfSSL API Reference</a> (Chapter 17, wolfSSL Manual)<br /><br />Please let us know what you think, and if you have any suggestions for further improvement in the wolfSSL documentation.  You can email us at <a href="mailto:info@yassl.com">info@yassl.com</a> with any questions or suggestions.<br /><br />Thanks,<br />Team yaSSL<br /><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-7-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Cipher Suite Strength and Choosing Proper Key Sizes',
    'post_content' => 'Cipher suites come in a variety of strengths.  Because they are made up of several different types of algorithms (authentication, encryption, and message authentication code (MAC)), the strength of each varies with the chosen key sizes.  There can be many methods of grading the strength of a cipher suite - the specific method used seems to vary between different projects and companies an can include things such as symmetric and public key algorithm key sizes, type of algorithm, performance, and known weaknesses.<br /><br /><b>NIST</b> (National Institute of Standards and Technology) makes recommendations on choosing an acceptable cipher suite by providing comparable algorithm strengths for varying key sizes of each.  The strength of a cryptographic algorithm depends on the algorithm and the key size used.  The NIST Special Publication, SP800-57, states that two algorithms are considered to be of comparable strength as follows:<br /><br />"… two algorithms are considered  to be of comparable strength for the given key sizes (X and Y) if the amount of work needed to “break the algorithms” or determine the keys (with the given key sizes) is approximately the same using a given resource. The security strength of an algorithm for a given key size is traditionally described in terms of the amount of work it takes to try all keys for a symmetric algorithm with a key size of "X" that has no short cut attacks (i.e., the most efficient attack is to try all possible keys)."<br /><br />The two tables in <a href="perma://BLPageReference/F6490846-538C-4F9B-A8D1-CC1BE6661BD1">section 4.3 of the wolfSSL Manual</a> (Table 2, Table 3). are based off of both Table 2 (pg. 64) and Table 4 (pg. 66) from NIST SP800-57, and show comparable security strength between algorithms as well as a strength measurement (based off of NIST’s suggested algorithm security lifetimes using bits of security).<br /><br />Using these tables as guides to begin to classify a cipher suite, we categorize it based on the strength of the symmetric encryption algorithm.  In doing this, a rough grade classification can be devised to classify each cipher suite based on bits of security (only taking into account symmetric key size):<br /> <br /><b>LOW</b>           = bits of security smaller than 128 bits<br /><b>MEDIUM</b>    = bits of security equal to 128 bits<br /><b>HIGH</b>          = bits of security larger than 128 bits<br /> <br />Outside of the symmetric encryption algorithm strength, the strength of a cipher suite will depend greatly on the key sizes of the key exchange and authentication algorithm keys.  The strength is only as good as the cipher suite’s weakest link.<br /> <br />Following the above grading methodology (and only basing it on symmetric encryption algorithm strength), wolfSSL 2.0.0 currently supports a total of 0 LOW strength cipher suites, 12 MEDIUM strength cipher suites, and 8 HIGH strength cipher suites – as listed in section <a href="perma://BLPageReference/F6490846-538C-4F9B-A8D1-CC1BE6661BD1">4.3.2 of the wolfSSL Manual</a>.  The following strength classification could change depending on the chosen key sizes of the other algorithms involved. For a reference on hash function security strength, see Table 3 (pg. 64) of NIST SP800-57.<br /><br />In some cases, you will see ciphers referenced as “<b>EXPORT</b>” ciphers.  These ciphers originated from the time period in US history (as late as 1992) when it was illegal to export software with strong encryption from the United States.  Strong encryption was classified as “Munitions” by the US Government (under the same category as Nuclear Weapons, Tanks, and Ballistic Missiles). Because of this restriction, software being exported included “weakened” ciphers (mostly in smaller key sizes).  In the current day, this restriction has been lifted, and as such, EXPORT ciphers are no longer a mandated necessity.<br /><br /><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New Site and Documentation Modifications',
    'post_content' => 'As you may have noticed we have made a few changes to our website - mainly in color schemes, layouts, and enhanced documentation.  One of the largest additions to our site is the HTML version of the updated wolfSSL embedded SSL library Manual, which can be found at the following link.  It can also be downloaded in PDF form if you prefer that.<br /><br /><a href="perma://BLPageReference/824F9D25-F628-4E44-9770-44C148EA7196">wolfSSL Manual</a> (HTML)<br /><br />Our RSS feed link has changed due to our terminology change from “News” to “Blog”.  Our new RSS feed link is as follows:  <a href="http://www.yassl.com/yaSSL/Blog/rss.xml">http://www.yassl.com/yaSSL/Blog/rss.xml</a><br /><br />If you have any website feature requests, or think that there’s something that we need to add, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks,<br />Team yaSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Our News Feed RSS is Changing',
    'post_content' => 'Hi!<br /><br />We`ve been making several changes to our website lately which we plan to roll out in the near future. One of the things we`re doing is changing the name of our "News" feed to a "Blog" feed. We thought that we better keep up with the times and start using the correct terminology.<br /><br />As a result of this change, our RSS feed link will be changing. If you are following our RSS feed, please use the following link from now on:<br /><br /><a href="http://www.yassl.com/mod/yaSSL/Blog/rss.xml">http://www.yassl.com/mod/yaSSL/Blog/rss.xml</a><br /><br />Stay tuned for site and documentation updates soon!<br /><br />Thanks,<br />Team yaSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Webinar: Choosing the Correct ARM Processor',
    'post_content' => 'Many users of the wolfSSL embedded SSL library are running on top of ARM processors in embedded environments.  An upcoming webinar by Ian Forsyth (Product Manager, ARM) will walk through the process of choosing the correct ARM processor for your project.  Ian`s webinar will cover several questions including:<br /><br />- Deciding between Cortex-M, Cortex-R, or Cortex-A families<br />- What options are available for each family of cores?<br />- Single-core or multi-core ARM-based SOC?  What are the benefits of each?<br />- Is there a tangible roadmap for the future?<br /><br />The webinar will give you an overview of the ARM portfolio with features and benefits of each included family, and help you to understand how to choose the best ARM processor for your application solution.<br /><br />To register for the free webinar, and to read a complete description use the following link:  <a href="http://seminar2.techonline.com/registration/wcIndex.cgi?sessionID=arm_jun1411">http://seminar2.techonline.com/registration/wcIndex.cgi?sessionID=arm_jun1411</a>.<br /><br />The wolfSSL embedded SSL library has support and optimizations for ARM chipsets.  If you have any questions about running wolfSSL on your ARM-based device, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 New Features - Part 4',
    'post_content' => 'Here`s the fourth part in a four part series giving a more detailed report on some of the new features present in the recent wolfSSL release.<br /><br />	•	  Shared build only by default.  wolfSSL used to build in shared mode and static mode by default, somewhat handy, but twice as time consuming.  Now, wolfSSL will only build in shared mode by default, seemingly speeding up the build by a factor of two.  Of course either mode can still be explicitly disabled or enabled.<br /><br />	•	  Compiler visibility additions.  wolfSSL now uses compiler visibility, if the compiler supports it, to explicitly expose or hide non static functions.  This decreases wolfSSL`s pollution of the global namespace and also decreases the chance of collisions.<br /><br />	•	  Single Makefile.  wolfSSL used to use Makefiles recursively, one for each directory.  While initially easy to setup, there are several drawbacks to this configuration including slow build times and increasingly complex interactions between the files.  The new single makefile is simpler and faster.  Thanks to Brian Aker for suggesting the last two items.<br /><br />	•	  Kitchen sink warnings.  wolfSSL now has a configure option (--enable-gcc-lots-o-warnings) that turns on many additional warnings that shouldn`t fire in a release.  wolfSSL has removed the ones that do, though not all systems, versions, compiler versions have been tested so we`re still fine-tuning these.<br /><br />Please email us at <a href="mailto:info@yassl.com">info@yassl.com</a> or <a href="mailto:support@yassl.com">support@yassl.com</a> with any questions regarding the above feature additions, or wolfSSL / embedded SSL in general.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'World IPv6 Day',
    'post_content' => 'June 8, 2011 (this Wednesday) is World IPv6 Day, a day that several major organizations will offer content over IPv6 during a 24-hour time period.  As stated on the ISOC website, "the goal of the test flight day is to motivate organizations across the industry - Internet service providers, hardware makers, operating system vendors and web companies - to prepare their services for IPv6 to ensure a successful transition as IPv4 addresses run out."<br /><br />Organizations who are taking part in World IPv6 Day include Google, Facebook, Yahoo, Akamai, Limelight Networks, CISCO, Comcast, and many more.  You can find the entire list of stated participants here, <a href="http://worldipv6day.org/participants/index.html">http://worldipv6day.org/participants/index.html</a>.<br /><br />wolfSSL has support for IPv6 as well!  wolfSSL was designed as IP neutral, and will work with both IPv4 and IPv6.  The test applications included in the wolfSSL download currently default to using IPv4 (to apply to a broader number of systems).  In order to change the test applications to use IPv6, use the <b>--enable-ipv6</b> option while building the wolfSSL embedded SSL library.<br /><br />Are you prepared for IPv6 Day? To test your current browser setup for World IPv6 Day, you can visit the following pages (which will run a test on your browser setup):<br /><br />Google`s IPv6 Test Page:  <a href="http://ipv6test.google.com/">http://ipv6test.google.com/</a><br />ISOC IPv6 Test Page:  <a href="http://test-ipv6.com/">http://test-ipv6.com/</a><br /><br />To learn more about IPv6 in general, visit the Wikipedia page, here: <a href="http://en.wikipedia.org/wiki/IPv6">http://en.wikipedia.org/wiki/IPv6</a>.  As always, if you have questions or comments about the wolfSSL embedded SSL library or the yaSSL Embedded Web Server, please let us know at info@yassl.com.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 rc2 Release',
    'post_content' => 'The 2nd and possible final release candidate for wolfSSL 2.0 is now available.  This release contains bug fixes for Alert processing and DTLS with DHE.  New features include:<br /><br />- FreeRTOS support<br />- lwIP support<br />- Wshadow warnings removed<br />- ctc_ prefix for CTaoCrypt headers (manual still being updated for this)<br />- asn public header for better collision avoidance<br /><br />Stay tuned for more detailed explanations of the new features that haven`t been covered in our blog series yet.  For questions or comments about this release or embedded SSL in general please contact the yaSSL team at <a href="mailto:support@yassl.com">support@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-6-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The State of SSL on the Internet with Ivan Ristić',
    'post_content' => 'Ivan Ristić, Director of Engineering at Qualys, Inc., will be presenting the results of the first publicly-available survey aimed at assessing the state of SSL on the Internet.  His results will be presented through a free webcast on June 22, 2011 at 2:00 PM EDT.  The presentation will also provide documentation and free tools to test and improve the configuration on SSL servers.  If you are interested in listening to SSL Labs` results, you can register for the free webcast using the following link.<br /><br /><a href="https://www302.livemeeting.com/lrs/1100003821/Registration.aspx?pageName=q8118kzcjcbgb4pz&IsPreview=1">https://www302.livemeeting.com/lrs/1100003821/Registration.aspx?pageName=q8118kzcjcbgb4pz&IsPreview=1</a><br /><br />Qualys SSL Labs:  <a href="https://www.ssllabs.com/">https://www.ssllabs.com/</a>',
    'post_status' => 'publish',
    'post_date' => date('2011-6-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Competitive Upgrade Program',
    'post_content' => 'One of the services that yaSSL provides is the wolfSSL Competitive Upgrade Program. With this program, yaSSL offer competitive upgrade pricing for those who wish move from an outdated or expensive SSL library to wolfSSL with low cost and minimal disturbance to their code base.    <br /> <br />Here’s an outline of the Competitive Upgrade Program:<br /> <br />	1.	You need to currently be using a commercial competitor to wolfSSL.<br />	2.	You will receive up to two weeks of on-site consulting to switch out your old SSL library with wolfSSL.  Travel expenses are not included.<br />	3.	Normally, two weeks is the right amount of time for us to make the replacement in your code and do initial testing.  Additional consulting on a replacement is available as needed.<br />	4.	You will receive the standard wolfSSL royalty free license to ship with your product.<br />	5.	The price is $10,000.<br /> <br />The purpose of this program is to enable users who are currently spending too much on their embedded SSL implementation to move to wolfSSL with ease.  If you are interested in learning more, or interested in how wolfSSL compares to what you are currently using, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-5-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL now has lwIP support',
    'post_content' => 'The wolfSSL (formerly CyaSSL) embedded SSL library now supports lwIP, the light weight internet protocol implementation, out of the box.  The user merely needs to define WOLFSSL_LWIP or uncomment the line /* #define WOLFSSL_LWIP */ in os_settings.h to use wolfSSL with lwIP.  <br /><br />The focus of lwIP is to reduce RAM usage while still providing a full TCP stack.  That focus makes lwIP great for use in embedded systems, the same area where wolfSSL is an ideal match for SSL/TLS needs.  An active community exists with contributor ports for many systems.  Give it a try and let us know if you have any suggestions or questions.<br /><br />For the latest news and releases of lwIP, you can visit the project homepage, here: <a href="http://savannah.nongnu.org/projects/lwip/">http://savannah.nongnu.org/projects/lwip/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS 1.2 Support in wolfSSL',
    'post_content' => 'The wolfSSL embedded SSL library has had support for TLS 1.2 since version 1.1.0 in September of 2009 (over a year and a half ago).  We realize that many people don’t know the difference between TLS 1.1 and TLS 1.2, and we wanted to give some quick highlights on the differences between these two protocol versions.<br /><br />As stated in the TLS 1.1 and 1.2 protocol definitions (RFC 4346, RFC 5246), “The primary goal of the TLS protocol is to provide privacy and data integrity between two communicating applications.”  TLS 1.2 is an improvement to the TLS 1.1 standard, but how exactly do they differ?  What was changed in TLS 1.2 to warrant a new version of the protocol?<br /><br />Listed below are the changes made in version 1.2 of the TLS protocol.  TLS 1.2 support is slowly making it’s way into existing projects.  wolfSSL fully supports SSL 3.0, TLS 1.0, TLS 1.1, and TLS 1.2.<br /><br /><b>	A.	 TLS 1.2<br /></b><b><br /></b>This protocol was defined in RFC 5246 in August of 2008.  Based on TLS 1.1, TLS 1.2 contains improved flexibility. One of the primary goals of the TLS 1.2 revision was to remove the protocol’s dependency on the MD5 and SHA-1 digest algorithms.  The major differences include:<br />	-	The MD5/SHA-1 combination in the pseudorandom function (PRF) was replaced with cipher-suite-specified PRFs.<br />	-	The MD5/SHA-1 combination in the digitally-signed element was replaced with a single hash.  Signed elements include a field explicitly specifying the hash algorithm used.<br />	-	There was substantial cleanup to the client`s and server`s ability to specify which hash and signature algorithms they will accept.<br />	-	Addition of support for authenticated encryption with additional data modes.<br />	-	TLS Extensions definition and AES Cipher Suites were merged in.<br />	-	Tighter checking of EncryptedPreMasterSecret version numbers.<br />	-	Many of the requirements were tightened<br />	-	Verify_data length depends on the cipher suite<br />	-	Description of Bleichenbacher/Dlima attack defenses cleaned up.<br />	-	Alerts must be sent in many cases<br />	-	After a certificate_request, if no certificates are available, clients now MUST send an empty certificate list.<br />	-	TLS_RSA_WITH_AES_128_CBC_SHA is now the mandatory to implement cipher suite.<br />	-	Added HMAC-SHA256 cipher suites.<br />	-	Removed IDEA and DES cipher suites.  They are now deprecated.<br /><br />To read more about TLS 1.2, you can find the specification (RFC 5246), here:  <a href="http://tools.ietf.org/html/rfc5246">http://tools.ietf.org/html/rfc5246</a>.<br /><br /><b>B.  Goals of the TLS Protocol<br /></b><br /><b>	-	Cryptographic security</b>: TLS should be used to establish a secure connection between two parties.<br /><b>	-	Interoperability</b>: Independent programmers should be able to develop applications utilizing TLS that can successfully exchange cryptographic parameters without knowledge of one another`s code.<br /><b>	-	Extensibility</b>: TLS seeks to provide a framework into which new public key and bulk encryption methods can be incorporated as necessary.  This will also accomplish two sub-goals: preventing the need to create a new protocol (and risking the introduction of possible new weaknesses) and avoiding the need to implement an entire new security library.<br /><b>	-	Relative efficiency</b>: Cryptographic operations tend to be highly CPU intensive, particularly public key operations.  For this reason, the TLS protocol has incorporated an optional session caching scheme to reduce the number of connections that need to be established from scratch.  Additionally, care has been taken to reduce network activity.<br /><br /><b>Resources:<br /></b>If you would like to read more about SSL or TLS, here are several resources that might be helpful:<br /><br />TLS - Wikipedia (<a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">http://en.wikipedia.org/wiki/Transport_Layer_Security</a>)<br />TLS 1.0 (RFC 0000):  <a href="http://tools.ietf.org/html/rfc2246">http://tools.ietf.org/html/rfc2246</a><br />TLS 1.1 (RFC 0000):  <a href="http://tools.ietf.org/html/rfc4346">http://tools.ietf.org/html/rfc4346</a><br />TLS 1.2 (RFC 0000):  <a href="http://tools.ietf.org/html/rfc5246">http://tools.ietf.org/html/rfc5246</a><br /><br /><br />As always, if you have any questions or would like more information about the wolfSSL embedded SSL library or the yaSSL Embedded Web Server, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-5-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 Release In Progress',
    'post_content' => 'If you`ve been keeping an eye on our blog lately, you`ve probably noticed our series of blog posts about new features and changes we have made in wolfSSL 2.0. If you`re as excited as we are about our next release, we hope you enjoy the following video link:<br /><br /><a href="http://www.youtube.com/watch?v=9jK-NcRmVcw">http://www.youtube.com/watch?v=9jK-NcRmVcw</a><br /><br />Release Candidate 1 for wolfSSL 2.0 is available for download from our "Download" page (link).  We invite you to download it and take it for a spin.  Let us know about any bugs or problems you run into, and if you have any suggestions to make our 2.0 release more robust we`d love to hear them. Please send any comments or questions to <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks,<br />Team yaSSL<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 New Features - Part 3',
    'post_content' => 'Here`s the third part in a four part series giving a more detailed report on some of the new features present in the recent wolfSSL release.<br /><br />	•	 Runtime hooks for logging.  The wolfSSL embedded SSL library has had the ability to do logging when debug is enabled for some time.  Now, logging callback functions can be registered at runtime to provide some more flexibility with how logging is done.  The logging callback can be registered with:<br /><br />int wolfSSL_SetLoggingCb(wolfSSL_Logging_cb log_function);<br /><br />typedef void (*wolfSSL_Logging_cb)(const int logLevel,<br />                                 const char *const logMessage);<br /><br />The log levels can be found in <b>logging.h</b> and the implementation is in <b>logging.c</b>.  By default, wolfSSL logs to <i>stderr</i> with <i>fprintf</i>.<br /><br />	•	 More informative error codes.  With the new logging facility an effort was made to change generic errors (-1) to more informative ones.  This should aid in the debugging of SSL problems in general and particularly during the SSL handshake.<br /><br />	•	 More informative logging messages.  As with the above feature, an effort was made to have more descriptive logging messages both in error cases and for informational output.  These should aid debugging and tracking as well.<br /><br />	•	 EDH on server side.  A wolfSSL server can now do Ephemeral Diffie-Hellman.  No build changes are needed to add this feature.  Though an application will have to register the ephemeral group parameters on the server side to enable the EDH cipher suites.  A new API can be used to do this:<br /><br />int wolfSSL_SetTmpDH(SSL* ssl, unsigned char* p,int pSz,unsigned char* g,int gSz);<br /><br />The example server and echoserver use this function from SetDH().<br /><br />	•	 More robust server downgrade.  Both wolfSSL clients and servers now have robust version downgrade capability.  If a specific version method is used on either side then only that version will be negotiated or an error will be returned.  A client that uses TLSv1 and tries to connect to a SSLv3 only server will fail, likewise connecting to a TLSv1.1 will fail as well.  On the other hand, a client that uses SSLv23 (use the highest version supported and downgrade to SSLv3 if needed) will connect to a server running SSLv3 - TLSv1.2.  The only version it can`t connect to is SSLv2 which has been insecure for years.  Similarly, a server using SSLv23 can handle clients from SSLv3 - TLSv1.2.  A wolfSSL server can`t accept a connection from SSLv2 because no security is provided.<br /><br />Please email us at <a href="mailto:info@yassl.com">info@yassl.com</a> or <a href="mailto:support@yassl.com">support@yassl.com</a> with any questions regarding the above feature additions, the wolfSSL embedded SSL library, or embedded SSL in general.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL is Being Ported to OpenRTOS',
    'post_content' => 'We wanted to let our followers know that we`re in the process of porting wolfSSL to FreeRTOS/OpenRTOS. FreeRTOS is a real-time operating system for embedded devices which is designed to be small and simple. Currently, it officially supports 27 architectures and is downloaded over 77 thousand times every year.<br /><br />Like wolfSSL, FreeRTOS is portable, open source and royalty free. OpenRTOS has an identical code base to FreeRTOS except it offers a commercial license for those projects which would rather not abide by the terms of the GPL.<br /><br />For a full list of features in FreeRTOS/OpenRTOS, and to learn more about the project in general, visit the FreeRTOS website at <a href="http://www.freertos.org">http://www.freertos.org</a>/.<br /><br />If you would like to use wolfSSL with FreeRTOS, or have any questions about our port, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks!<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and the KLone Web Application Framework',
    'post_content' => 'We want to announce that the wolfSSL embedded SSL library has been ported to the popular KLone Web Application Framework and is now available as a build option in KLone 2.4.0!<br /><br />KLone is a multi-platform web application development framework which is targeted specifically for embedded systems and appliances.  It not only includes a full-featured web server, but also an SDK for creating websites with both static and dynamic content.  KLone combines the web server application (HTTP, HTTPS) together with content and configuration into one single executable file.  Because it`s optimized to run in embedded environments, it maintains a small application footprint and offers fast execution speeds.<br /><br />We think that KLone and wolfSSL fit together very well.  Both are optimized for embedded environments, are dual licensed under the GPLv2 and commercial licensing, are royalty free, and have awesome development teams behind them.  Initial tests with KLone and wolfSSL resulted in a 20X disk/flash footprint decrease and a 3X performance gain over the comparable OpenSSL+libcrypto combo.<br /><br />To build KLone with wolfSSL, follow the instructions provided with the KLone download located in the README.wolfSSL file, or download the KLone "Crypto" example application and follow the included instructions.  More information can be found at the following links:<br /><br />wolfSSL: <a href="http://yassl.com/yaSSL/Products_cyassl.html">http://yassl.com/yaSSL/Products_cyassl.html</a><br />KLone: <a href="http://www.koanlogic.com/klone/">http://www.koanlogic.com/klone/</a><br />KLone Crypto Example App: <a href="http://wiki.koanlogic.com/doku.php?id=klone">http://wiki.koanlogic.com/doku.php?id=klone</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 New Features - Part 2',
    'post_content' => 'Here`s the second part in a four part series giving a more detailed report of some of the new features present in the recent wolfSSL release.<br /><br />	•	 UID parsing for x509.  Certificates that contain UIDs now have the UID saved for retrieval by wolfSSL.  No additional function calls are needed as the UID is contained in the subject or issuer name line and processed like email as part of the Common Name (CN).  The UID is prefixed with /UID as the identifier.<br /><br />	•	 SHA-256 Certificate Signatures.  Some certificates are showing up in the wild with SHA-256 certificates though it`s still very unusual.  To stay ahead of the curve, wolfSSL now supports certificate and signature verification with SHA-256.  No action is needed by the user as this is all done internally.<br /><br />	•	 Client and server can send certificate chains.  Previously, wolfSSL would only send the actual or "bottom" certificate of a chain and rely on the other side to have the rest of the chain available for processing.  Now, the user can load all or part of a certificate chain using the function call:<br /><br />    int SSL_CTX_use_certificate_chain_file(SSL_CTX *ctx, const char *file);<br /><br />file must be in PEM format and must be sorted starting with the subject`s certificate (the actual client or server cert), followed by any intermediate certificates and ending (optionally) at the root "top" CA.  The example server now uses this functionality.<br /><br />	•	 CA loading can now parse multiple certificates per file.  wolfSSL is able to load several CAs for verification purposes from one file using the function call:<br /><br />    int SSL_CTX_load_verify_locations(SSL_CTX *ctx, const char *CAfile, const char *CApath);<br /><br />by passing in a CAfile in PEM format with as many certs as possible.  This is useful when a client needs to load several root CAs at startup and makes initialization easier.  It also makes it easier to port into tools that expect to be able to use a single file for CAs.<br /><br />	•	 Dynamic memory runtime hooks.  wolfSSL has had a memory abstraction layer for quite some time, allowing the user to take control of dynamic memory handling.  This new feature allows the ability to register the memory override functions at runtime instead of compile time.  <b>cyassl_memory.h</b> is the header for this functionality and the user can call:<br /><br />    int wolfSSL_SetAllocators(wolfSSL_Malloc_cb  malloc_function,<br />                       wolfSSL_Free_cb    free_function,<br />                       wolfSSL_Realloc_cb realloc_function);<br /><br />to setup the memory functions.  Please see the header for the callback prototypes and <b>cyassl_memory.c</b> for the implementation. <br /><br />Please email us at <a href="mailto:info@yassl.com/">info@yassl.com</a> or <a href="mailto:support@yassl.com/">support@yassl.com</a> with any questions regarding the above feature additions, or wolfSSL in general.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Documentation and the SSL Tutorial',
    'post_content' => 'Hi!  In the last 9 months, we’ve made great strides in improving our documentation.  However, we recognize that more work needs to be done.  We primarily want to make it easy for someone who is new to SSL to get started and be productive and comfortable with the technology. <br /> <br />One of the documents that we came out with is a general purpose <a href="perma://BLPageReference/AE1DD7D5-59D5-44C3-AA1E-89434EAA6C7A">SSL tutorial</a> targeted to programmers that are getting started with wolfSSL. <br /> <br />Our goal is to continue to make incremental improvement in the documentation, so please give us your feedback!  Let us know where we are lacking and what needs to be better explained.  We’ll make the changes, just send us an email with your thoughts on how we can improve to <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /> <br />Thanks!<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0 New Features - Part 1',
    'post_content' => 'Here`s a more detailed report on some of the new features that are in the recent wolfSSL 2.0 release.  wolfSSL 2.0 RC1 is available for download from our <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">Downloads page</a>.<br /><br /><b>* </b>SHA-256 cipher suites are now supported.  The new suites include:<br /><br />TLS_DHE_RSA_WITH_AES_256_CBC_SHA256<br />TLS_DHE_RSA_WITH_AES_128_CBC_SHA256<br />TLS_RSA_WITH_AES_256_CBC_SHA256<br />TLS_RSA_WITH_AES_128_CBC_SHA256<br /><br />No action is needed to include these suites, they`re in by default.<br /><br /><b>* </b>Root certificate verification has been added.  wolfSSL used to require all certificates in the chain to be trusted in order to do a verification.  Now, only the top or root certificate of the chain is required to be loaded as a trusted certificate in order to properly verify the chain.<br /><br /><b>* </b>PKCS #8 private key encryption.  wolfSSL now support PKCS #8 private encrypted keys.  Supported formats include PKCS #5 version 1 - version 2 and PKCS #12.  Types of encryption available include DES, 3DES, RC4, and AES.<br /><br /><b>* </b>Serial number retrieval for x509.  A serial number of any length can now be extracted with wolfSSL using the extension function:<br /><br />int wolfSSL_X509_get_serial_number(X509* x509, byte* buffer, int* inOutSz)<br /><br />buffer will be written to with at most *inOutSz bytes on input.  After the call, if successful (return of 0), *inOutSz will hold the actual number of bytes written to buffer.  A full example is included cyassl_test.h.<br /><br /><b>* </b>PBKDF2 and PKCS #12 PBKDF.  wolfSSL used to only support password based key derivation function 1.  Now it additionally support version 2 and the PBKDF version from PKCS #12.  Use is the same as the original and the function prototypes look like:<br /><br />int PBKDF2(byte* output, const byte* passwd, int pLen, const byte* salt, int sLen, int iterations, int kLen, int hashType);<br /><br />int PKCS12_PBKDF(byte* output, const byte* passwd, int pLen, const byte* salt, int sLen, int iterations, int kLen, int hashType, int purpose);<br /><br />output contains the derived key, passwd holds the user password of length pLen, salt holds the salt input of length sLen, iterations is the number of iterations to perform,  kLen is the desired derived key length, and hashType is the hash to use which can be MD5, SHA1, or SHA2.<br /><br />A full example is included in ctaocrypt/src/test.c.  Please email us at <a href="mailto:info@yassl.com">info@yassl.com</a> or <a href="mailto:support@yassl.com">support@yassl.com</a> with any questions regarding the above feature additions, or wolfSSL in general.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Live from ESC',
    'post_content' => 'The yaSSL team is live from ESC Silicon Valley - located at booth 2322.  This morning and afternoon has been bustling with activity after attendees lined up for the free tote bag giveaway.  If you’re at ESC 2011, stop by our booth to visit.  We’ll be talking about how you can add SSL/TLS to your embedded application or device through our wolfSSL library as well as our yaSSL Embedded Web Server.<br /><br />We hope to see you here!<br /><br /><b>Team yaSSL</b>',
    'post_status' => 'publish',
    'post_date' => date('2011-5-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 2.0.0 Release Candidate 1 is Now Out',
    'post_content' => 'wolfSSL 2.0.0 Release Candidate 1 is now available for <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">download</a> on our website.  The release is chunk full of new features including:<br /><br />- SHA-256 cipher suites<br />- Root Certificate Verification (instead of needing all certs in the chain)<br />- PKCS #8 private key encryption (supports PKCS #5 v1-v2 and PKCS #12)<br />- Serial number retrieval for x509<br />- PBKDF2 and PKCS #12 PBKDF<br />- UID parsing for x509<br />- SHA-256 certificate signatures<br />- Client and server can send chains (SSL_CTX_use_certificate_chain_file)<br />- CA loading can now parse multiple certificates per file<br />- Dynamic memory runtime hooks<br />- Runtime hooks for logging<br />- EDH on server side<br />- More informative error codes<br />- More informative logging messages<br />- Version downgrade more robust (use SSL_v23*)<br />- Shared build only by default through ./configure<br />- Compiler visibility is now used, internal functions not polluting namespace<br />- Single Makefile, no recursion, for faster and simpler building<br />- Turn on all warnings possible build option, warning fixes<br /><br />Stay tuned for a few posts this week giving more details about all the new features.<br /><br />Because of all the new features and the multiple OS, compiler, feature-set options that wolfSSL allows, there may be some configuration fixes needed. Please send any comments or questions to <a href="mailto:support@yassl.com">support@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-5-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be Exhibiting at ESC Silicon Valley 2011',
    'post_content' => 'yaSSL will be attending ESC Silicon Valley 2011 - the industry’s leading embedded systems event. ESC brings together the largest community of designers, technologists, business leaders, and suppliers all in one place.  ESC Silicon Valley will be held in the McEnery Convention Center in San Jose, CA on May 2-5, 2011.<br /><br />If you’re planning on attending, please stop by the yaSSL booth (Booth <b>2322</b>) to discuss the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you have any questions, or would like to set up a meeting with us at the conference, please let us know by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />We look forward to seeing you there!<br /><br />ESC Silicon Valley 2011:  <a href="http://esc.eetimes.com/siliconvalley/">http://esc.eetimes.com/siliconvalley/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-4-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'MySQL SSL Performance Benchmarking',
    'post_content' => 'Have you ever been curious about what performance impact SSL has when used with MySQL?  We recently benchmarked SSL vs non-SSL performance in MySQL using yaSSL. yaSSL is bundled with source distributions of MySQL by default. We compared both the footprint size as well as average query times for SELECT queries (measured with the sysbench tool).<br /><br />Our findings were part of a presentation on MySQL security practices along with an introduction to SSL and TLS.  It was titled "<i>Securing MySQL with a Focus on SSL</i>", and was recently presented at the 2011 O`Reilly MySQL Conference & Expo.  If you missed our presentation, or if you would like to download the slides as a reference, you can find them in PDF format on our <a href="perma://BLPageReference/BE72E8B3-6A94-4859-A653-32DB2E3ACB23">Media Page</a>.<br /><br />Our benchmark machine was an Apple Macbook Pro, with the following specs:<br /><br /><b>Apple Macbook Pro<br /></b>Intel Core 2 Duo<br />2.33 GHz<br />4 MB L2 Cache, 2GB Memory, 667 MHz Bus Speed<br /><br /><b>FOOTPRINT SIZE<br /><br /></b>The difference in footprint size between an installation of MySQL with SSL support versus one without SSL is very small (about 5%). There are two directories containing size differences: the `lib` and `bin` directories, with size comparisons as shown in Figure 1, below.<br /><br /><br /><b><br /><br /><br /><br />Figure 1<br /></b>Footprint size comparison of MySQL with SSL (Green) and MySQL without SSL (Red).  This was calculated by running the “du” command inside the MySQL installation directory after a new install.<br /><br /><b><br /><br /><br /><br /><br /><br /><br />AVERAGE SELECT QUERY TIMES<br /></b>Looking at average query times, Figure 2 shows a breakdown of average query time (ms) comparisons for varying number of concurrent client connections.  Looking at one sample specifically, we can see that for a client concurrency of eight, there is a 16.9% increase in the average query time when connections are using SSL.<br /><br /><br /><br /><br /><br /><br /><br /><b>Figure 2<br /></b>Average query times (in ms) for varying number of concurrent client connections.  Results were obtained by using the sysbench tool on a new MySQL installation.<br /><br /><br /><br /><br /><br /><b><br />CONCLUSION<br /></b>These tests were run on a laptop using the sysbench tool. Speeds on enterprise platforms will vary.  If you have any questions about our findings or methodology for testing, please email us directly at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-4-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Securing MySQL with a Focus on SSL',
    'post_content' => 'As you may know, we recently gave a presentation titled "Securing MySQL with a Focus on SSL" at the <a href="http://en.oreilly.com/mysql2011/">2011 O`Reilly MySQL Conference & Expo</a>.  We had a great time, met a bunch of awesome people, and learned a lot.  Now that the conference is over, we`ve posted our slides to our Media page as a resource, <a href="perma://BLPageReference/BE72E8B3-6A94-4859-A653-32DB2E3ACB23">here</a>.<br /><br />Our presentation covers the basics of securing a new MySQL installation, goes over an introduction of how SSL and TLS work, and touches on data encryption as well.  A general outline is below:<br />	<br /><b>MySQL Security<br /></b>-  Common Attacks & Vulnerabilities<br />-  Good Security Practices for MySQL	<br /><br /><b>SSL/TLS	<br /></b>-  Overview of SSL and TLS	<br />-  Configuring and Building MySQL with SSL	<br />-  MySQL SSL Command Options	<br />-  SSL Certificate Creation	<br />-  Performance Comparison	<br />  <br /><b>Additional Security Concerns	<br /></b>-  Data Storage and Encryption	<br /><br />If you find any errors in our presentation, or see things that you think should be added, please let us know.  Stay tuned for a summary of our SSL performance results.<br /><br />Thanks,<br /><b>Team yaSSL</b>',
    'post_status' => 'publish',
    'post_date' => date('2011-4-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL 2011 Q1 Report',
    'post_content' => 'yaSSL has made substantial progress in Q1 of 2011, including improvements and expansions in the areas of standards support, new ciphers, code repositories, and new community activity.  We like to keep our users up to date about our progress.  An overview of yaSSL accomplishments and activities for Q1 can be seen below:<br /><br /><b>wolfSSL<br /></b>- SHA-256 Cipher Suites<br />- PKCS8 Private Key Encryption Support<br />- Password-based key derivation function 2<br />- Better TLS 1.2 support<br /><br /><b>yaSSL Embedded Web Server<br /></b>- Release 0.2.  Added increased documentation, bug fixes, and examples.<br /><br /><b>Porting<br /></b>- Mbed Release.  wolfSSL is now ported to mBed and available for their cloud compiler.<br />- CURL port.  wolfSSL can now be built with CURL (as a build option).<br />- memcached patch.  wolfSSL now provides SSL security for memcache.<br />- reSIPprocate port<br />- Haiku OS.  wolfSSL now works with the Haiku Operating System.<br /><br /><b>Code & Community<br /></b>- Migrated wolfSSL code to GitHub<br />- Introduced the yaSSL Support Forums<br />- Added BMX6 to the wolfSSL Community<br />- Expanded and Grew our Partnership with Intel<br />- Revived and updated our Freshmeat Accounts<br /><br /><b>Conference & Expo`s<br /></b>- FOSDEM<br />- RSA Conference<br />- O`Reilly MySQL Conference & Expo<br />	(Presentation: Securing MySQL with a Focus on SSL)<br /><br />If you have questions about items in the above list, or would like more information on yaSSL products, please contact directly at <a href="mailto:info@yassl.com">info@yassl.com</a>, or through our support forums (<a href="http://www.yassl.com/forums">http://www.yassl.com/forums</a>).<br /><br /><b>Team yaSSL<br /></b>',
    'post_status' => 'publish',
    'post_date' => date('2011-4-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be exhibiting at Infosecurity Europe',
    'post_content' => 'yaSSL will be exhibiting at the Infosecurity Europe Conference and Exhibition (#infosec11) to be held at Earl’s Court, London, England on April 19-21, 2011.  If you’re planning on attending the conference, please stop by the yaSSL booth (Booth <b>L86</b>) to discuss the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  If you have any questions, or would like to set up a meeting with us at the conference, please let us know by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Registration for the Infosecurity Europe conference is FREE.  More information on the conference can be found at the following link:<br /><br />2011 Infosecurity Europe: <a href="http://www.infosec.co.uk/page.cfm/Link=687/t=m/goSection=3">http://www.infosec.co.uk/page.cfm/Link=687/t=m/goSection=3</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-4-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Keep Updated on yaSSL News',
    'post_content' => 'The yaSSL crew believes that keeping our users up to date on company and product news is very important.  With this in mind, we have tried to offer many forms and outlets for you to follow our news.  Currently, you can read our news and keep up to date in any of the following ways:<br /><br />	1.	 Reading the yaSSL Blog - News directly from the source<br />	2.	 Follow us on Twitter - <a href="http://twitter.com/wolfSSL">http://twitter.com/wolfSSL</a><br />	3.	 Like us on Facebook - <a href="http://www.facebook.com/pages/YaSSL/147081235315602">http://www.facebook.com/pages/YaSSL/147081235315602</a><br />	4.	 Use the yaSSL Blog RSS Feed in your favorite RSS reader - <a href="http://www.yassl.com/yaSSL/News/rss.xml">http://www.yassl.com/yaSSL/News/rss.xml</a><br />5.  Follow us on LinkedIn - <a href="http://www.linkedin.com/company/yassl">http://www.linkedin.com/company/yassl</a><br /><br />If there is a different method that you think would be more beneficial for you to receive our news, please let us know, and we’ll think about implementing it.  As always, we love to hear feedback from our users about our products, website, or news we’ve posted.  Please send any comments or suggestions to <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks!<br />The yaSSL Team<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-4-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Security of SCADA Programs',
    'post_content' => 'A post that recently caught our eye, titled "Dozens of exploits released for popular SCADA programs" by Dan Goodin at theregister.co.uk, reveals that SCADA systems may not be as secure as some people think.  In the article, Luigi Auriemma, one of the researchers who released the vulnerabilities, stated that "SCADA is a critical field but nobody really cares about it."<br /><br />SCADA, or "Supervisory Control and Data Acquisition", refers to industrial control systems which monitor, control and collect data from industrial, infrastructure, or facility-based processes.  SCADA systems are found at the heart of many industries including Water Management Systems, Electric Power, Traffic Signals, Mass Transit Systems, and Manufacturing Systems.  As you could guess, an exploit in one of these areas` industrial processes could have an immense impact, and should be taken seriously.<br /><br />Not only do SCADA systems need to be concerned with remote code execution, but the security of data being transferred between the SCADA sensor and the host computer is very important as well.  To secure this data link, SCADA systems may use SSL/TLS to encrypt all traffic between the sensor and server.  wolfSSL is an ideal SSL/TLS solution for this type of system.  The wolfSSL embedded ssl library has been optimized for embedded environments and devices, and is able to provide the best possible SSL/TLS encryption while offering a small footprint and fast speeds.<br /><br />For more information about the released SCADA vulnerabilities, see the links below.  For information regarding the wolfSSL embedded SSL/TLS library, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Wikipedia (SCADA): <a href="http://en.wikipedia.org/wiki/SCADA">http://en.wikipedia.org/wiki/SCADA</a><br />theregister.co.uk Article:  <a href="http://www.theregister.co.uk/2011/03/22/scada_exploits_released/">http://www.theregister.co.uk/2011/03/22/scada_exploits_released/</a><br />Luigi Auriemma`s Post Listing Vulnerabilities: <a href="http://seclists.org/bugtraq/2011/Mar/187">http://seclists.org/bugtraq/2011/Mar/187</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Build Option in CURL',
    'post_content' => 'With the next release of CURL and libcurl, 7.21.5,  there will be support for the wolfSSL Embedded SSL Library.  This allows CURL to leverage the benefits of the wolfSSL library - including its small footprint, optimizations for embedded environments, and support for TLS 1.2.<br /><br />First released in 1997, CURL (“Client for URLs”) is a command line tool (along with libcurl, a library) for transferring data using various protocols with URL syntax.  Some of the supported protocols include DICT, FILE, FTP(S), GOPHER, HTTP(S), IMAP(S), LDAP(S), POP3(S), RTMP, RTSP, SCP, SFTP, SMTP(S), TELNET, AND TFTP.  Being extremely portable, free, feature rich, supported, and fast, it is a go-to tool and library for a large number of users.<br /><br />Basic CURL syntax simply involves typing “curl” at the command line followed by the URL of the output to retrieve.  For example, to retrieve yaSSL’s home page, the following command could be issued:<br /><br />shell>  curl <a href="http://www.yassl.com/yaSSL/Home.html">www.yassl.com/yaSSL/Home.html</a><br /><br />After downloading the CURL source (see link below), wolfSSL support can be enabled by building CURL using the “<b>--with-cyassl</b>” build option.  While enabling wolfSSL, OpenSSL must be disabled by using the “<b>--without-ssl</b>” build option in addition:<br /><br />shell>  ./configure --without-ssl --with-cyassl<br /><br />This assumes that wolfSSL has been installed in the default directory (/usr/local/cyassl).  If wolfSSL has been installed in a different directory, it can be specified by appending it to the wolfSSL build option: “<b>--with-cyassl=PATH</b>”.  For more information about wolfSSL and CURL, please email <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />CURL GitHub Page: <a href="https://github.com/bagder/curl">https://github.com/bagder/curl</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Born in the USA!',
    'post_content' => 'Hi!  We’ve received a lot of questions recently about the origins of the wolfSSL software package.  We get asked where was it developed, and by who?  The questions usually come from US government agencies and their contractors.  Simply stated, mes amis, wolfSSL was <a href="http://www.youtube.com/watch?v=tIekamBDiAw">Born in the USA</a> and written by <a href="http://www.youtube.com/watch?v=lMsIrKjSM6Y">US citizens</a>. <br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Attending the 2011 O’Reilly MySQL Conference',
    'post_content' => 'yaSSL will be attending and speaking at this year’s O’Reilly MySQL Conference and Expo.  This year’s conference will be held April 11-14, 2011 at the Hyatt Santa Clara in Santa Clara, CA.  The MySQL Conference and Expo spans four days and offers a technical atmosphere with access to MySQL developers and open source experts in all areas of expertise.<br /><br />yaSSL will be giving a presentation titled “Securing MySQL with a Focus on SSL”.  This presentation will cover the necessities of securing a new MySQL installation - specifically focusing on the use of SSL connections.  It will offer a good starting place for new MySQL admins to learn the basics, while still providing a good review for the seasoned veterans. Details about this session are listed below:<br /><br /><b>Session Title:</b> Securing MySQL with a Focus on SSL<br /><b>Time:</b> 4:25pm<br /><b>Date:</b> April 12, 2011<br /><b>Location:</b> Ballroom D<br />More Information: <a href="http://en.oreilly.com/mysql2011/public/schedule/detail/17139">http://en.oreilly.com/mysql2011/public/schedule/detail/17139</a><br /><br />If you are planning on attending this year’s O’Reilly MySQL Conference & Expo and would like to visit, please let us know!  You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.  Stay tuned for updates on yaSSL and the MySQL Conference & Expo.<br /><br />2011 O’Reilly MySQL Conference & Expo:  <a href="http://en.oreilly.com/mysql2011/">http://en.oreilly.com/mysql2011/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Encrypted PKCS#8 Support in wolfSSL',
    'post_content' => 'PKCS (Public Key Cryptography Standards) refers to a group of standards created and published by RSA Security, Inc.  PKCS#8 is designed as the Private-Key Information Syntax Standard, which is used to store private key information - including a private key for some public-key algorithm and set of attributes.  <br /><br />The PKCS#8 standard has two versions which describe the syntax to store both encrypted private keys and non-encrypted keys.<br /><br />wolfSSL has had support for non-encrypted PKCS#8 for about a year.  We`re currently in the process of adding support for encrypted PKCS#8.  If you have any comments or questions about using PKCS#8 with wolfSSL, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />To learn more about the PKCS standards, or PKCS#8, please see the links below<br /><br />PKCS (Wikipedia): <a href="http://en.wikipedia.org/wiki/PKCS">http://en.wikipedia.org/wiki/PKCS</a><br />RFC 5208: PKCS#8 (<a href="http://tools.ietf.org/html/rfc5208">http://tools.ietf.org/html/rfc5208</a>)<br />RSA Labs: PKCS#8 (<a href="http://www.rsa.com/rsalabs/node.asp?id=2130">http://www.rsa.com/rsalabs/node.asp?id=2130</a>)<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Seeking Collaborators for Secure Firmware Update System',
    'post_content' => 'One of the upcoming projects on our list is a Secure Firmware Update System. As we have stated before, we believe that digitally signing the firmware that is loaded onto your devices is a very high priority.  Digitally signing your firmware updates offers several benefits, including:<br /><br />	-	Protecting against updates from unauthorized parties<br />	-	Enabling a secure method for allowing third parties to load files to your device<br />	-	Ensuring against malicious files finding their way onto your device<br /><br />For a more detailed explanation of our thoughts surrounding this Secure Firmware Update System as well as a general outline of how setting up code and file signing on an embedded device works, please see our previous <a href="perma://BLPageReference/43EC9D4B-77E4-4F1B-BC6C-E24EB1CF4EFF">blog post</a>.<br /><br />We would like this system to be as robust and useful as possible to our community and customers.  As such, we are seeking collaborators on this project who would be willing to give their feedback and help make this the best product it can be.  If you are interested in collaborating with us on our Secure Firmware Update System, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Answers to Common Questions from RSA - Part 5',
    'post_content' => 'Welcome to part five, the final post in our series of commonly-asked questions that we were asked at the 2011 RSA conference.  In this post, we will be covering the following questions:<br /><br />Where is yaSSL located?<br />Does the yaSSL Embedded Web Server compete with nginx?<br /><br /><b>Q:  Where is yaSSL located?<br /></b><br />yaSSL is based out of Bozeman, MT (<a href="http://maps.google.com/maps?q=bozeman+mt&ie=UTF8&hq=&hnear=Bozeman,+Gallatin,+Montana&gl=us&t=h&z=12">Google Maps</a>) with staff in both Portland, OR and Seattle, WA.<br /><br /><b>Q:  Does the yaSSL Embedded Web Server compete with nginx?<br /></b><br />The yaSSL Embedded Web Server is designed for embedded platforms and environments, and as such does not compete directly with nginx.  These two web servers have several differences which make them both optimal for different environments:<br /><br />	-	The yaSSL Embedded Web Server is smaller and more portable than nginx, making it ideal for resource-constrained embedded platforms. nginx is is around 700kB, whereas the yaSSL Embedded Web Server can be built as small as 100kB.<br />	-	nginx has more features than the yaSSL Embedded Web Server, but they come at the expense of size.<br />	-	nginx is ideal for handling high loads in enterprise environments, whereas the yaSSL Embedded Web Server has been optimized for speed and size on embedded devices.<br /><br />As you can see by the list above these two web servers are not in direct competition - nginx is catered to enterprise and non-embedded platforms while the yaSSL Embedded Web Server has been optimized for embedded environments.<br /><br />If you would like more information on our products, or have any questions or comments, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Answers to Common Questions from RSA - Part 4',
    'post_content' => 'Welcome to part four in our series of commonly-asked questions that we were asked at the 2011 RSA conference.  In this post, we will be covering the following questions:<br /><br />What does wolfSSL have as far as Certificate Management?<br />Is the yaSSL Embedded Web Server similar to Apache / mod_ssl?<br /><br /><b>Q:  What does wolfSSL have as far as Certificate Management?<br /></b><br />wolfSSL includes support for x509 v3 Certificate Generation (Both self-signed and CA-signed).  Certificate generation is turned off by default, but may be enabled during the ./configure process with the “<b>--enable-certgen</b>” build option.  It may also be enabled by defining CYASSL_CERT_GEN in Windows or non-standard environments.<br /><br />For a detailed explanation of how to use wolfSSL to create certificates, please see the wolfSSL Manual (Ch 9, Section XI), or Section XI of the <a href="perma://BLPageReference/C3FC932E-3DA0-48B6-A201-50F69511D5EF">wolfSSL Extensions Reference</a>.<br /><br />Apart from certificate generation, wolfSSL supports both PEM and DER certificates, and provides functions to convert between the two.<br /><br /><b>Q:  Is the yaSSL Embedded Web Server similar to Apache / mod_ssl?<br /></b><br />The yaSSL Embedded Web Server and the Apache Web Server are similar in that it they are both web servers, but differ in their targeted environments.  Although they have the same general categorization, they were built for very different purposes.  Unlike Apache, the yaSSL Embedded Web Server was designed to be used in embedded environments - environments with very constrained resources.<br /><br />Apache excels on desktop or enterprise platforms where performance is important but size or memory usage is negligible.  Many embedded devices only require a simple web server for communication or displaying device status information.  They require something small and fast, something that still offers desired features, and many times something that has support packages available.  The yaSSL Embedded Web Server meets all of these requirements.  For more information on the yaSSL Embedded Web Server, see the <a href="perma://BLPageReference/71A1A7A1-5192-4F85-A8DB-E6F4B2B7DC3D">product page</a>.<br /><br />If you would like more information on our products, or have any questions or comments, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'NTRU Resistant to Quantum Attacks',
    'post_content' => 'As you know, yaSSL has partnered with Security Innovations to provide wolfSSL with NTRU cipher suites.  Recently, Security Innovation and wolfSSL won the “Tomorrow’s Technology Today” award for Mobile Encryption.  In addition, Security Innovation won the award for “Cryptography” for NTRU.<br /><br />One of the advantages that NTRU offers is resistance to quantum attacks.  Other public key operations such as RSA, DSA and ECC rely on a different mathematical algorithm, which with the advent of quantum computers, will be able to be broken by Shor’s Algorithm.  NTRU’s abilities have been both published and reviewed by numerous scholarly journals and conferences.<br /><br />In addition to being protected against quantum attacks, NTRU is much faster than RSA.  When comparing the two ciphers at similar cryptographic strength, NTRU performs public key operations 100 to 200 times faster than RSA.<br /><br />To read more about the awards, visit the respective links:<br />Mobile Encryption (<a href="http://www.infosecurityproductsguide.com/technology/2011/Security-Innovation.html">http://www.infosecurityproductsguide.com/technology/2011/Security-Innovation.html</a>)<br />Cryptography (<a href="http://www.infosecurityproductsguide.com/technology/2011/Security-Innovation-Cryptography.html">http://www.infosecurityproductsguide.com/technology/2011/Security-Innovation-Cryptography.html</a>)<br /><br />If you are interested in learning more about wolfSSL with the NTRU cipher suites, or would like more information about our products, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server Benchmark',
    'post_content' => 'We recently ran a benchmark on the yaSSL Embedded Web Server and wanted to share the results.  Our benchmarking tool was Apache ab.  To learn more about ab, you can reference Apache’s documentation page (<a href="http://httpd.apache.org/docs/current/programs/ab.html">http://httpd.apache.org/docs/current/programs/ab.html</a>), or if it is installed on your system, look at the ab man page (man ab).<br /><br />With a concurrency level of 2 and 100 SSL requests, we found that all 100 requests were serviced within 16 milliseconds, 80% being serviced within 6 ms.<br /><br />Percentage of the requests served within a certain time (ms)<br />50%      5<br />66%      5<br />75%      5<br />80%      6<br />90%      9<br />95%     10<br />98%     15<br />99%     16<br />100%     16 (longest request)<br /><br />With 100 SSL requests, a thread pool of 10, and a concurrency of 10, we saw that all requests were serviced within 33 ms:<br /><br />Percentage of the requests served within a certain time (ms)<br /> 50%     18<br /> 66%     19<br /> 75%     20<br /> 80%     20<br /> 90%     22<br /> 95%     24<br /> 98%     33<br /> 99%     33<br />100%     33 (longest request)<br /><br />Our benchmark was executed on OS X running an Intel Core 2 Duo (2.4 GHz) with 4 GB of 800 MHz RAM.  If you have any questions or comments about these benchmarks, or are looking for a different benchmark, please email us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 1.9.0 Released',
    'post_content' => 'A new release of wolfSSL, 1.9.0, is now available.  This release adds bug fixes, improved TLSv1.2 through testing and better hash/sig algo ids, --enable-webServer for the yaSSL embedded web server, improper AES key setup detection, user cert verify callback improvements, and more.  More details can be found in the wolfSSL manual, which can be found in the doc/ directory or on our <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">Documentation page</a>, online.<br /><br />The --enable-webServer build option provides an alternative to using --enable-opensslExtra.  It enables a smaller and more portable build for users who are using it with the <a href="perma://BLPageReference/71A1A7A1-5192-4F85-A8DB-E6F4B2B7DC3D">yaSSL Embedded Web Server</a>.<br /><br />If you have any questions or comments about the new release, or our products in general, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-3-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Answers to Common Questions from RSA - Part 3',
    'post_content' => 'Welcome to part three in our series of commonly-asked questions that we were asked at the 2011 RSA conference.  In this post, we will be covering the following questions:<br /><br />Why is there a wolf in the yaSSL logo?<br />How does wolfSSL compare to OpenSSL?<br /><br /><b>Q:  Why is there a wolf in the yaSSL logo?<br /></b><br />Why does a security company that focuses on embedded SSL products choose a wolf over any number of possible logo designs?  We chose a wolf to be part of our logo for several reasons:<br /><br />	•	Wolves like to live in free and open environments.<br />	•	Wolves communicate and hunt in packs, like open source developers hunt bugs.<br />	•	Wolves are lean and fast.<br /><br /><b>Q:  How does wolfSSL compare to OpenSSL?<br /></b><br />Many people are curious as to how wolfSSL compares to OpenSSL, and why we recommend migrating your current OpenSSL solution to wolfSSL.<br /><br />	•	<b>Size</b>: With a 30-40k build size, wolfSSL can be up to 20 times smaller than OpenSSL. wolfSSL is a better choice for resource constrained environments.<br />	•	<b>Standards Support</b>: wolfSSL is up to date with the most current standards of TLS 1.2 with DTLS, which OpenSSL has yet to address.<br />	•	<b>Streaming Media</b>: wolfSSL is up to date with the best current ciphers and standards for streaming media support, including the HC-128 and RABBIT stream ciphers.<br />	•	<b>Embedded Systems Support</b>: wolfSSL is the leading SSL library for real time, mobile and embedded systems, by virtue of its breadth of platform support and successful implementations on embedded environments.<br />	•	<b>License</b>: wolfSSL is available under proper commercial licenses direct from Montana, or under the GPL, whereas OpenSSL is available only under their unique license from multiple sources.<br /><br />If you have any additional questions on how we compare ourselves to OpenSSL, or you would like more information about our products, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Symantec’s Mario Ballano blogs about Android Malware, Android.Pjapps',
    'post_content' => 'See <a href="http://www.symantec.com/connect/blogs/android-threats-getting-steamy">http://www.symantec.com/connect/blogs/android-threats-getting-steamy</a>.  From the post:  “The aim of Android.Pjapps is to build a botnet controlled by a number of different Command and Control (C&C) servers. Among other things, it is able to install applications, navigate to websites, add bookmarks to your browser, send text messages, and optionally block text message responses.”<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-3-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Answers to Common Questions from RSA - Part 2',
    'post_content' => 'To continue our series of commonly-asked questions which we were asked at the 2011 RSA conference, we will be answering the following questions:<br /><br />Can you port wolfSSL to my platform?<br />If wolfSSL is open source, then how do you make money?<br /><br /><b>Q:  Can you port wolfSSL to my platform?<br /></b><br />yaSSL offers a range of consulting services in order to help you optimize our products for your environment and project. One of the services we offer is the porting of our products (including wolfSSL) to new host languages and new operating environments.<br /><br />We also provide feature additions (adding additional features you may need which are not currently in our products), and for those of you who are trying to move from an outdated or expensive SSL library, we offer a competitive upgrade program. You can read more about our consulting services on our <a href="perma://BLPageReference/A18D462A-4DA2-4880-92D3-0E8AA9E091C5">About page</a>, or by emailing us directly at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br /><b>Q:  If wolfSSL is open source, then how do you make money?<br /></b><br />We are strong believers in open source, and as such, make our products freely available under the GPLv2.  As you may know, our products are dual licensed under both the GPLv2 and standard commercial licensing.  We make money primarily from the following three areas:<br /><br />	-	Commercial License Sales<br />	-	Support Packages<br />	-	Consulting Work<br /><br />As always, if you have any questions or would like more information, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-2-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Answers to Common Questions from RSA - Part 1',
    'post_content' => 'If you’ve been following our blog, you know we are planning on answering some common questions that we were asked during the 2011 RSA Conference.  Today is the first post in this series.  The first questions we will be looking at are:<br /><br />Does wolfSSL have sniffer, also known as SSL Inspection functionality?<br />What about resiliency in the TCP reassembly library?<br /><br /><b>Q:  Does wolfSSL have sniffer, also  know as SSL Inspection functionality?<br /></b><br />Yes, wolfSSL has had SSL Inspection (sniffer) functionality since version 1.5.0.  We have provided a build option allowing the wolfSSL library to be built with this functionality.  This means you are able to collect SSL traffic packets and with the correct key file, are able to decrypt them as well.  This is useful for many reasons, some of which include:<br /><br />- Analyzing Network Problems<br />- Detecting network misuse by internal and external users<br />- Monitoring network usage and data in motion<br />- Debugging client/server communications<br /><br />To enable SSL Inspection (sniffer) support, build wolfSSL with the "--enable-sniffer" option on *nix or use the vcproj files on Windows. You will need to have pcap installed on *nix or WinPcap on Windows.  To learn more about functions provided and more detailed usage, please see either the <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">wolfSSL Manual</a>, or the "<a href="perma://BLPageReference/329F62F1-FE10-4577-8A29-0D8648933D5A">wolfSSL Additional Features</a>" document.<br /><br /><b>Q:  What about resiliency in the TCP re-assembly library?<br /></b><br />The wolfSSL TCP re-assembly library is currently functional, but not resilient.  This is something that several people have asked about, and something we are looking into.  If you have a need for a resilient TCP re-assembly library, or think this would be beneficial to your project, please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-2-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Creating Secure Web-Based User Interfaces for Embedded Devices',
    'post_content' => 'While at FOSDEM 2011, we had the opportunity to listen to Arnout Vandecappelle’s presentation titled “Creating secure web based user interfaces for Embedded Devices.”  We really enjoyed it, and wanted to share it with our readers.  You can read the abstract, taken from <a href="http://mind.be/">mind.be</a>, below:<br /><br /><b>Abstract: <br /><br /></b>A web interface is the easiest way to add something GUI-ish to an embedded system. However, setting up an Apache and writing CGI scripts requires too much work and overburdens resource constrained systems.. This presentation shows you the best tools to simplify your life for adding an interface to your embedded system. The first step is the Mongoose Embedded Web Server. It is a tiny (40K) yet fully-featured web server that can be embedded directly in your application. Combining it with the efficient wolfSSL library gives you a secure environment. For a more advanced GUI, there is Wt, which completely removes the burden of web programming from you - you`ll hardly even notice there`s a web server in your application!<br /><br />You can download Arnout’s presentation in both PDF and ODP formats from the mind.be publication page.  We’ll also be linking to Arnout’s slides on our <a href="perma://BLPageReference/BE72E8B3-6A94-4859-A653-32DB2E3ACB23">media page</a> as well.<br /><br />Link to mind.be publication page: <a href="http://mind.be/?page=publications">http://mind.be/?page=publications</a><br />Direct link to PDF slides: <a href="http://mind.be/content/110206_Web-ui.pdf">http://mind.be/content/110206_Web-ui.pdf</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-2-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Attending the 2011 Game Developers Conference',
    'post_content' => 'yaSSL will be attending the 2011 Game Developers Conference.  The Game Developers Conference (GDC) is the world’s largest professionals-only game industry event.  It attracts over 18,000 attendees, and is the primary forum where programmers, artists, producers, game designers, audio professionals, business decision-makers and others involved in the development of interactive games gather to exchange ideas and shape the future of the industry.<br /><br />GDC 2011 will be held at the Moscone Center in San Francisco, February 28, 2011 thru March 4, 2011.  <br /><br />If you are planning on attending this year’s Game Developers Conference and would like to visit or meet, please let us know!  You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />2011 Game Developers Conference:  <a href="http://www.gdconf.com/">http://www.gdconf.com/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-2-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Answers to Common Questions to Team yaSSL at the RSA Security Conference',
    'post_content' => 'Hi!  If you follow yaSSL, you probably know we were exhibiting at the RSA Security Conference at Moscone last week.  Our next set of posts will answer common questions that we were fielding at the show. Some of the common questions included:<br /> <br />	-	Does wolfSSL have sniffer, also known as SSL Inspection functionality?<br />	-	What about resiliency in the TCP reassembly library?<br />	-	Can you port wolfSSL to my platform?<br />	-	If wolfSSL is open source, then how do you make money?<br />	-	Why is there a wolf in the yaSSL logo?<br />	-	How do you compare to OpenSSL?<br />	-	What does wolfSSL have as far as Certificate Management?<br />	-	Is the yaSSL Embedded Web Server similar to Apache / mod_ssl?<br />	-	Where is yaSSL located?<br />	-	Does the yaSSL Embedded Web Server compete with nginx?<br /><br />Stay tuned to the yaSSL blog for answers to these questions and more!',
    'post_status' => 'publish',
    'post_date' => date('2011-2-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL+ with NTRU Cipher Suites',
    'post_content' => 'wolfSSL+ (pronounced plus) is now available.  wolfSSL+ includes NTRU public key encryption.  NTRU works well in mobile environments because of the reduced bit size needed to provide the same security as other public key systems.  NTRU also isn’t vulnerable to quantum attacks.  Several new cipher suites utilizing NTRU are available including AES-256, RC4, and HC-128.  Please contact us if you have any questions.',
    'post_status' => 'publish',
    'post_date' => date('2011-2-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL library available for the mbed cloud compiler',
    'post_content' => 'For everyone out there prototyping on the cool mbed board (<a href="http://mbed.org/">http://mbed.org/</a>), we`ve recently published our wolfSSL TLS/SSL embedded library to their cloud compiler so that developers can easily add it to their project.  It`s available at <a href="http://mbed.org/users/toddouska/libraries/wolfSSL/lm43pv">http://mbed.org/users/toddouska/libraries/wolfSSL/lm43pv</a> .  We also have an example client you can try out at <a href="http://mbed.org/users/toddouska/programs/cyassl-client/lm394s">http://mbed.org/users/toddouska/programs/cyassl-client/lm394s</a> .  Now securing connections, even during a prototype, is easily and rapidly attainable.  Please send us any comments or questions.',
    'post_status' => 'publish',
    'post_date' => date('2011-2-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL now on GitHub',
    'post_content' => 'For those developers that prefer git, using GitHub, or just have to have the latest wolfSSL source code it`s now available on GitHub.  You can grab the latest sources from <a href="mailto:git@github.com">git@github.com</a>:cyassl/cyassl.git .  We`ve got all the source now there but we`re gradually moving away from sourceforge.  So we`re still in transition.  Please let us know if you have any questions or comments.',
    'post_status' => 'publish',
    'post_date' => date('2011-2-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be exhibiting at the 2011 RSA Conference',
    'post_content' => 'yaSSL will be exhibiting at the 2011 RSA Conference in San Francisco - booth number <b>330</b>. The conference will be held on February 14-18 at Moscone in San Francisco.  If you’re planning on attending the conference, please stop by the yaSSL booth to discuss the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.  We’ll also be visiting customers in the Bay Area that week, so let us know if you’d like us to set aside some time for you by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />2011 RSA Conference: <a href="http://www.rsaconference.com/2011/usa/index.htm">http://www.rsaconference.com/2011/usa/index.htm</a>',
    'post_status' => 'publish',
    'post_date' => date('2011-2-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server 0.2 is Now Available',
    'post_content' => 'The second release of the yaSSL Embedded Web Server is now available for download!  New features with this version include a source release, better documentation, examples, and new run-time options.  <br /><br />Our Web Server is focused on being small, fast, and embeddable.  Features include CGI, SSI, IP restrictions, access and error log support, and SSL among others.  The wolfSSL embedded SSL library can be used to secure ports with SSL, giving you a secure connection while maintaining small size and fast speed.  <br /><br />On an embedded system you can expect to see the yaSSL Embedded Web Server with wolfSSL enabled to come in around 100kB total.  We offer commercial support, consulting, and licenses for use in a wide variety of projects.<br /><br />If you have any questions, or would like to learn more about the yaSSL Embedded Web Server and how it can help your project, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-2-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be Talking at FOSDEM 2011',
    'post_content' => 'As we have posted before, yaSSL is attending FOSDEM in Brussels, Belgium on February 5-6, 2011.  We will be giving a lightning talk as well as taking an active part in the Security / hardware crypto, Embedded, and MySQL & friends Developer rooms.  Times and details of our two talks are listed below:<br /><br /><b>Lightning Talk:<br /></b>Title: wolfSSL: All the fun stuff we`re doing with wolfSSL<br />Day: Saturday, Feb. 5, 2011<br />Room: Ferrer<br />Start Time: 17:20<br /><a href="http://fosdem.org/2011/schedule/event/cyassl">http://fosdem.org/2011/schedule/event/cyassl</a><br /><br /><b>Security & hardware crypto devroom talk:<br /></b>Title: wolfSSL<br />Day: Saturday, Feb. 5, 2011<br />Room: AW1.105<br />Start Time: 14:45<br /><a href="http://fosdem.org/2011/schedule/event/cyassl_pitch">http://fosdem.org/2011/schedule/event/cyassl_pitch</a><br /><br />As the fosdem.org site states, "FOSDEM is the biggest free and non-commercial event organized by and for the community. Its goal is to provide Free and Open Source developers a place to meet."<br /><br />If you are attending and would like to meet up with us, please contact <a href="mailto:larry@yassl.com">larry@yassl.com</a> to set up a meeting time. There is no registration required for FOSDEM 2011, so if you`re going to be in the area, stop by and say hello!<br /><br />FOSDEM 2011:  <a href="http://fosdem.org/2011/">http://fosdem.org/2011/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-2-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Upcoming Talk on Securing MySQL with a Focus on SSL',
    'post_content' => 'yaSSL will be giving a presentation at the upcoming 2011 O’Reilly MySQL Conference & Expo in Santa Clara, CA. The presentation will be titled “Securing MySQL with a Focus on SSL” and will include an overview of some MySQL security practices with a main focus on configuring and building MySQL with SSL/TLS.  Some of the topics covered in the presentation will include:<br /><br />	-	Good Security Practices for MySQL<br />	-	Overview of SSL and TLS<br />	-	Configuring and Building MySQL with SSL<br />	-	SSL Certificate Creation<br />	-	Performance Comparison when using SSL<br />	-	Data Storage and Encryption<br /><br />To read the full presentation outline, please visit the conference page: <a href="http://en.oreilly.com/mysql2011/public/schedule/detail/17139">http://en.oreilly.com/mysql2011/public/schedule/detail/17139</a><br /><br />If you will be attending the O’Reilly MySQL Conference and would like to set up a time to visit with us, or if you would like more information about our services or products, please email <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-2-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Great Article on the Challenges of Smart Utility Meters',
    'post_content' => 'Here’s a great article from EE Times on smart utility meter design. Two of the big challenges described in the article are ones that we’ve dealt with before with our current users in the utility space. Securing the meter, and getting updates to the device securely. <br /><br />wolfSSL embedded SSL is a critical component for both design requirements. It’s not talked about in the article, but the yaSSL Embedded Web Server is also useful when the meter design calls for delivery of web pages from the meter for field service technicians.  <br /><br />See the article here:  <a href="http://www.eetimes.com/design/embedded/4212469/Addressing-the-challenges-of-smart-utility-meter-design-?pageNumber=2&Ecosystem=embedded">http://www.eetimes.com/design/embedded/4212469/Addressing-the-challenges-of-smart-utility-meter-design-?pageNumber=2&Ecosystem=embedded</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-1-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SD Times has a nice cover story on Open Source',
    'post_content' => 'Check it out here:  <a href="http://www.sdtimes.com/content/currentissue.aspx">http://www.sdtimes.com/content/currentissue.aspx</a>.  To quote the SD Times Editors:  “If your organization still maintains the view that open-source software is code written by amateurs, well, it’s time to move on.”  We think that sums it up nicely. <br /><br />We can sum up our thinking on open source with a simple statement:  Open source is a better way to develop, distribute, and support software. ',
    'post_status' => 'publish',
    'post_date' => date('2011-1-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is looking to Hire!',
    'post_content' => '<a href="http://yaSSL.com/">yaSSL.com</a> is a growing company looking to add a top notch embedded systems software developer to our organization. We develop, market and sell the leading open source embedded SSL protocol implementation, wolfSSL. We are also the developers of the yaSSL Embedded Web Server. Our users are primarily building devices or applications that need security.<br /><br />Operating environments of particular interest to us include Embedded Linux, VxWorks, QNX, ThreadX, micro-C, RL-ARM. Skill with the new mobile and embedded environments like Android and iOS is a plus.<br /><br />Currently, we are seeking to add a master level C developer interested in a fun young company with tremendous upside.<br /><br />Backgrounds that are useful to our team include networking, security, and hardware optimizations. Assembly experience is a plus. Experience with encryption software is a plus. RTOS experience is a plus.<br /><br />To apply or discuss, please contact <a href="mailto:larry@yassl.com">larry@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-1-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at the O`Reilly MySQL Conference & Expo',
    'post_content' => 'yaSSL will be presenting at the 2011 O’Reilly MySQL Conference and Expo.  The conference will be held at the Hyatt Santa Clara in Santa Clara, CA on April 11-14, 2011.  The presentation will be titled “Securing MySQL with a Focus on SSL” and will touch on several topics:<br /><br />	-	Good Security Practices with MySQL<br />	-	An Overview of SSL and TLS<br />	-	Configuring and Building MySQL with SSL<br />	-	SSL Certificate Generation<br />	-	A Performance Comparison of using SSL<br />	-	Data Storage and Encryption<br /><br />If you are planning on attending the 2011 MySQL Conference and would like to set up a time to talk with us, contact <a href="mailto:info@yassl.com">info@yassl.com</a>.  You can also follow us on Twitter for up to the minute updates about yaSSL and our products: <a href="http://twitter.com/wolfSSL">http://twitter.com/wolfSSL</a>.<br /><br />2011 O’Reilly MySQL Conference & Expo:  <a href="http://en.oreilly.com/mysql2011/">http://en.oreilly.com/mysql2011/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-1-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be attending ESC Silicon Valley 2011',
    'post_content' => 'yaSSL will be attending ESC Silicon Valley 2011, the industry’s leading embedded systems event. ESC brings together the largest community of designers, technologists, business leaders, and suppliers all in one place.<br /><br />ESC Silicon Valley will be held in the McEnery Convention Center in San Jose, CA on May 2-5, 2011.  The yaSSL team will be talking about wolfSSL and the yaSSL Embedded Web Server, and will look forward to visiting with members of the embedded community!<br /><br />If you are planning on attending ESC Silicon Valley this year and would like to visit, please let us know! You can email any comments or questions to <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />ESC Silicon Valley:  <a href="http://esc-sv09.techinsightsevents.com/">http://esc-sv09.techinsightsevents.com/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-1-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Secure Firmware Updates with wolfSSL',
    'post_content' => 'We believe that in today’s world of connected devices and heightened security concerns, digitally signing the firmware that is loaded onto your embedded or mobile device has become a top priority. One of the reasons that embedded RTOS environments do not include digital signature functionality is because it has historically not been a requirement for most embedded applications. This is no longer true today - without secure firmware updates, even if a system has been secured, a malicious firmware update can undermine much of the work which was put into securing the device.<br /><br />wolfSSL is a popular tool for digitally signing applications, libraries or files prior to loading them on embedded devices and as such, it is ideal for signing firmware updates. Because wolfSSL supports the key embedded and real time operating systems, encryption standards, and authentication functionality, it is a natural choice for embedded systems developers to use when signing firmware updates.<br /> <br />Generally, the process for setting up code and file signing on an embedded device are as follows:<br /> <br />	1.	  The embedded systems developer will generate an RSA key pair.<br />	2.	  A server side script based tool is developed<br />            a.  The server side tool will create a hash of the code to be loaded on the device with SHA-256 for example.<br />            b.  The hash is then digitally signed, also called a RSA private encrypt.<br />            c.  A package is created that contains the code along with the digital signature.<br />	1.	  The package is loaded on the device along with a way to get the RSA public key.  The hash is re-created on the device and then digitally verified (also called RSA public decrypt) against the existing digital signature.<br /> <br />Digitally securing your firmware updates can: <br /><br />	1.	  Protect against updates from unauthorized parties<br />	2.	  Enable a secure method for allowing third parties to load files to your device<br />	3.	  Ensure against malicious files finding their way onto your device<br /> <br />Do you need help setting up code signing for your firmware updates?  Let us know as we can help in setting up server-side scripts as well as device-side requirements.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />More background on code signing:<br /> <br />A great article on the topic at <a href="http://embedded.com/">embedded.com</a>:  <a href="http://embedded.com/design/216500493?printable=true">http://embedded.com/design/216500493?printable=true</a><br />General information on code signing:   <a href="http://en.wikipedia.org/wiki/Code_signing">http://en.wikipedia.org/wiki/Code_signing</a>',
    'post_status' => 'publish',
    'post_date' => date('2011-1-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Certificate Generation in wolfSSL 1.8.0',
    'post_content' => 'With the release of wolfSSL 1.8.0, users are now able to create CA signed x509 v3 certificates. Certificate generation is turned off by default, but may be turned on during the ./configure process with the following option or by defining CYASSL_CERT_GEN in Windows or non-standard environments:<br /><br /><b>--enable-certgen<br /></b><br />Currently wolfSSL only supports the MD5_WITH_RSA signature algorithm type (which is by far the most common) and the creation of self signed certificates. The next release will allow other signers and other signature types. To create a self-signed certificate the general steps taken by the user include:<br /><br />1. Create the Cert structure<br />2. Initialize the Cert structure<br />3. Complete the information in the CertName structure<br />4. Generate the self-signed certificate using any valid RsaKey and RNG.<br /><br />The result of the above steps will be a DER formatted certificate which may also be converted into a PEM formatted certificate if desired. For more information on how wolfSSL generates RSA keys, please see the <a href="perma://BLPageReference/C3FC932E-3DA0-48B6-A201-50F69511D5EF">wolfSSL Extensions Reference, Section X</a>. For complete details of the above steps to create a self-signed certificate and how you can create a CA signed certificate, see the <a href="perma://BLPageReference/C3FC932E-3DA0-48B6-A201-50F69511D5EF">wolfSSL Extensions Reference, Section XI</a>.<br /><br />For more information about wolfSSL, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-1-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Lower Memory Use in wolfSSL 1.8.0',
    'post_content' => 'One of the improvements made in wolfSSL 1.8.0 is lower overall memory use through the use of configurable input / output buffer sizes and less dynamic memory use.<br /><br />wolfSSL 1.8.0 uses small static buffers for input and output. They default to 128 bytes and are controlled by the RECORD_SIZE define in <b>cyassl_int.h</b>. If an input record is received that is greater in size than the static buffer, then a dynamic buffer is temporarily used to handle the request and then freed. You can set the static buffer size up to the MAX_RECORD_SIZE which is 2^16 or 16,384. For more information about wolfSSL`s input and output buffer`s, see the <a href="perma://BLPageReference/C3FC932E-3DA0-48B6-A201-50F69511D5EF">wolfSSL Extensions Reference, Section XIII</a>.<br /><br />In addition to the input and output buffers, If the fast-math library is used when building wolfSSL, all dynamic memory use for public key cryptography may be reduced. The normal math library uses dynamic memory for big integers, but fastmath uses fixed-size buffers that hold 4096 bit integers by default (allowing for 2048 bit by 2048 bit multiplications).  You can learn more about fastmath and how to enable it in the <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">wolfSSL 1.8.0 Manual</a>.<br /><br />If you would like more information on wolfSSL or are interested in using it in your product, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2011-1-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL will be at FOSDEM 2011',
    'post_content' => 'yaSSL will be attending FOSDEM in Brussels, Belgium on February 5-6, 2011.  We will be giving a lightning talk as well as taking an active part in the Security / hardware crypto, Embedded, and MySQL & friends Developer rooms.<br /><br />As the fosdem.org site states, "FOSDEM is the biggest free and non-commercial event organized by and for the community. Its goal is to provide Free and Open Source developers a place to meet."  We`re excited and hope you are too!  <br /><br />If you are attending and would like to meet up with us, please contact <a href="mailto:larry@yassl.com">larry@yassl.com</a> to set up a meeting time. There is no registration required for FOSDEM 2011, so if you`re going to be in the area, stop by and say hello!<br /><br />FOSDEM 2011:  <a href="http://fosdem.org/2011/">http://fosdem.org/2011/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2011-1-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The wolfSSL C Standard Library Abstraction Layer',
    'post_content' => 'With the release of wolfSSL 1.8.0 we have made wolfSSL even more portable with the addition of a C Standard Library Abstraction Layer.  This means that wolfSSL may now be built without parts of the C Standard Library and user-defined functions may be used instead.<br /><br />The C Standard Library consists of a set of sections of the ISO C standard which describe a collection of headers and library routines used to implement common operations such as I/O, math operations, string handling, and much more.  wolfSSL allows you to override functions in the following areas:<br /><br /><b>A. Memory Use</b><br /><br />Most C programs use malloc() and free() for dynamic memory allocation. wolfSSL uses <b>XMALLOC()</b> and <b>XFREE()</b> instead. By default, these point to the C runtime versions. By defining XMALLOC_USER, the user can provide their own hooks. Each memory function takes two additional arguments over the standard ones, a heap hint, and an allocation type. The user is free to ignore these or use them in any way they like.  You can find the wolfSSL memory functions in <b>types.h</b>.<br /><br /><b>B. string.h</b><br /><br />wolfSSL uses several functions that behave like string.h’s memcpy(), memset(), and memcmp() amongst others. They are abstracted to <b>XMEMCPY()</b>, <b>XMEMSET()</b>, and <b>XMEMCMP()</b> respectively.  And by default, they point to the C standard library versions. Defining XSTRING_USER allows the user to provide their own hooks in types.h. For an example of this, please see the wolfSSL document <a href="perma://BLPageReference/C3FC932E-3DA0-48B6-A201-50F69511D5EF">wolfSSL Extensions Reference, Section XII</a> or download the <a href="perma://BLPageReference/511F1AC3-E79D-4A0C-91F4-EB8C2ADC38A0">wolfSSL Manual</a>.<br /><br /><b>C. math.h</b><br /><br />wolfSSL uses two functions that behave like math.h’s pow() and log(). They are only required by Diffie-Hellman, so if you exclude DH from the build, then you don’t have to provide your own. They are abstracted to <b>XPOW()</b> and <b>XLOG()</b> and found in <b>dh.c</b>.<br /><br /><b>D. File System Use</b><br /><br />By default, wolfSSL uses the system’s file system for the purpose of loading keys and certificates. This can be turned off by defining NO_FILESYSTEM (see the wolfSSL Extensions Reference, Section V). If instead, you’d like to use a file system but not the system one, you can use the <b>XFILE()</b> layer in <b>ssl.c</b> to point the file system calls to the ones you’d like to use.  See the example provided by the MICRIUM define.<br /><br />For more information regarding the wolfSSL C Standard Library Abstraction Layer or if you have any questions or comments, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2011-1-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and the Gargoyle Router',
    'post_content' => 'One of the community projects which uses wolfSSL is the Gargoyle Router. If you haven`t heard about the Gargoyle Router, it is an interface for small, widely available routers such as the Linksys WRT54G series or the Fonera. Adding additional functionality to the normal router firmware, it is based on the kamikaze release of the OpenWrt firmware. Some of the added features include dynamic DNS, quality of service, access restrictions, and bandwidth monitoring tools.  It is open source and freely available under the GPLv2.<br /><br />If you would like to learn more about the Gargoyle Router, consider visiting any of the following links:<br /><br />Gargoyle Router:  <a href="http://www.gargoyle-router.com">http://www.gargoyle-router.com</a><br />Wikipedia Entry:  <a href="http://en.wikipedia.org/wiki/Gargoyle_Router_Firmware">http://en.wikipedia.org/wiki/Gargoyle_Router_Firmware</a>',
    'post_status' => 'publish',
    'post_date' => date('2011-1-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Kaizen: Continuous Small Improvements Will Yield Large Compound Improvement Over Time',
    'post_content' => 'We’re a fan of Ivan Ristic, and suggest you follow his blog at <a href="http://blog.ivanristic.com/">http://blog.ivanristic.com/</a>.  We enjoy his work and appreciate his occasional constructive criticism of our work.  One of his recent presentations caught our eye.  It’s motivating and packed with ideas regarding SSL.  Check it out here:  <a href="http://blog.ivanristic.com/2010/11/stop-complaining-and-solve-a-security-problem-instead.html">http://blog.ivanristic.com/2010/11/stop-complaining-and-solve-a-security-problem-instead.html</a>.<br /> <br />We like the title:  Stop Complaining and Solve a Security Problem Instead!',
    'post_status' => 'publish',
    'post_date' => date('2011-1-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'EE Times Picks Top Ten Technologies to Watch in 2011',
    'post_content' => 'See their picks here:  <a href="http://www.eetimes.com/electronics-news/4211508/10-technologies-to-watch-in-2011">http://www.eetimes.com/electronics-news/4211508/10-technologies-to-watch-in-2011</a>.  We’re keenly interested in Augmented Reality and Automotive Radar for personal reasons.  It’s just good and useful stuff that will make our lives better. <br /> <br />For business reasons, we’re closely following Personal Power Management, which allows you to see your power consumption in timely (not real timely), but actionable increments.  For those who’ve grappled with Thermodynamics and Heat and Mass Transfer at their University and want to apply some of that hard earned learning in their personal home energy management, there’s technology on the way to help!  See:  <a href="http://www.eetimes.com/electronics-news/4211508/10-technologies-to-watch-in-2011?pageNumber=5">http://www.eetimes.com/electronics-news/4211508/10-technologies-to-watch-in-2011?pageNumber=5</a>.  wolfSSL has been the embedded SSL implementation chosen to secure home energy usage information in some existing projects, and we expect it to be a budding market for us going forward. ',
    'post_status' => 'publish',
    'post_date' => date('2011-1-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Research Predictions on the Adoption of Smart Appliances',
    'post_content' => 'See here <a href="http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228800856">http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228800856</a>  for the latest research on the growth and adoption of smart appliances from IMS research.',
    'post_status' => 'publish',
    'post_date' => date('2011-1-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'VDC’s Predictions for the Embedded Market in 2011  ',
    'post_content' => '2011 looks to be another interesting year in the embedded systems marketplace according to VDC’s predictions outlined here:  <a href="http://www.eetimes.com/electronics-news/4211539/Opinion-8-embedded-trends-for-2011?cid=NL_Embedded">http://www.eetimes.com/electronics-news/4211539/Opinion-8-embedded-trends-for-2011?cid=NL_Embedded</a>.<br /> <br />If you’ve been reading our commentary, then you know that we think they’re right on with item 5:  OEMs to increase use of web security test tools.  This just makes a world of sense given the high profile attacks where embedded systems have been used as the key attack vector. However, test tools is just a single piece of the security puzzle. Secure connectivity will be just as important as the market progresses.',
    'post_status' => 'publish',
    'post_date' => date('2011-1-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Holiday wolfSSL Release 1.8.0',
    'post_content' => 'So what made it into the wolfSSL Holiday Release?  We think a few items that users will appreciate.  Some concern increased portability through the os_settings.h file and the new C Standard Library Abstraction layer.  Others lower memory use through configurable input/output buffer sizes and less dynamic memory use.  For the readers out there we now have a complete manual available on the website as well as in the release.  wolfSSL can now create CA signed x509v3 certificates too.  There`s also the ability to use new cipher suites in conjunction with a library we`ll be talking about soon.  Happy Holidays from the yaSSL team!',
    'post_status' => 'publish',
    'post_date' => date('2010-12-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Design Consulting for Building SSL Security into Devices',
    'post_content' => 'You may have recently read our blog post regarding Exposed Private Keys and how you may create secure private keys for SSL-enabled devices using wolfSSL. If your application or framework needs to be secured with SSL/TLS but you are uncertain about how the optimal design of a secured system would be structured, we can help!<br /><br />We offer design consulting for building SSL/TLS security into devices using wolfSSL. Our consultants can provide you with the following services:<br /><br />1. <b>Assessment</b>:  An evaluation of your current SSL/TLS implementation. We can give you advice on your current setup and how we think you could improve upon this by using wolfSSL.<br /><br />2. <b>Design</b>:  Looking at your system requirements and parameters we`ll work closely with you to make recommendations on how to implement wolfSSL into your application such that it provides you with optimal security.<br /><br />If you would like to learn more about design consulting for building SSL into your application or device, please contact <a href="mailto:info@yassl.com">info@yassl.com</a> for more information.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Keep your SSL Private Keys Private',
    'post_content' => 'A recent blog about "Breaking SSL on Embedded Devices" has been making the rounds recently.  It`s not an attack on SSL, it`s an attack on weak private key security. Specifically, embedding a private key into firmware allows anyone to extract the key and turns an otherwise secure connection into something nothing more secure than TCP.<br /><br />We have a few ideas about creating private keys for SSL enabled devices.<br /><br />1.  Each device acting as a server should have a unique private key, just like in the non-embedded world.<br /><br />2.  If the key can`t be placed onto the device before delivery, have it generated during setup.<br /><br />3.  If the device lacks the power to generate it`s own key during setup have the client setting up the device generate the key and send it to the device.<br /><br />4.  If the client lacks the ability to generate a private key have the client retrieve a unique private key over an SSL connection from the devices known website for example.<br /><br />wolfSSL can be used in all of these steps to help ensure an embedded device has a secure unique private key.  That will go a long ways towards securing the SSL connection itself.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Maturity',
    'post_content' => 'We saw a post on a mailing list recently that questioned the maturity of wolfSSL.  The post came as a surprise.  We think wolfSSL is pretty mature by most standards!  Here’s our key points on wolfSSL’s maturity:<br /> <br />1.  It is on its 29th release.<br />2.  It has been vetted out in the open source community for 6 years. (View our <a href="perma://BLPageReference/AC02F8B6-B02B-44CD-A4E9-BCE4C21224D5">community page</a>)<br />3.  It is distributed in over 20 million devices, based on our estimates.  That includes commercial distributions such as printers, home monitoring, VoIP phones, hubs, routers, sensors, telecom infrastructure, as well as open source projects.<br /> <br />Let us know what you think!  If you think wolfSSL is mature/not mature, email us at <a href="mailto:info@yassl.com">info@yassl.com</a>, or post to our <a href="http://www.yassl.com/forums">forums</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What is the yaSSL community getting for Christmas?',
    'post_content' => 'Will it be a new release with awesome new embedded ssl features?  What could those features possibly be?  Will it be even faster and smaller?  More portable?  New ciphers?  Do you think you know what the yaSSL community is getting for Christmas this year?  Send us your guess to <a href="mailto:info@yassl.com">info@yassl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2010-12-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Android Security Flaws',
    'post_content' => 'Here’s a nice article on Android’s security flaws and latent bugs from the CTO of Green Hills Software, Dave Kleidermacher :  <a href="http://www.eetimes.com/electronics-blogs/other/4211444/Angry-Bird-droppings?cid=NL_Embedded">http://www.eetimes.com/electronics-blogs/other/4211444/Angry-Bird-droppings?cid=NL_Embedded</a>.<br /> <br />Looks like there is some work to be done to help properly secure Android!',
    'post_status' => 'publish',
    'post_date' => date('2010-12-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Adding Alternative Ciphers to the wolfSSL Embedded SSL Library',
    'post_content' => 'wolfSSL is modular. We’ve got two key modules: wolfSSL handles all SSL needs while CTaoCrypt handles all cryptographic needs including block ciphers, stream ciphers, message digests, hashing, public key cryptography, certificates, and various helper utilities.  Our topic for this post is our crypto module CTaoCrypt. <br /> <br />CTaoCrypt is our implementation of cryptography components including various block and stream ciphers that can be used underneath the SSL protocol. A complete description of our ciphers is available here:<br /><br /><a href="http://www.yassl.com/yaSSL/Docs_CTaoCrypt_Usage_Reference.html">http://www.yassl.com/yaSSL/Docs_CTaoCrypt_Usage_Reference.html</a>. <br /><br />Not all ciphers are created equally. Some are better than others, depending on the task at hand. CTaoCrypt includes the traditional and most popular block ciphers, which are DES, 3DES, and AES, and the popular stream cipher ARC4. In recent years, the European Union funded the eStream project to identify next generation stream ciphers. The project concluded in 2008. A description of the eStream project is found here:  <a href="http://en.wikipedia.org/wiki/ESTREAM">http://en.wikipedia.org/wiki/ESTREAM</a>. The eStream project was looking to identify ciphers that could handle high throughput requirements and/or operate well in resource constrained environments. <br /> <br />High throughput and resource constrained environments (like VoIP on devices) is where wolfSSL maintains a technology lead over the pack of SSL libraries, so it was natural for us to maintain a keen interest in the results from eStream. The net result is our implementation of the HC-128 and RABBIT ciphers in wolfSSL. If you’d like to see a comparison of cipher performance, see slide 16 of our OSCON presentation <a href="http://www.yassl.com/files/ToddOuska_SecuringMemcache.pdf">http://www.yassl.com/files/ToddOuska_SecuringMemcache.pdf</a>, showing relative performance of the cipher suites in specific implementation of Secure Memcache. <br /> <br />Other ciphers can be added to CTaoCrypt for additional purposes, and we’re happy to do it if we see a need from our customers. Watch this space for further announcements! ',
    'post_status' => 'publish',
    'post_date' => date('2010-12-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More news on the Mobile Internet Tsunami - Plus thoughts on how the Tsunami drives some less visible markets',
    'post_content' => 'This article from Embedded Internet Design <a href="http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228800203">http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228800203</a> gives excellent coverage on the recent and upcoming technologies in the Mobile Internet Tsunami.  We’d like to extrapolate from the article and think about some of the less visible, less glamorous segments of the market that will change dramatically due to the innovation and investment brought about by the Tsunami. <br /> <br />Here’s our thinking:<br /> <br />1.  We agree with the article.  The waves in this Tsunami are just getting bigger and bigger.<br />2.  The visible market driver is consumer adoption.<br />3.  Chips, boards, and systems costs get driven down and horsepower goes up, really fast…of course.  We’re all used to that.<br />4.  The less visible segments of the market get driven along by the investment and innovation in the Tsunami.<br />5.  This means dramatic changes in invisible computing, and of course the security for these invisible devices.<br /> <br />One of the less visible markets we’ve noticed changing fast is sensors in the industrial automation, physical security, and process driven industries.  These users deploy a lot of chips, so they absolutely, positively have to be low cost designs.  That means resource constraints, low memory usage, and tight code. <br /> <br />In the sensor space, 1.0 designs just did the sensing, collection and storage of data.  2.0 designs added wireless connectivity.  The 3.0 designs we’ve been involved with add security and data transmission straight to the cloud!  Not only do we think that’s cool, we think it is effective and efficient design. <br /> <br />Us mobile and embedded guys live in exciting times that are changing fast!  Do you have thoughts on how the Tsunami affects the less visible parts of the embedded computing infrastructure?  Let us know what you think at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'A Comparison of TLS 1.1 and TLS 1.2',
    'post_content' => 'As stated in the TLS 1.1 and 1.2 protocol definitions (RFC 4346, RFC 5246), “The primary goal of the TLS protocol is to provide privacy and data integrity between two communicating applications.”  TLS 1.2 is an improvement to the TLS 1.1 standard, but how exactly do they differ?  What was changed in TLS 1.2 to warrant a new version of the protocol?<br /><br />Listed below are the changes made to both version 1.1 and 1.2 of the TLS protocol.  TLS 1.2 support is slowly making it’s way into existing projects.  wolfSSL embedded SSL/TLS fully supports SSL 3.0, TLS 1.0, TLS 1.1, and TLS 1.2.<br /><b><br />A.  TLS 1.1<br /></b>This protocol was defined in RFC 4346 in April of 2006, and is an update to TLS 1.0.  The major changes are:<br />	-	The Implicit Initialization Vector (IV) is replaced with an explicit IV to protect against Cipher block chaining (CBC) attacks.<br />	-	Handling of padded errors is changed to use the bad_record_mac alert rather than the decryption_failed alert to protect against CBC attacks.<br />	-	IANA registries are defined for protocol parameters<br />	-	Premature closes no longer cause a session to be non-resumable.<br /><br />RFC 4346:  <a href="http://tools.ietf.org/html/rfc4346#section-1.1">http://tools.ietf.org/html/rfc4346#section-1.1</a><br /><br /><b>B.  TLS 1.2<br /></b>This protocol was defined in RFC 5246 in August of 2008.  Based on TLS 1.1, TLS 1.2 contains improved flexibility. One of the primary goals of the TLS 1.2 revision was to remove the protocol’s dependency on the MD5 and SHA-1 digest algorithms.  The major differences include:<br />	-	The MD5/SHA-1 combination in the pseudorandom function (PRF) was replaced with cipher-suite-specified PRFs.<br />	-	The MD5/SHA-1 combination in the digitally-signed element was replaced with a single hash.  Signed elements include a field explicitly specifying the hash algorithm used.<br />	-	There was substantial cleanup to the client`s and server`s ability to specify which hash and signature algorithms they will accept.<br />	-	Addition of support for authenticated encryption with additional data modes.<br />	-	TLS Extensions definition and AES Cipher Suites were merged in.<br />	-	Tighter checking of EncryptedPreMasterSecret version numbers.<br />	-	Many of the requirements were tightened<br />	-	Verify_data length depends on the cipher suite<br />	-	Description of Bleichenbacher/Dlima attack defenses cleaned up.<br />	-	Alerts must be sent in many cases<br />	-	After a certificate_request, if no certificates are available, clients now MUST send an empty certificate list.<br />	-	TLS_RSA_WITH_AES_128_CBC_SHA is now the mandatory to implement cipher suite.<br />	-	Added HMAC-SHA256 cipher suites.<br />	-	Removed IDEA and DES cipher suites.  They are now deprecated.<br /><br />RFC 5246:  <a href="http://tools.ietf.org/html/rfc5246">http://tools.ietf.org/html/rfc5246</a><br /><br /><b>C.  Goals of the TLS Protocol<br /></b><br /><b>	-	Cryptographic security</b>: TLS should be used to establish a secure connection between two parties.<br /><b>	-	Interoperability</b>: Independent programmers should be able to develop applications utilizing TLS that can successfully exchange cryptographic parameters without knowledge of one another`s code.<br /><b>	-	Extensibility</b>: TLS seeks to provide a framework into which new public key and bulk encryption methods can be incorporated as necessary.  This will also accomplish two sub-goals: preventing the need to create a new protocol (and risking the introduction of possible new weaknesses) and avoiding the need to implement an entire new security library.<br /><b>	-	Relative efficiency</b>: Cryptographic operations tend to be highly CPU intensive, particularly public key operations.  For this reason, the TLS protocol has incorporated an optional session caching scheme to reduce the number of connections that need to be established from scratch.  Additionally, care has been taken to reduce network activity.<br /><br /><b>Resources:<br /></b>If you would like to read more about SSL or TLS, here are several resources that might be helpful:<br />TLS - Wikipedia (<a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">http://en.wikipedia.org/wiki/Transport_Layer_Security</a>)<br />SSL versus TLS - What`s the Difference? (<a href="http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html">http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html</a>)<br />Cisco - SSL: Foundation for Web Security (<a href="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html">http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html</a>)<br /><br />As always, if you have any questions or would like to talk to the wolfSSL team about more information, please contact <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What comes next after smartphones?',
    'post_content' => 'As participants in securing the mobile internet tsunami, we’ve been keeping a keen eye on the future security needs of the next generation of devices.  We view it from both project involvement and product management for our embedded SSL and embedded web server products.    This article <a href="http://www.embeddedinternetdesign.com/228600043;jsessionid=UJUQFSMN5QD15QE1GHRSKH4ATMY32JVN?pgno=1">http://www.embeddedinternetdesign.com/228600043;jsessionid=UJUQFSMN5QD15QE1GHRSKH4ATMY32JVN?pgno=1</a> at Embedded Internet Design gives a view of what’s coming next in smartphones. <br /> <br />If you’re also guy or a gal out there tinkering with this stuff and testing your ideas with an eye on security, take a look at the beagleboard, pandaboard, and mbed.  wolfSSL and the yaSSL Embedded Web server will be there for you!',
    'post_status' => 'publish',
    'post_date' => date('2010-12-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Book review on μC/TCP-IP by Christian Legare',
    'post_content' => 'We’ve integrated wolfSSL with μC/TCP-IP and can say it is an excellent implementation well designed for embedded systems.  In fact, we can say that the integration process drove us to make some great improvements to our product.  For example, our next release will not require the standard C library for even greater flexibility when implementing SSL.  But more about that later!  Here’s the link to the book review:   <br /><br /> <a href="http://www.eetimes.com/electronics-blogs/other/4211119/Book-Review--uC-TCP-IP-by-Christian-L-gar-">http://www.eetimes.com/electronics-blogs/other/4211119/Book-Review--uC-TCP-IP-by-Christian-L-gar-</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-12-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Final excerpt from “Handbook of Digital Forensics and Investigation” now online at EmbeddedInternetDesign.com',
    'post_content' => 'This is a great article series.  The link can be found here:  <a href="http://www.embeddedinternetdesign.com/228600068;jsessionid=UJUQFSMN5QD15QE1GHRSKH4ATMY32JVN?pgno=1">http://www.embeddedinternetdesign.com/228600068;jsessionid=UJUQFSMN5QD15QE1GHRSKH4ATMY32JVN?pgno=1</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-12-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Our SSL Programming Tutorial is Up',
    'post_content' => 'We have recently released an SSL programming tutorial which walks through the process of integrating wolfSSL into a simple application. The wolfSSL embedded SSL library is used, along with a simple echoserver and echoclient. The echoserver and echoclient examples have been taken from the popular book titled <b>Unix Network Programming, Volume 1, 3rd Edition</b> by Richard Stevens, Bill Fenner, and Andrew Rudoff.<br /><br />Some of the topics covered in this SSL coding tutorial include:<br />	-	Required libraries<br />	-	What headers are needed<br />	-	Startup and Shutdown of wolfSSL<br />	-	Sending Data over an SSL connection<br />	-	Importing and using Certificates<br /><br />The SSL tutorial can be found here: <a href="perma://BLPageReference/AE1DD7D5-59D5-44C3-AA1E-89434EAA6C7A">SSL Tutorial</a>.  All of the source code for the examples is available for download and is linked to from the SSL tutorial webpage.<br /><br />If you have any questions, feel free to post to our support forums (<a href="http://www.yassl.com/forums">www.yassl.com/forums</a>), or contact us at info@yassl.com.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL.com will exhibit at RSA Conference 2011   ',
    'post_content' => 'We’ll be exhibiting at the RSA Conference 2011 (<a href="http://www.rsaconference.com/2011/usa/index.htm">http://www.rsaconference.com/2011/usa/index.htm</a>).  Our booth number is 330.  The conference will be held February 14-18 at Moscone in San Francisco.  If you’re planning to be there, please plan to stop by to discuss wolfSSL, our implementation of the TLS 1.2 protocol.  We’ll also be visiting customers in the Bay Area that week, so let us know if you’d like us to set aside some time for you by emailing us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-12-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL at Fosdem in Security/Crypto Devroom    ',
    'post_content' => 'We’ll be at Fosdem Feb 5-6 and participating in the Security/Crypto Devroom.  We also plan to join activity in the Embedded Devroom talking about the wolfSSL embedded SSL protocol implementation.  If you have not heard about Fosdem, see <a href="http://Fosdem.org/">Fosdem.org</a>.  It is a weekend dedicated to Free and Open Source software taking place in beautiful Brussels, Belgium.  Call for participation is open for another week or so, and call for speakers for the Security/Crypto Devroom can be found here:  <a href="http://lists.fosdem.org/pipermail/fosdem/2010-December/001083.html">http://lists.fosdem.org/pipermail/fosdem/2010-December/001083.html</a>.<br /> <br />If you will be there and are interested in talking embedded ssl, then send us an email at <a href="mailto:info@yassl.com">info@yassl.com</a> and we’ll set aside some time to get together!<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-12-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Annual Report',
    'post_content' => 'yaSSL made dramatic progress this year on a number of fronts, notably in open source community usage, embedded systems adoption, and technology improvements!  Here’s what we’ve done this year, with an outline of our plans for the year to come in a blog post to follow:<br /> <br />1.  Participated in 4 industry events, including OSCON, Embedded Live, Embedded Systems Computing, and ARM TechCon. <br />	1.	 We launched a new and improved web site including new product support forums.<br />3.  We’ve made significant incremental improvements to our documentation.<br />4.  New partners!  We’ll announce two new resale partners next week!<br />5.  New technology partners: Canonical, Red Hat, Novell, Freescale and Express Logic.<br />6.  Added a new Competitive Upgrade Program for wolfSSL.  More details can be found here: <a href="http://yassl.com/yaSSL/News/Entries/2010/8/17_wolfSSL_competitive_upgrade_program_now_available.html">Competitive Upgrade Program</a><br /> <br /><b>Our long list of technology improvements includes:<br /></b> <br />1.  ThreadX port.  wolfSSL now supports building and running on ThreadX "out of the box".<br />2.  GoAhead Web Server port.  wolfSSL now builds and runs with the GoAhead Web Server through the wolfSSL OpenSSL compatibility layer.<br />3.  Sniffer.  wolfSSL now has the ability to sniff an SSL session with the server`s private key and decode the application data.<br />4.  Swig.  wolfSSL has a swig interface file to allow multiple language access.<br />5.  Python.  wolfSSL now has some python bindings for CTaoCrypt.<br />6.  AES-NI.  wolfSSL now has AES-NI assembly optimizations for supported Intel hardware "Westmere".<br />7.  ARM.  wolfSSL now has assembly optimizations for fastmath Public Key operations.<br />8.  Mongoose.  wolfSSL now builds and runs with the Mongoose Web Server with the wolfSSL OpenSSL compatibility layer.<br />9.  JSSE.  wolfSSL can now be a plug-in for system Java SSL Providers on OS X and Linux.<br />10.  Android.  wolfSSL is now ported to Android.<br />11.  SHA-512.  wolfSSL now supports the SHA-512 hash on systems with support for 64 bit types.<br />12.  RIPEMD-160.  wolfSSL now supports RIPEMD-160 as a hashing algorithm.<br />13.  Key generation.  wolfSSL now supports key generation.<br />14.  Certificate generation.  wolfSSL now supports certificate generation.<br />15.  yaSSL Embedded Web Server.  Our "own" web server with wolfSSL for security.<br />16.  Low static memory.  wolfSSL went from a default of 48kB static memory per SSL session to 4kB. (alpha)<br />17.  Low dynamic memory.  wolfSSL decreased runtime dynamic memory use. (alpha)<br />18.  Porting.  Increased the portability/flexibility of using wolfSSL on non-standard build environments with an OS header with defines that control the build.<br />19.  No stdlib.  wolfSSL can now be built without any C standard library headers, developers can now use their own "standard" library plug-in. (alpha)<br />20.  Secure memcache.  wolfSSL can now be used to secure memcache network communication including client/patient sensitive data/health records from internal and external snoopers locally and in the cloud. (beta)<br />21.  Mbed.  wolfSSL can be built and run on the Mbed microcontroller. (alpha)<br /> <br />We’re happy with our progress this year, and look forward to making even more improvements next year!  We’ll be going into 2011 with greater resources and plan to move this project and business forward at an even faster rate. <br />',
    'post_status' => 'publish',
    'post_date' => date('2010-12-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL and TomatoUSB',
    'post_content' => 'Hi!<br /><br />The <a href="http://tomatousb.org/">TomatoUSB</a> community has integrated wolfSSL into the TomatoUSB Firmware as of release 53.  wolfSSL is being used in non-VPN editions of the firmware to provide SSL support for httdp and dyndns.  They have upgraded to TLS 1.0 from SSL v 2/3 which was previously being used.  <br /><br />TomatoUSB is an alternative linux-based firmware for powering Broadcom-based ethernet routers.  It is a modification of the famous Tomato firmware.  Some of the added enhancements include support for USB port, wireless-N mode support, and support for several newer router models.<br /><br />We always like to support community projects which use our products.  If you have an open source project and are using wolfSSL or one of our other products, let us know and we’ll gladly support you.  If you have questions or would like more information, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />For more information about the TomatoUSB project, visit their website: <a href="http://tomatousb.org/">http://tomatousb.org/</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2010-12-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Initial Results of wolfSSL on mbed',
    'post_content' => 'Recently we’ve been working on porting wolfSSL over to mbed (<a href="http://mbed.org/">http://mbed.org/</a>).  Now that we have things working, we can report some initial results.  wolfSSL takes 2.9 kB of RAM (10% of total) and 63 kB of Flash (13%).  That includes our test driver code which is about 3 kB.  <br /><br />On our test machine, we ran some benchmarks of CTaoCrypt and compared them to the results of running on the mbed.  You can see that the results of running on the mbed were much slower, but not bad for a 96 Mhz processor with very limited memory.<br /><br />On our desktop machine, for fastmath RSA 1024 bit:<br /><br />public  RSA: 0.06 milliseconds<br />private RSA: 0.61 milliseconds<br /><br />On the mbed for fastmath RSA 1024 bit:<br /><br />public  RSA:  10 milliseconds<br />private RSA: 165 milliseconds<br /><br />If you would like more information about these tests or our products, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-12-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Statistics and Projections on Connected Consumer Devices',
    'post_content' => 'The average consumer in the US will “own 5-10 web-enabled devices by 2014” according to In-Stat.  See here for details:  <a href="http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228300296">http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228300296</a>.  By our reckoning, that means about 200 Million devices that need to be enabled with embedded SSL to assure privacy and safety.  We’ll have our work cut out for us at <a href="http://yaSSL.com/">yaSSL.com</a>, which means we need more staff!  We’re hiring, and if you’re reading this, then you’re probably interested in this kind of embedded systems stuff, you like your command line, engage in arguments over code editors (VI vs. Emacs (we’re a VI shop)), and know how to write small, tight, portable code.  Let us how you would like to contribute or send your resume or CV to <a href="mailto:larry@yassl.com">larry@yassl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2010-11-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'A great article that can act as a primer on extracting data from embedded systems, as well as give some  ideas on securing them in the first place. ',
    'post_content' => 'From the article:  “During a forensic autopsy an artificial pacemaker was secured for forensic information analysis. An academic hospital was contacted and they had equipment to read the data from this pacemaker via a wireless interface. The extracted information contained around 10 pages of details like name and date of birth of the patient, timestamps of hospital service, technical parameters, and stored measurement details related to the heart function.”<br /> <br />The article is a part of a series of extracts from a useful book called “Handbook of Digital Forensics and Investigation.”<br /> <br />See the excerpts here:  <a href="http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228300358">http://www.embeddedinternetdesign.com/showArticle.jhtml?articleID=228300358</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-11-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Initial results in porting wolfSSL to the mbed MCU',
    'post_content' => 'As previously stated here, wolfSSL is getting ported to the mbed chip.  We’ve done the initial build and the results were pretty good.  wolfSSL takes 2.9 kB of RAM (10% of total) and 63 kB of Flash (13%).  That includes the test driver code which is about 3 kB.  More information to follow!  If you’re interested in building wolfSSL for mbed (<a href="http://mbed.org/">http://mbed.org/</a>), let us know and we’ll be happy to support you.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'TLS extension parsing race condition issue affects only OpenSSL, not wolfSSL',
    'post_content' => 'Hi!  If you’re wondering, as some are, whether there is any issues with wolfSSL for CVE-2010-3864, the TLS extension parsing race condition, then please note that this issue only affects OpenSSL, not wolfSSL.  CVE-2010-3864 is an issue specific to OpenSSL, which is an entirely different SSL library than wolfSSL.  This issue is not general to the TLS protocol, and has no relation to wolfSSL.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded Web Server for AVR',
    'post_content' => 'The yaSSL Embedded Web Server for AVR has some optimizations our users might want to hear about:  Assembly code for the AVR and AVR 32 instruction sets in the SSL cryptography.  Assembly code for the AVR 32 instruction set speeds up public key operation during the SSL handshake.  Need to use it?  Already using it?  Let us know if you need any help with further optimizations or find any bugs!',
    'post_status' => 'publish',
    'post_date' => date('2010-11-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What’s the difference between wolfSSL Embedded SSL and OpenSSL?',
    'post_content' => 'Hi!  If you came to our site because you are considering wolfSSL as an alternative to OpenSSL, this blog post is your cheat sheet that details the differences between the two products:<br /> <br />1.  Size:  With a 30-40k build size, wolfSSL is 20 times smaller than OpenSSL.  wolfSSL is a better choice for resource constrained environments.<br />2.  Standards Support:  wolfSSL is up to date with the most current standards of TLS 1.2 with DTLS, which OpenSSL has yet to address.<br />3.  Support for streaming media:  wolfSSL is up to date with the best current ciphers and standards for streaming media support.<br />4.  Embedded systems support:  wolfSSL is the leading  SSL library for real time, mobile and embedded systems, by virtue of its breadth of platform support and successful implementations on embedded environments.<br />5.  Commercial licensing available from the source of the code:  wolfSSL is available under proper commercial licenses direct from Montana, or under the GPL, whereas OpenSSL is available only under their unique license from multiple sources.<br /> <br />If you have further questions on how we compare ourselves to OpenSSL, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.  ',
    'post_status' => 'publish',
    'post_date' => date('2010-11-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Securing Machine-to-Machine Communication with wolfSSL',
    'post_content' => 'Machine-to-machine communication takes place between both wired and wireless systems all around the world every day.  As stated by <a href="http://www.huawei.com/publications/view.do?id=6083&cid=11392&pid=10664">Numerex</a>, "M2M uses a device (sensor, meter, etc.) to capture an ‘event` (temperature, inventory level, etc.), which is relayed through a network (wireless, wired or hybrid) to an application (software program), that translates the captured event into meaningful information (e.g., items need to be restocked)."<br /><br />M2M communication holds a very important part in many business actions and decisions an as such needs to be secured.  If your device has a TCP/IP stack in place, SSL, specifically wolfSSL, is an optimal solution for this problem.<br /><br />wolfSSL is a small and lightweight embedded SSL library, offering your M2M devices a security solution which fits inside your resource constraints.  If you have questions or would like more information on how you can use yaSSL products to enhance your M2M communication, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-11-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL and Vayavya at ARM TechCon',
    'post_content' => 'Hi!  Next to the yaSSL booth at ARM TechCon is Vayavya Labs, who specialize in outsourcing of set-top box/entertainment system development.  It just so happens that they are also developers with skills in wolfSSL, having implemented it in their most recent successful set-top box project.  So, if you’re using wolfSSL and need outsourcing help with security or DRM for your digital TV project, we can confidently recommend Vayavya.  For more information on Vayavya, see <a href="http://www.vayavyalabs.com/">www.vayavyalabs.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Assembly-Based Performance Optimizations for ARM in wolfSSL',
    'post_content' => 'Earlier this week we stated our commitment to ARM by explaining our assembly code optimizations on a number of our math intensive cryptography operations.  To give you more information, these optimizations are for Public Key operations with the CTaoCrypt fastmath option.  This translates to a speed increase when using RSA, Diffie-Hellman, or DSA.<br /><br />If you dive into our code, these optimizations can be found in the <b>asm.c</b> source file.<br /><br />Today, Team yaSSL continues to exhibit at the ARM Technology Conference in Santa Clara, CA.  If you are in the area, feel free to stop by our booth to visit or contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL is Participating in the ARM TechCon Twitter Scavenger Hunt!',
    'post_content' => 'Today at ARM TechCon attendees will be scouring the expo floor trying to solve clues given to them through Twitter tweets.  This will be the first Twitter Scavenger Hunt conducted at an ARM Technology Conference and we think it is going to be really fun!<br /><br />yaSSL will be providing a $50 gift card to REI to the first person who solves the clue leading them to the yaSSL booth.  If you are attending the conference, stop by our booth to learn more about our embedded security products and how they can help you secure your applications.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The ARM Powered Corvette',
    'post_content' => 'The yaSSL booth at ARM TechCon is perfectly situated to check out the QNX based/ARM based Corvette on the show floor.  It’s a silver beauty!  See the pictures below.<br /> <br />Reminder:  if you’re building a QNX based car computer and need to secure it with small embedded SSL solution, then contact us.  One of the earliest wolfSSL users did just that, so we have some experience in the domain.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL lays plans to secure mbed based racing robots',
    'post_content' => 'Hi!  As you may know from reading our posts here, Team yaSSL is exhibiting at ARM TechCon this week.  What you may not know is that we’ve been working with ARM’s <a href="http://mbed.org/">mbed.org</a> team to facilitate a port of wolfSSL to mbed.  Why?  Because hobbyists need security too!  And it is fun. <br /> <br />Here at ARM TechCon, mbed has paired with Pololu to create an mbed-based robot.  Additionally, these two companies have created a contest for developers to race the robots based on the program they write.  We’re going to help ensure a robot does not lose because its communication is subject to an MITM attack!',
    'post_status' => 'publish',
    'post_date' => date('2010-11-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL - The best performing embedded SSL security solution for ARM based processors - announces assembly based performance optimizations at ARM TechCon 2010',
    'post_content' => 'yaSSL, as long standing partner to ARM, has always been well optimized for ARM environments.  Now we’ve taken our commitment to ARM to the next level by enabling assembly code on a number of our math intensive cryptography operations.  The fastest SSL solution for ARM is now even faster!',
    'post_status' => 'publish',
    'post_date' => date('2010-11-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Visit with yaSSL at the ARM Technology Conference',
    'post_content' => 'Hi!  We’ll be exhibiting at the ARM Technology Conference later this week.  The conference is at the Santa Clara convention center in Silicon Valley on November 10th and 11th. <br /> <br />If you are attending the conference, stop by and visit!  Some of the topic we’ll be discussing include:<br /> <br />1.       wolfSSL Embedded SSL for ARM environments.  We have various assembly based optimizations for our SSL implementation on ARM.  Come by and we can talk through the details.<br />2.       yaSSL Embedded Web Server! <br />3.       Building secure firmware update systems for your devices with our agents.<br />4.       The wolfSSL Java provider for Android.<br />5.       Securing VoIP and Video on your devices.<br /> <br />If you want to set a time to speak with us in detail, then contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.  Hopefully we’ll see you there!',
    'post_status' => 'publish',
    'post_date' => date('2010-11-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'How to use the CTaoCrypt crypto library in standalone mode',
    'post_content' => 'Hi!  About 20% of our users are using CTaoCrypt to provide standalone cryptographic functionality, and about 80% of our users have not thought about using it that way.  The purpose of this blog post is to inform users on how to use CTaoCrypt as a standalone library:<br /> <br />	1.	CTaoCrypt is available as a function set within wolfSSL, licensed under GPL or commercially.  If you are interested in using it outside of wolfSSL, then let us know.  Basically this means that 100% of the CTaoCrypt functions are available through the wolfSSL API set. <br />2.  Support for various development environments is included in the download, including GCC, Visual Studio, and Xcode.<br />3.  The build process is described in the README.  A program to test your build is included.<br />4.  If you are a benchmark junkie, and since we know you probably are, we include a simple benchmark application to get you started.<br />5.  CTaoCrypt has a lot of useful features, including: <br /><br />	-	AES-NI support for super fast AES on the newer intel chips. <br />	-	One way hash functions: SHA-1, MD2, MD4, MD5, RIPEMD-160<br />	-	Message authentication codes: HMAC<br />	-	Block Ciphers: DES, Triple-DES, AES<br />	-	Stream Ciphers: ARC4, Rabbit and HC-128<br />	-	Public Key Crypto: RSA, DSA, Diffie-Hellman<br />	-	Password based key derivation: PBKDF2 from PKCS #5<br />	-	Pseudo Random Number Generators<br />	-	Large Integer Support<br />	-	Base 16/64 encoding/decoding<br />	-	DER encoding/decoding<br />	-	X.509 processing<br />	-	x86, x86_64, SSE2, ARM, PPC32, and PPC64 and AVR32<br />	-	Support for FastMath<br /><br />6.  If you need porting, support, or just regular help with CTaoCrypt, then get in contact with us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'SHODAN:  Sentient Hyper-Optimized Data Access Network automates port scanning, simplifies exploiting embedded devices',
    'post_content' => '“The Register” reported on using SHODAN to pinpoint embedded devices that are not properly secured yesterday.  See <a href="http://www.theregister.co.uk/2010/11/02/scada_search_engine_warning/">http://www.theregister.co.uk/2010/11/02/scada_search_engine_warning/</a> for details.  In summary, SHODAN can be used to quickly identify internet connected devices with known exploits.  For us, it points to yet another reason why mobile and embedded systems developers should harden their devices with the wolfSSL embedded SSL library and the yaSSL Embedded Web Server.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-4 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Exhibiting at ARM Technology Conference',
    'post_content' => 'Hi!  We’ll be at the ARM Technology Conference next week as exhibitors.  The conference is at the Santa Clara convention center in Silicon Valley on November 10th and 11th. <br /> <br />Come by to talk to us about any topic you like, but here’s some suggestions!<br /> <br />1.       wolfSSL Embedded SSL for ARM environments.  We have various assembly based optimizations for our SSL implementation on ARM.  Come by and we can talk through the details.<br />2.       yaSSL Embedded Web Server! <br />3.       Building secure firmware update systems for your devices with our agents.<br />4.       The wolfSSL Java provider for Android.<br />5.       Securing VoIP and Video on your devices.<br /> <br />See you there!  If you want to set a time to speak with us in detail, then contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.  Also, exhibits passes are free if you register by the 8th at:  <a href="http://vault.eetimes.com/armconference/register/">http://vault.eetimes.com/armconference/register/</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-11-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Exploiting Devices Lacking SSL Protection at Toorcon',
    'post_content' => 'A review of the event from CNET is available here:  <a href="http://news.cnet.com/8301-27080_3-20020547-245.html">http://news.cnet.com/8301-27080_3-20020547-245.html</a>. <br /> <br />Of particular interest is Firesheep: <a href="http://codebutler.com/firesheep">http://codebutler.com/firesheep</a>, a firefox browser extension for simplifying SideJacking of open wireless networks.  It is open source, courtesy of Eric Butler and Ian Gallagher.  Their stated goal for developing the tool is creating more awareness of the problem.  We think they’ll achieve their goal! <br /> <br />As a vendor of embedded SSL, you can probably imagine what we think about this, but repetition is the mother of learning, so we’ll repeat:  If you’re building software for embedded devices, you need to enable SSL/TLS.  The most efficient tool for doing that on an embedded environment is wolfSSL.  <br /> <br />Need help enabling ssl your device?  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-10-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OCSP, RFC 2560 for Embedded SSL',
    'post_content' => 'Hi!  Do you need OCSP (Online Certificate Status Protocol) in wolfSSL?  Let us know.  We’re currently considering it for a feature addition to our next release.  Sometimes OCSP may be necessary to obtain timely information about the revocation status of a certificate.  OCSP solves that problem.  Additional status information is also available under the protocol.  More information on the protocol is available here:  <a href="http://www.ietf.org/rfc/rfc2560.txt">http://www.ietf.org/rfc/rfc2560.txt</a>.  This is not a big feature for us to add, but we’re weighing it against other development priorities.  So let us know what you think!  Send in your vote  for or against OCSP being a high priority for wolfSSL to <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-10-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server - CGI Support',
    'post_content' => 'The yaSSL Open Source Embedded Web Server has support for CGI (Common Gateway Interface).  Using CGI, a web server can communicate with other types of programs running on the server.  Because the yaSSL Embedded Web Server by itself is only able to deal with HTML file, it can “pass off” scripts written in other languages to their specific interpreter, thus allowing the functionality of many CGI languages to be used.  Some of the possible languages include:  PHP, Perl, ASP, ASP.NET, Python, Ruby on Rails, and C.<br /><br />To configure the yaSSL Embedded Web Server to process CGI scripts in a given language, the interpreter for that language must be installed on the server.  As an example, we’ll walk through how you would enable PHP to be used with the yaSSL Embedded Web Server.<br /><br />The first thing you would need to do would be to download PHP if it is not currently installed on your server.  The PHP source can be downloaded from the following location: <a href="http://www.php.net/downloads.php">http://www.php.net/downloads.php</a>.  After it has been downloaded, it should be built and installed.  From the php source directory, run the following commands:<br /><br />./configure<br />make<br />sudo make install<br /><br />On OS X, this will place the “php-cgi” program in the “/usr/local/bin” directory.  Now that we have the PHP CGI interpreter, we need to let the yaSSL Web Server know where it is located.  This can be done in two ways (as most options can) and be set at runtime using the -cgi_interp option, or by adding a similar line to the configuration file.  We can also set the -cgi_ext option, which defines which extensions are treated as CGI scripts.  Setting these option at runtime, you would start the yaSSL Embedded Web Server as follows:<br /><br />./yasslEWS -cgi_ext cgi,php -cgi_interp /usr/local/bin/php-cgi<br /><br />After starting the web server, you can test if PHP is working by browsing to any PHP file which is located under your web server root directory.<br /><br />To download the yaSSL Embedded Web Server, or to learn more, check out <a href="http://www.yassl.com">http://www.yassl.com</a>.  If you have any questions, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-10-22 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server - Alias Support',
    'post_content' => 'The yaSSL Open Source Embedded Web Server supports directory aliases.  Similar to Apache’s mod_alias, using aliases allows a mapping to be created between URLs and file system paths.  This mapping allows content which is not under the web server Document Root to be served as part of the web document tree.  In other words, URLs beginning with the url-path will be mapped to local files beginning with the directory-path.<br /><br />In the yaSSL Embedded Web Server, this can be done two ways:<br /><br />	1)	 Aliases can be set at runtime by using the -aliases option<br />	2)	 Aliases can be set in the config file<br /><br />In the following examples, suppose we wanted to map our local video directory (/home/user/Videos) to the URL “/videos”, and we wanted to map our pictures directory (/home/user/Pictures) to the URL “/pictures”.<br /><br />Using the first option (setting the aliases at runtime), would look similar to the following.  <br /><br />./yasslEWS -aliases /videos=/home/user/Videos,/pictures=/home/user/Pictures<br /><br />Using the second option (setting the aliases through the config file), we would need to add a line to our config file, as follows:<br /><br />aliases /videos=/home/user/Videos,/pictures=/home/user/Pictures<br /><br />To test if the newly set-up aliases are working correctly, point your web browser to one of the two URLs, where you should see a directory listing of the local files.<br /> <br />http://<your-web-server-address>/pictures<br />http://<your-web-server-address>/videos<br /><br />If this doesn’t work, double check that your paths are correct in your alias definitions and that everything is spelled correctly.  Aliases should be able to be created for any drive physically attached to your computer.<br /><br />To download the yaSSL Embedded Web Server, or to learn more, check out <a href="http://www.yassl.com">http://www.yassl.com</a>.  If you have any questions, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-10-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server - ACL Support',
    'post_content' => 'The yaSSL Open Source Embedded Web Server supports Access Control Lists.  An Access Control List (ACL) allows restrictions to be put on the list of IP addresses which have access to the web server.  In the case of the yaSSL Embedded Web Server, the ACL is a comma separated list of IP subnets, where each subnet is prepended by either a ‘-’ or a ‘+’ sign.  A plus sign means allow, where a minus sign means deny.  If a subnet mask is omitted, such as “-1.2.3.4”, this means to deny only that single IP address.<br /><br />Subnet masks may vary from 0 to 32, inclusive.  The default setting is to allow all, and on each request the full list is traversed - where the last match wins.<br /><br />The ACL can be specified either at runtime, using the -acl option, or by using “acl” in the config file.  For example, to allow only the 192.168.0.0/16 subnet to connect, you would run the following command:<br /><br />./yasslEWS -acl -0.0.0.0/0,+192.168.0.0/16<br /><br />The ACL can also be set in the web server config file.  Using the example above, the config file line would be:<br /><br /># acl           -0.0.0.0/0,+192.168.0.0/16<br /><br />To learn more about subnet masks, see the Wikipedia page on Subnetwork (<a href="http://en.wikipedia.org/wiki/Subnetwork">http://en.wikipedia.org/wiki/Subnetwork</a>), or here (<a href="http://wiki.xtronics.com/index.php/IP_Subnet_Masks">http://wiki.xtronics.com/index.php/IP_Subnet_Masks</a>).<br /><br />To download the yaSSL Embedded Web Server, or to learn more, check out <a href="http://www.yassl.com">http://www.yassl.com</a>.  If you have any questions, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-10-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server - SSI Support',
    'post_content' => 'One of the features of the yaSSL Embedded Web Server is support for Server Side Includes.  Server Side Includes (SSI) is a simple interpreted server-side scripting language which is most commonly used to include the contents of a file into a web page.  It can be useful when it is desirable to include a common piece of code throughout a website.<br /><br />Some of the ways in which Sever Side Includes may be used include:<br />	-	Including the contents of a file (html, txt, etc) into a web page<br />	-	Include the result of running a CGI script<br />	-	Executing a program, script, or shell command on the server<br />	-	Displaying the contents of a HTTP environment variable<br />	-	Outputting a list of variables and their values (environment and user-defined)<br /><br />For more information on Server Side Includes, take a look at the Wikipedia entry here: <a href="http://en.wikipedia.org/wiki/Server_Side_Includes">http://en.wikipedia.org/wiki/Server_Side_Includes</a>, or a tutorial on Server Side Includes can be found here:  <a href="http://http-server.carleton.ca/~dmcfet/html/ssi.html">http://http-server.carleton.ca/~dmcfet/html/ssi.html</a>.<br /><br />To download the yaSSL Embedded Web Server, or to learn more, check out <a href="http://www.yassl.com">http://www.yassl.com</a>.  If you have any questions, contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-10-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Open Source Embedded Web Server',
    'post_content' => 'Hi! <br /> <br />Have you checked out the yaSSL Embedded Web Server?  With SSL enabled, it is sized small enough to fit into resource constrained environments at under 200k in footprint.  However, it still has a useful feature set, including all of the standard web server functionality you would expect, plus features like support for CGI with your favorite language, including PHP, Perl, Python, Ruby on Rails, etc.  Check it out at <a href="http://www.yassl.com/">www.yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-10-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded SSL in the Holiday Spirit',
    'post_content' => 'Team yaSSL is preparing for Halloween here in the United States with a pumpkin carving!  Our embedded security products are continually evolving.  We encourage you to check our our wolfSSL embedded SSL library <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">here</a>, or our new yaSSL Embedded Web Server, <a href="perma://BLPageReference/71A1A7A1-5192-4F85-A8DB-E6F4B2B7DC3D">here</a>.<br /><br />As always if you have any questions, or would like more information about our products, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Thanks,<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2010-10-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Great Article on Smart Meters in EE Times',
    'post_content' => 'See <a href="http://www.eetimes.com/design/embedded/4209515/Robust-design-principles-for-home-smart-grid-metering?pageNumber=0&Ecosystem=embedded">http://www.eetimes.com/design/embedded/4209515/Robust-design-principles-for-home-smart-grid-metering?pageNumber=0&Ecosystem=embedded</a> for a great discussion on smart grid metering.  There’s already wolfSSL users employing our embedded ssl to secure metering systems!  wolfSSL is useful in smart grid metering for the following areas:<br /> <br />1.  Delivering secure firmware updates to the metering device.<br />2.  Encrypting data between the metering device and the main data store.<br />3.  Encrypting data on the device.<br /> <br />Are you building smart grid devices?  Let us know if we can help you with security concerns by contacting us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-10-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Notes from wolfSSL at Embedded Systems Computing show in Boston',
    'post_content' => 'Hi!  A few notes from exhibiting at Embedded Systems Computing show in Boston.  <br /><br />1.  It`s always fun to hear about what people are doing with embedded systems.  We heard lots of interesting stories about the devices people are building... and securing.<br /><br />2.  The diversity of embedded systems is still amazing, and growing.  From pico-sensors to POS to UAV`s.<br /><br />3.  Team wolfSSL was lucky enough to make it out to Fenway to watch the Red Sox!  Nice to see that historic stadium and see some professional baseball players.  Check out our pictures on <a href="http://www.facebook.com/album.php?aid=36150&id=147081235315602">Facebook</a>.<br /><br />4.  Feedback on the new yaSSL Embedded Web Server was fun!  Lots of people with lots of interesting ideas on where and why to put a web server on a device!<br /><br />5.  Kerberos Consortium:  We made time to visit the leadership of the Kerberos Consortium at MIT <a href="http://www.kerberos.org/">http://www.kerberos.org/</a>.  More on that in a following blog post!',
    'post_status' => 'publish',
    'post_date' => date('2010-10-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Differences between SSL and TLS Protocol Versions',
    'post_content' => 'Have you heard talk about SSL 3.0, TLS 1.0, TLS 1.1, and TLS 1.2 but never really knew the differences between the different versions? Secure Socket Layer (SSL) and Transport Security Layer (TLS) are both cryptographic protocols which provide secure communication over networks.  These different versions are all in widespread use today in applications such as web browsing, e-mail, instant messaging and VoIP, and each is slightly different from the others.  <br /><br />wolfSSL supports all three of these ciphers to best suit your needs and requirements.  wolfSSL and GnuTLS are the only two SSL/TLS libraries which support TLS 1.2.  Below you will find the major differences between the different protocol versions.<br /><br /><b>SSL 3.0<br /></b>This protocol was released in 1996, but first began with the creation of SSL 1.0 developed by Netscape.  Version 1.0 wasn`t released, and version 2.0 had a number of security flaws, thus leading to the release of SSL 3.0.  Some major improvements of SSL 3.0 over SSL 2.0 are:<br />	-	Separation of the transport of data from the message layer<br />	-	Use of a full 128 bits of keying material even when using the Export cipher<br />	-	Ability of the client and server to send chains of certificates, thus allowing organizations to use certificate hierarchy which is more than two certificates deep.<br />	-	Implementing a generalized key exchange protocol, allowing Diffie-Hellman and Fortezza key exchanges as well as non-RSA certificates.<br />	-	Allowing for record compression and decompression<br />	-	Ability to fall back to SSL 2.0 when a 2.0 client is encountered<br /><br />Netscape`s Original SSL 3.0 Draft:  <a href="http://www.mozilla.org/projects/security/pki/nss/ssl/draft302.txt">http://www.mozilla.org/projects/security/pki/nss/ssl/draft302.txt</a><br />Comparison of SSLv2 and SSLv3:  <a href="http://stason.org/TULARC/security/ssl-talk/4-11-What-is-the-difference-between-SSL-2-0-and-3-0.html">http://stason.org/TULARC/security/ssl-talk/4-11-What-is-the-difference-between-SSL-2-0-and-3-0.html</a><br /><br /><b>TLS 1.0<br /></b>This protocol was first defined in RFC 2246 in January of 1999. This was an upgrade from SSL 3.0 and the differences were not dramatic, but they are significant enough that SSL 3.0 and TLS 1.0 don`t interoperate.  Some of the major differences between SSL 3.0 and TLS 1.0 are:<br />	-	Key derivation functions are different<br />	-	MACs are different - SSL 3.0 uses a modification of an early HMAC while TLS 1.0 uses HMAC.<br />	-	The Finished messages are different<br />	-	TLS has more alerts<br />	-	TLS requires DSS/DH support<br /><br />RFC 2246:  <a href="http://tools.ietf.org/html/rfc2246">http://tools.ietf.org/html/rfc2246</a><br /><br /><b>TLS 1.1<br /></b>This protocol was defined in RFC 4346 in April of 2006, and is an update to TLS 1.0.  The major changes are:<br />	-	The Implicit Initialization Vector (IV) is replaced with an explicit IV to protect against Cipher block chaining (CBC) attacks.<br />	-	Handling of padded errors is changed to use the bad_record_mac alert rather than the decryption_failed alert to protect against CBC attacks.<br />	-	IANA registries are defined for protocol parameters<br />	-	Premature closes no longer cause a session to be non-resumable.<br /><br />RFC 4346:  <a href="http://tools.ietf.org/html/rfc4346#section-1.1">http://tools.ietf.org/html/rfc4346#section-1.1</a><br /><br /><b>TLS 1.2<br /></b>This protocol was defined in RFC 5246 in August of 2008.  Based on TLS 1.1, TLS 1.2 contains improved flexibility. The major differences include:<br />	-	The MD5/SHA-1 combination in the pseudorandom function (PRF) was replaced with cipher-suite-specified PRFs.<br />	-	The MD5/SHA-1 combination in the digitally-signed element was replaced with a single hash.  Signed elements include a field explicitly specifying the hash algorithm used.<br />	-	There was substantial cleanup to the client`s and server`s ability to specify which hash and signature algorithms they will accept.<br />	-	Addition of support for authenticated encryption with additional data modes.<br />	-	TLS Extensions definition and AES Cipher Suites were merged in.<br />	-	Tighter checking of EncryptedPreMasterSecret version numbers.<br />	-	Many of the requirements were tightened<br />	-	Verify_data length depends on the cipher suite<br />	-	Description of Bleichenbacher/Dlima attack defenses cleaned up.<br /><br />RFC 5246:  <a href="http://tools.ietf.org/html/rfc5246">http://tools.ietf.org/html/rfc5246</a><br /><br /><b>Resources:<br /></b>If you would like to read more about SSL or TLS, here are several resources that might be helpful:<br />TLS - Wikipedia (<a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">http://en.wikipedia.org/wiki/Transport_Layer_Security</a>)<br />SSL versus TLS - What`s the Difference? (<a href="http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html">http://luxsci.com/blog/ssl-versus-tls-whats-the-difference.html</a>)<br />Cisco - SSL: Foundation for Web Security (<a href="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html">http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html</a>)<br /><br />As always, if you have any questions or would like to talk to the wolfSSL team about more information, please contact <a href="mailto:info@wolfssl.com?subject=">info@wolfssl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-10-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Supports the RIM PlayBook',
    'post_content' => 'Did you know that wolfSSL supports running on the RIM PlayBook?  The PlayBook runs the QNX operating system, which we have supported for the last five years - ever since our first source release of wolfSSL.<br /><br />We have posted before about wolfSSL`s build sizes on QNX, which are an impressive 80k (compared to a standard OpenSSL build of 2M).  With QNX`s successful track record, we are proud to support the RIM PlayBook.<br /><br />If you plan on trying out wolfSSL on the PlayBook, let us know!  In addition, if you need any help with wolfSSL and QNX, we`d be more than happy to help out! For more information on wolfSSL`s feature list, please see the wolfSSL <a href="perma://BLPageReference/3BB985A6-E421-4402-B9DC-54E1E80C5981">product page</a>.<br /><br />View the PlayBook product page:  <a href="http://na.blackberry.com/#">http://na.blackberry.com/</a><br />Learn more about QNX from their website:  <a href="http://www.qnx.com/">http://www.qnx.com/</a><br /><br />If you have any questions or want more information, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-10-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Meet the yaSSL crew at Embedded Live in London',
    'post_content' => 'Hi!  We’ll be exhibiting at Embedded Live in London on October 20th and 21st.  We’ll be talking about how to use wolfSSL to enable your secure firmware update systems, the yaSSL Embedded Web Server, and of course wolfSSL Embedded SSL.  If you are a wolfSSL user or customer in the London area and want to get together with us, just let us know and we’ll try to accommodate you.<br /> <br />Also, if you need an exhibits hall pass, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> and we’ll mail you one!',
    'post_status' => 'publish',
    'post_date' => date('2010-10-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'EE Times reports on VDC Research survey of Embedded Software',
    'post_content' => 'See Jack Ganssle’s discussion on the report here:  <a href="http://www.eetimes.com/discussion/other/4208881/2010-VDC-survey-of-embedded-software?cid=NL_Embedded#">http://www.eetimes.com/discussion/other/4208881/2010-VDC-survey-of-embedded-software?cid=NL_Embedded#</a>.  A couple items stand out for us, as a company providing open source embedded ssl:<br /> <br />	1.	46% of embedded developers are using a TCP/IP stack.  What we’d like to know is the subset of those developers using SSL.  If embedded ssl usage maps to general ssl usage studies, it would be about 1-2%.  That means a whole lot of devices in a whole lot of places are subject to man in the middle attacks, and worse.<br /><br />	1.	The survey also tells us that about 20% of the developers are using open source in some fashion, but it does not tell us why they chose open source.  In any event, 20% is a good start!  We’d like to pull out our soap box and lecture on why open source produces higher quality software faster than legacy proprietary approaches, but that argument is well documented elsewhere.',
    'post_status' => 'publish',
    'post_date' => date('2010-10-1 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Feedback on the wolfSSL Java SSL Provider for Android',
    'post_content' => 'Hi!<br /><br />Our Java-based SSL provider has been in alpha for two months now, and we’re actively preparing a beta release.  Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you have identified bugs, want to request a feature, or think you’ve spotted potential optimizations.<br /><br />Thanks!<br />Team yaSSL',
    'post_status' => 'publish',
    'post_date' => date('2010-9-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL SSL Sniffer Support',
    'post_content' => 'Do you have a need to analyze SSL traffic?  Beginning with the wolfSSL 1.5.0 release, we have provided a build option allowing the wolfSSL embedded SSL library to be built with SSL Sniffer functionality.  This means that you can collect SSL traffic packets and with the correct key file, are able to decrypt them as well.  This could be useful for several reasons, including:<br /><br />- Analyzing Network Problems<br />- Detecting network misuse by internal and external users<br />- Monitoring network usage and data in motion<br />- Debugging client/server communications<br /><br />To enable sniffer support, build wolfSSL with the --enable-sniffer option on *nix or use the vcproj files on Windows.  You will need to have pcap installed on *nix or WinPcap on Windows.  There are five main sniffer functions which can be found in sniffer.h.  They are listed below with a short description of each:<br /><br /><b>ssl_SetPrivateKey</b> - Sets the private key for a specific server and port.<br /><b>ssl_DecodePacket</b> - Passes in a TCP/IP packet for decoding.<br /><b>ssl_Trace</b> - Enables / Disables debug tracing to the traceFile.<br /><b>ssl_InitSniffer</b> - Initialize the overall sniffer.<br /><b>ssl_FreeSniffer</b> - Free the overall sniffer.<br /><br />To look at wolfSSL`s sniffer support and see a complete example, please see the "snifftest" app in the "ssSniffer/sslSnifferTest" folder from the wolfSSL download.  <br /><br />Keep in mind that because the encryption keys are setup in the SSL Handshake, the handshake needs to be decoded by the sniffer in order for future application data to be decoded.  For example, if you are using "snifftest" with the wolfSSL example echoserver and echoclient, the snifftest application must be started before the handshake begins between the server and client.  <br /><br />If you have questions or would like more information, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-9-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Build Sizes for the QNX Embedded RTOS',
    'post_content' => 'wolfSSL embedded ssl has been available for QNX since the first source release of the product.  We have compared wolfSSL’s current build size on QNX against OpenSSL and the results surprised us.  A standard wolfSSL build for QNX is 80k.  This compares to a standard OpenSSL build size of 2M.  The wolfSSL embedded implementation is more than 25 times smaller than OpenSSL on QNX! <br /><br />You can find more information about QNX from their website:  <a href="http://www.qnx.com/">http://www.qnx.com/</a><br /><br />If you have any questions or want more information, please contact <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-9-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using the wolfSSL Embedded SSL Library for Secure Firmware Updates',
    'post_content' => 'wolfSSL is a popular tool for digitally signing applications, libraries or files prior to loading them on embedded devices.  As such, it is ideal for signing firmware updates.  The reason that embedded RTOS environments do not include digital signature functionality is because it has historically not been a requirement for most embedded applications.  However, in today’s world of connected devices and heightened security concerns, digitally signing the firmware that is loaded onto your embedded or mobile device has become a top priority.  Because wolfSSL supports the key embedded and real time operating systems, encryption standards, and authentication functionality, it is a natural choice for embedded systems developers to use when signing firmware updates.<br /> <br />Generally, the process for setting up code and file signing on an embedded device are as follows:<br /> <br />	1.	  The embedded systems developer will generate an RSA key pair.<br />	2.	  A server side script based tool is developed<br />            a.  The server side tool will create a hash of the code to be loaded on the device with SHA-256 for example.<br />            b.  The hash is then digitally signed, also called a RSA private encrypt.<br />            c.  A package is created that contains the code along with the digital signature.<br />	1.	  The package is loaded on the device along with a way to get the RSA public key.  The hash is re-created on the device and then digitally verified (also called RSA public decrypt) against the existing digital signature.<br /> <br />Digitally securing your firmware updates can: <br /><br />	1.	  Protect against updates from unauthorized parties<br />	2.	  Enable a secure method for allowing third parties to load files to your device<br />	3.	  Ensure against malicious files finding their way onto your device<br /> <br />Do you need help setting up code signing for your firmware updates?  Let us know as we can help in setting up server-side scripts as well as device-side requirements.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />The yaSSL team will be in Boston at the Embedded Systems Computing show next week as well.  If you are attending and have questions, inquiries, or just want to visit, stop by our booth to say Hi!  We look forward to seeing you there!<br /> <br />More background on code signing:<br /> <br />A great article on the topic at <a href="http://embedded.com/">embedded.com</a>:  <a href="http://embedded.com/design/216500493?printable=true">http://embedded.com/design/216500493?printable=true</a><br />General information on code signing:   <a href="http://en.wikipedia.org/wiki/Code_signing">http://en.wikipedia.org/wiki/Code_signing</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-9-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Showing the new yaSSL Embedded Web Server at ESC Boston',
    'post_content' => 'The yaSSL team will be in Boston at the Embedded Systems Computing show.  We’ll be talking primarily about four topics:<br /> <br /><b>The new yaSSL Embedded Web Server<br /></b> <br />A tiny embedded web server designed with security in mind.  It is highly portable and available on a wide range of platforms.  It is perfect for resource constrained environments.<br /> <br /><b>The wolfSSL Embedded SSL Library<br /></b> <br />A small embedded SSL implementation that supports the latest standards up to TLS 1.2 and DTLS.  Runs on almost all embedded environments.<br /> <br /><b>The new wolfSSL Java provider for Android<br /></b> <br />A version of wolfSSL for the Android platform.  This new port was originally written for our existing customers and users who need cross platform capabilities. <br />Also, come by our booth if you’d like to talk with us about the process of bringing a C library over to Android.  We pioneered this process and have the arrows in our backs to prove it.  We can offer some advice on what to look out for and have a white paper on the topic.<br /> <br /><b>Solutions to today’s common device security problems!<br /></b> <br />Military:  Secure communications to/from your drone, UAV, etc.<br />Networked device firmware updates:  Talk to us about our recipes for building secure firmware update systems. <br />DRM:  Securing digital media with wolfSSL streaming media security functionality as the foundation stone.<br /> <br />We look forward to seeing you there!',
    'post_status' => 'publish',
    'post_date' => date('2010-9-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using AES-NI in the wolfSSL embedded ssl library version 1.6.5',
    'post_content' => 'Hi!  Most of our readers will already know that AES is a key encryption standard used by governments worldwide, and that wolfSSL has always supported AES. <br /> <br />Intel has released a new set of instructions that is a faster way to implement AES, and wolfSSL is currently the first ssl library to fully support the new instruction set for production environments. <br /> <br />Essentially, Intel has added AES instructions at the chip level that perform the compute intensive parts of the AES algorithm, boosting performance. <br /> <br />What we’ve done is add the functionality to wolfSSL to allow it to call  the instructions directly from the chip, instead of running the algorithm in software.  This means that when you’re running wolfSSL on a chipset that supports AES-NI, you can run your AES crypto 5-10 times faster! <br /> <br />If you’re doing some benchmarking for your environment, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a> we’ll be happy to support you with the effort.  Our current benchmarks are in the lab, and we’d like to work with users that can help us further define real world expectations for speed improvements from AES-NI.<br /> <br />References and further reading, ordered from general to specific: <br /> <br />Wikipedia entry on AES:  <a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">http://en.wikipedia.org/wiki/Advanced_Encryption_Standard</a><br />Wikipedia entry on AES-NI:  <a href="http://en.wikipedia.org/wiki/AES_instruction_set">http://en.wikipedia.org/wiki/AES_instruction_set</a><br />Intel Software Network page on AES-NI:   <a href="http://software.intel.com/en-us/articles/intel-advanced-encryption-standard-instructions-aes-ni/">http://software.intel.com/en-us/articles/intel-advanced-encryption-standard-instructions-aes-ni/</a><br /> <br />See the README of wolfSSL 1.6.5 for instructions on building with AES-NI.',
    'post_status' => 'publish',
    'post_date' => date('2010-9-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 1.6.5 is now available',
    'post_content' => 'Release 1.6.5 for wolfSSL adds bug fixes and x509 v3 self signed certificate generation.  For general build instructions see doc/Building_wolfSSL.pdf.  For details on how to use certificate generation, refer to section 11 in the <a href="http://yassl.com/yaSSL/Docs_wolfSSL_Extensions_Reference.html">wolfSSL Extensions Reference</a>. <br /><br />To enable certificate generation support, add this option to ./configure<br />./configure --enable-certgen<br /><br />An example is included in ctaocrypt/test/test.c and documentation is provided in doc/wolfSSL_Extensions_Reference.pdf item 11. Please contact <a href="mailto:support@yassl.com">support@yassl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2010-9-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Exhibiting at ESC Boston - September 20-23 - booth 622',
    'post_content' => 'Hi!  We’ll be exhibiting at the upcoming Embedded Systems Computing show in Boston.  Please come by and see us if you’re at the show.  We’ll be talking about the latest release of the wolfSSL embedded ssl library, as well as our new product, the yaSSL Embedded Web Server. <br /> <br />Looking forward to seeing you there!  If you want to schedule a specific time with us outside of exhibit hours, then contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-9-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Timothy Stapko - Top Ten Considerations for embedded Wi-Fi device security',
    'post_content' => 'Here’s a nice article for embedded designers faced with securing an 802.11 device:  <a href="http://www.embeddedinternetdesign.com/design/227101698;jsessionid=2ZVOUTDKMFWW5QE1GHRSKHWATMY32JVN?pgno=1">http://www.embeddedinternetdesign.com/design/227101698;jsessionid=2ZVOUTDKMFWW5QE1GHRSKHWATMY32JVN?pgno=1</a>.<br /> <br />Stapko’s item 8 on the list caught our attention.  He correctly states that “Wi-Fi security protocols are big and slow.”  However, the article is an overview, and is not intended to discuss which ones are bigger and slower, and which ones are smaller and faster.  This, of course, is where we must chirp up and make the point that the wolfSSL embedded ssl solution is sized under 50k, as opposed to some solutions which are 20-50 times that size.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-9-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More good commentary on exposed devices',
    'post_content' => 'John Sawyer of Dark Reading has put out another great blog post on using SHODAN to find exposed network devices like “printers, routers, fiber channel switches and industrial control systems” on a corporate network, and provides some useful advice for discovering those devices.  See:  <a href="http://www.darkreading.com/blog/archives/2010/09/change_manageme.html?cid=nl_DR_WEEKLY_2010-09-02_h">http://www.darkreading.com/blog/archives/2010/09/change_manageme.html?cid=nl_DR_WEEKLY_2010-09-02_h</a> for the full post.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-9-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Reasoning Behind the Wolf in Our Logo',
    'post_content' => 'Have you ever wondered if there is a reason for the wolf in our logo?  Why does a security company that focuses on embedded SSL products choose a wolf over any number of possible logo designs?  We chose a wolf to be part of our logo for several reasons:<br /><br />	•	  Wolves like to live in free and open environments.<br />	•	  Wolves communicate and hunt in packs, like open source developers hunt bugs.<br />	•	  Wolves are lean and fast.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-9-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Releases Secure Embedded Web Server for Connected Devices',
    'post_content' => 'Our recent release of the yaSSL Embedded Web Server:<br /><br /><a href="http://www.prweb.com/releases/2010/08/prweb4438064.htm">http://www.prweb.com/releases/2010/08/prweb4438064.htm</a><br /><br />The yaSSL Embedded Web Server is available for download for both OSX and Linux from our <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">downloads page</a>.  We look forward to hearing your feedback!  Please <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">contact us</a> for more information regarding the yaSSL Embedded Web Server.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-31 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded Web Server Available for Download',
    'post_content' => 'The yaSSL Embedded Web Server is now available for download on Mac OS X and Linux!  The yaSSL Embedded Web Server is based on the popular Mongoose embedded web server - adding built-in SSL functionality.  Working closely with the Mongoose community, we have made it a priority to keep our focus on what customers want.  Reasoning behind choosing the Mongoose web server included:<br /><br />	•   Default size, with wolfSSL enabled, of less than 200K.<br />	•   Excellent code base and community.<br />	•   Portability to real time and embedded operating systems.<br /><br />For more information about the Mongoose Web Server, documentation (including a manual, full web application example, API reference, and embedding strategies) can be viewed here: <a href="http://code.google.com/p/mongoose/w/list">http://code.google.com/p/mongoose/w/list</a><br /><br />Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> for more information regarding the yaSSL Embedded Web Server.  Download test and evaluation copies for OS X and Linux here: <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">Download yaSSL Embedded Web Server</a>.  We welcome your feedback!',
    'post_status' => 'publish',
    'post_date' => date('2010-8-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL 1.6.0 is now available',
    'post_content' => 'Release 1.6.0 for the wolfSSL embedded ssl library adds bug fixes, support for RIPEMD-160 and SHA-512 algorithms and RSA key generation.  For general build instructions see doc/Building_wolfSSL.pdf.  For build options to enable RIPEMD-160 and SHA-512, please see the README included in the <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">download</a>.<br /><br />Please contact <a href="mailto:support@yassl.com">support@yassl.com</a> with any questions.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'DTLS and wolfSSL embedded ssl',
    'post_content' => 'Did you know that the wolfSSL embedded ssl solution includes DTLS support?  wolfSSL has supported DTLS functionality for over a year now.  Frankly, we have not had much user feedback on the feature, which means that either people are not using it or that those using it are perfectly satisfied.  If you care to comment, we’d love your feedback at <a href="mailto:info@yassl.com">info@yassl.com</a>. <br /> <br />DTLS was initially designed to serve the needs of secure VoIP designers, SIP users, internet game builders, and others that have an unreliable connection.  Further background on the genesis and purposing of DTLS can be found here:  <a href="http://crypto.stanford.edu/~nagendra/papers/dtls.pdf">http://crypto.stanford.edu/~nagendra/papers/dtls.pdf</a>.  The RFC can be found here:  <a href="http://tools.ietf.org/html/rfc4347">http://tools.ietf.org/html/rfc4347</a>, and the Wikipedia page is here:  <a href="http://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security">http://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL for iPhone',
    'post_content' => 'Did you know that wolfSSL is available for iPhone/iOS?  We’ve been building and testing wolfSSL on iOS now for the last couple of years.  As wolfSSL users know, the code is extremely portable.  When iPhone originally launched, we decided to build for the device as yet another test for portability.  Everything moved over smoothly and we’ve been building and testing each incremental release ever since.  Let us know if you’re building cross platform applications and need support for iPhone  by contacting us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The Benefit of Stream Ciphers',
    'post_content' => 'Ever wondered what the difference between a block cipher and a stream cipher was?  A block cipher has to be encrypted in chunks that are the block size for the cipher.  For example, AES has block size of 16 bytes.  So if you`re encrypting a bunch of small, 2 or 3 byte, chucks back and forth, over 80% of the data is useless padding, decreasing the speed of the encryption/decryption process and needlessly wasting network bandwidth to boot.  So basically block ciphers are designed for large chucks of data, have block sizes requiring padding, and use a fixed, unvarying transformation.<br /><br />Stream ciphers work well for large or small chucks of data.  They`re suitable for smaller data sizes because no block size is required.  And if speed is a concern, stream ciphers are your answer, because they use a simpler transformation that typically involves an xor`d keystream.  So if you need to stream media, encrypt various data sizes including small ones, or have a need for a fast cipher then stream ciphers are your best bet.<br /><br />SSL uses RC4 as the default stream cipher.  It`s a pretty good one, though it`s getting a little older.  There are some interesting advancements being made in the field and nearly two years ago wolfSSL added two ciphers from the eStream project into the code base, RABBIT and HC-128.  RABBIT is nearly twice as fast as RC4 and HC-128 is about 5 times as fast!  So if you`ve ever decided not to use SSL because of speed concerns, using wolfSSL`s stream ciphers should lessen or eliminate that performance doubt.<br /><br />Both RABBIT and HC-128 are built by default into wolfSSL.  Please see the examples or the docs for usage.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The Next wolfSSL Embedded SSL release',
    'post_content' => 'Hi!  The next wolfSSL release should be ready this week, barring unforeseen testing issues.  Our big feature addition for this release is key generation.  The addition of key generation to wolfSSL clears the way for us to add certificate generation, with planned availability in September.  We’ve had a number of our commercial customers as well as open source users asking us for these features for various reasons, and we’re happy to add them for the enjoyment of all. <br /> <br />One use case that we are particularly excited about is enabling digital signing for embedded systems and devices.  Essentially, we’ll be providing the key components in our next release for our users to set up digital signing for their various embedded systems.  Watch this space for our white paper on the topic.  The white paper will go through the process of setting up your own private certificate authority, as you would do if you were setting up your own private app store or secure firmware download site.  Many users like to do this sort of thing if they have closed systems, and don’t need certificates from a standard certificate authority.  Who knows, perhaps one of our users will use wolfSSL certificate generation to break the monopolies currently enjoyed by the current batch of certificate authorities. <br /> <br />If you are a device vendor, you might ask the broader question of why to use SSL secure firmware download to your devices?  First, you will know where the firmware updated and installed on your device is coming from.  It won’t be random, it will be coming from a server you control.  Second, you will know that the software updated to the device has not been tampered with during delivery. <br /> <br />As we saw from the recent Security B-Sides presentation “Fun with VxWorks” (Slides can be found here: <a href="http://www.metasploit.com/data/confs/bsideslv2010/FunWithVxWorks.pdf">http://www.metasploit.com/data/confs/bsideslv2010/FunWithVxWorks.pdf</a>), the attack vector of current interest is embedded systems and devices.  As such, vendors of connected devices such as printers, cameras, etc, will need to be setting up their own private secure delivery mechanisms for applying firmware updates, etc. <br /> <br />As always, we’re here to help.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you need help with this stuff, either on the server side or the device side.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-24 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL embedded ssl and IPv6',
    'post_content' => 'If you are an adopter of IPv6 and want to use an embedded ssl implementation, then you may have been wondering if wolfSSL supports IPv6.  The answer is yes, we do support wolfSSL running on top of IPv6.  Note that our current test applications default to IPv4, so as to apply to a broader number of systems.  Please see <a href="http://www.yassl.com/yaSSL/Docs_Building_wolfSSL.html">http://www.yassl.com/yaSSL/Docs_Building_wolfSSL.html</a> --enable-ipv6 to change the test applications to IPv6.  You can contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you need assistance with IP version issues.<br /> <br />Further information on IPv6 can be found here:  <a href="http://en.wikipedia.org/wiki/IPv6">http://en.wikipedia.org/wiki/IPv6</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Top Five Reasons to choose wolfSSL as your Embedded SSL solution',
    'post_content' => '1.       Size:  wolfSSL can be built as small as 30k.<br />2.       Supports the newest standards: TLS 1.1 and 1.2, DTLS, and Stream Ciphers<br />3.       Multi-platform<br />4.       Royalty Free<br />5.       OpenSSL compatibility API to ease porting into older applications',
    'post_status' => 'publish',
    'post_date' => date('2010-8-23 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More on VxWorks vulnerabilities from DarkReading.com',
    'post_content' => 'Here’s another informative blog post from John Sawyer of DarkReading:  <a href="http://www.darkreading.com/blog/archives/2010/08/gaining_a_footh.html">http://www.darkreading.com/blog/archives/2010/08/gaining_a_footh.html</a>. ',
    'post_status' => 'publish',
    'post_date' => date('2010-8-20 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Embedded Systems Can Mean Embedded Vulnerabilities',
    'post_content' => 'Here’s another warning from the media with regard to adding proper security to embedded systems: <a href="http://www.darkreading.com/blog/archives/2010/08/embedded_system.html?cid=nl_DR_WEEKLY_2010-08-19_h">http://www.darkreading.com/blog/archives/2010/08/embedded_system.html?cid=nl_DR_WEEKLY_2010-08-19_h</a>.  It’s a good article that reminds us how many vulnerable embedded systems are out there that need to be retrofitted with embedded ssl.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Announcing the yaSSL Embedded Web Server',
    'post_content' => 'As stated in previous blog posts, we have ported wolfSSL into a number of embedded web servers on behalf of our customers and community users.  wolfSSL can be included in <a href="http://code.google.com/p/mongoose/">Mongoose</a> , <a href="http://www.lighttpd.net/">Lighttpd</a> (aka Lighty), <a href="http://nginx.org/">Nginx</a>, <a href="http://www.goahead.com/products/webserver/default.aspx">GoAhead</a>, and <a href="http://en.wikipedia.org/wiki/Comparison_of_lightweight_web_servers">others</a>.  As a part of the work of enabling these embedded web servers to use SSL, we have learned a lot about all of these excellent products, including how they are used in embedded environments, what their code is like, and their feature support. <br /> <br />As a result of our evaluation, we put a lot of energy into determining which open source embedded web server should receive the bulk of our attention.  We want to focus on the one that maps most closely to the needs of our customer base.  The wolfSSL customer generally wants the following in their open source embedded web server, in order of priority:<br /> <br />1.       Support for real time and embedded operating systems.<br />2.       Commercially available support<br />3.       Size:  Small, tight code.<br />4.       Well enabled security features<br />5.       Speed<br /> <br />As a result of our evaluation, we determined that the Mongoose embedded web server should receive the bulk of our attention.  Mongoose is the winner because it fits our customer’s needs, via the following metrics:<br /> <br />1.       Default size, with wolfSSL enabled, of less than 200k.<br />2.       Excellent code base and community.<br />3.       Portability to real time and embedded operating systems.<br /> <br />Based on all of the above, and more, we have decided to sell and market a version of Mongoose we’re calling the yaSSL Embedded Web Server.  We have agreed with the leader of the Mongoose community, Sergey Lyubka, to collaborate on feature development and bug fixes.  Bug fixes, feature additions, and general improvements that we generate to the code base will be rolled back into the main source tree subject to Sergey’s approval.  We will endeavor to be a good citizen and quality partner to the Mongoose community!<br /> <br />Versions of the yaSSL Embedded Web Server for RTOS and embedded environments are available immediately, upon request, on a subscription basis.  Annual subscriptions are available at the price of $5,000 USD per year.  Subscriptions include the following, per product line within which you embed: <br /> <br />1.       Commercial support for wolfSSL and the yaSSL Embedded Web server<br />2.       Updates and upgrades<br />3.       Porting of both the SSL and Web Server to your  embedded environment and chipset.<br />4.       Commercial licenses<br />5.       Size and speed optimization support<br /> <br />Supported environments include ThreadX, VxWorks, QNX, OpenWRT, Tron, iTron, Microitron, Android, OpenCL, and MontaVista.  Other supported environments are available on a per request basis.  We’ll also support *nix and the gaggle of *bsd’s, which we’ll port to as requested. <br /> <br />As always, we’d like your feedback and questions!  Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL competitive upgrade program now available',
    'post_content' => 'Competitive upgrade pricing for wolfSSL is now available.  We’ll help you move from an outdated or expensive ssl library to wolfSSL with low cost and minimal disturbance to your code base.    <br /> <br />How does it work?  Here’s an outline of the program:<br /> <br />	1.	You need to currently be using a commercial competitor to wolfSSL.<br />	2.	You will receive up to two weeks of onsite consulting to switch out your old ssl library for wolfSSL.  Travel expenses are not included.<br />	3.	Normally, two weeks is the right amount of time for us to make the replacement in your code and do initial testing.  Additional consulting on a replacement is available as needed.<br />	4.	You will receive the standard wolfSSL royalty free license to ship with your product.<br />	5.	The price is $10,000.<br /> <br />The purpose of this program is to enable users who are currently spending too much on their embedded ssl implementation to move to wolfSSL with ease.  If you are interested in learning more, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL SSL Provider for Android Released – Alpha Version',
    'post_content' => 'We have released an Alpha of our Java SSL Provider for the Android Platform.  This can be installed alongside the existing Apache Harmony provider and can be used through the <b>javax.net.ssl</b> Java API package.  By using our provider, Java developers can use familiar syntax and API calls of Java to gain the speed and size advantages that the wolfSSL embedded SSL library offers.  By using wolfSSL on Android, you can reduce the overall image footprint by 500k to 600k.<br /> <br />Being in the Alpha stage, this provider currently only offers client functionality.  If you want to give our provider a try, please download it from our additional downloads page <b><a href="perma://BLPageReference/92171BC7-F8AD-4719-B0EE-C4230D10D77A">here</a></b>.  Instructions for installation into the Android Platform can be found in the README file included with the download.<br /> <br />We look forward to your feedback!  Please keep in mind that this is an alpha release.  Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you need support.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Encrypted Memcached beta 1 and beta 2 - memcache with integrated wolfSSL embedded ssl',
    'post_content' => 'Hi!  Two months ago we announced the availability of a version of memcached that we’ve been calling secure memcached.  This current branch of memcached includes ssl encryption between client and server.  Currently, client support is limited to libmemcached, but we’ll work with our beta sites to support additional clients as needed.  Our plan is to submit our branch as a patch to the project once we receive more feedback from betas. <br /> <br />Our upcoming Beta 2 version of secure memcached will add encryption for data held inside the server.  As such, if someone gets their hands on your memcached server, they won’t be able to read the data.  The level of security in Beta 2 will resolve the vulnerability faced by memcached users recently discussed on Slashdot:  <a href="http://it.slashdot.org/story/10/08/07/035255/Cache-On-Delivery-mdash-Memcached-Opens-an-Accidental-Security-Hole">http://it.slashdot.org/story/10/08/07/035255/Cache-On-Delivery-mdash-Memcached-Opens-an-Accidental-Security-Hole</a>. <br /> <br />Beta 2 is slated for release in a couple of weeks.  Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you would like to participate in the beta program. <br /> <br />Performance results for secure memcached are available here:  <b><a href="perma://BLPageReference/D57448F8-BA1F-418F-87DB-C89C358FE044">Benchmark</a></b><br /> <br />A copy of our presentation on secure memcached  given at OSCON is available here:  <b><a href="http://www.yassl.com/files/ToddOuska_SecureMemcache.ppt">PPT Download</a></b>',
    'post_status' => 'publish',
    'post_date' => date('2010-8-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using wolfSSL embedded SSL on iPhone',
    'post_content' => 'Many of our users are unaware that the wolfSSL embedded ssl library is available for iPhone. The first question to answer is why did we port wolfSSL to the iphone in the first place?  The answer to that question is simple:  our primary development environment is Mac OSX and we walk around town with iOS in our pockets.  As such, it was right in front of us and ready to play with.<br /> <br />What can you do with an iPhone embedded ssl library?  Build your application with SSL included for enhanced security!  If you need to secure any iOS app and you want to use the de facto SSL API, then choose wolfSSL.  It is small, and will add minimal size to your application download.  You could use it to secure personal data, financial data, etc.  And, don’t forget that wolfSSL is cross platform, so it will run on other devices that you port your application to. <br /> <br />To get yourself started, go look at the xcode iPhone project in our <a href="perma://BLPageReference/6B02D89A-5A0D-4ED2-95BA-E749B0AC2D3E">download package</a>. <br /><br />If you have any questions on using wolfSSL in your iOS application, please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL embedded ssl and OpenWRT',
    'post_content' => 'There’s a great article on “Building Custom Firmware with OpenWRT” in the August edition of Linux Journal:  <a href="http://www.linuxjournal.com/">www.linuxjournal.com</a>.  It’s not out on their website yet, but is available in paper form if you pick up a copy. <br /> <br />If you haven’t checked out the OpenWRT project yet, you can do so here:  <a href="http://www.openwrt.org/">www.openwrt.org</a>.  We’ve been supporting OpenWRT for a couple of years now with our wolfSSL embedded ssl implementation, and it had now been adopted by quite a few OpenWRT applications and derivatives.  A couple of examples include:  <a href="http://www.gargoyle-router.com/">http://www.gargoyle-router.com/</a>, who hacked wolfSSL down even much smaller than the normal 50k, and LuCi, <a href="http://luci.subsignal.org/">http://luci.subsignal.org/</a>.<br /> <br />If you’re using wolfSSL in an open source project, keep in mind that our policy is to support open source projects for free, as in free beer at our SSL party.  It will rock.  As such, you can channel your questions directly to our forums <a href="http://sourceforge.net/projects/yassl/forums/forum/439591">http://sourceforge.net/projects/yassl/forums/forum/439591</a>, or if they are sensitive, email them to us at <a href="mailto:info@yassl.com">info@yassl.com</a>. <br /> <br />Rock on!',
    'post_status' => 'publish',
    'post_date' => date('2010-8-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'It’s the Final Countdown',
    'post_content' => 'wolfSSL is about to make its alpha test debut as a Java based SSL provider on Android.  This project took longer than planned, but we now have a version working internally.  Alpha releases are available on a request basis.  We’ll post more here as we make it available early next week. <br /> <br />In the meantime, for your listening and viewing pleasure:  <a href="http://www.youtube.com/watch?v=7_IKcMl_a9A">http://www.youtube.com/watch?v=7_IKcMl_a9A</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-8-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'What’s the difference between wolfSSL and OpenSSL',
    'post_content' => 'We’re often asked what differentiates wolfSSL and OpenSSL.  Here’s our list: <br /> <br />	a.	wolfSSL builds are 20-40 times smaller than OpenSSL.  Hence it is much more useful in embedded ssl implementations.<br />	b.	Standards support:  wolfSSL supports TLS 1.1 and 1.2.  OpenSSL does not support TLS 1.1 or 1.2.<br />	c.	wolfSSL was built with securing streaming media in mind.  OpenSSL was built before streaming media was popular on the internet. As such, wolfSSL supports the latest streaming ciphers like Rabbit and HC-128 where OpenSSL does not.<br />	d.	License:  wolfSSL is GPLv2 or commercial, with a company behind the commercial license.  OpenSSL does not have a clear license. <br />	e.	We have tried to apply Occam’s razor as the guiding philosophy to our implementation of SSL.  As such, our API focuses on the most critical and necessary functionality in order to simplify the problem.  wolfSSL has 20 or so function calls,  and an additional 230 for our OpenSSL compatibility layer.  OpenSSL has over 3,500.<br />	f.	Really old code versus relatively new code:  wolfSSL was written starting in 2004.  OpenSSL started in 1995.  Coding standards and requirements are a lot different now.  OpenSSL has a longer legacy to support and maintain.<br />	g.	The OpenSSL legacy code comes from supporting usage profiles and operating systems that are no longer mainstream.  The legacy code makes OpenSSL a easier to break and harder to fix. <br />	h.	OpenSSL was written as the SSL/TLS standards were being defined.  Their code went down a number of blind alleys.  We had the luxury of writing our code once the standards were well settled.<br /> <br />Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you have comments!  We’ll be happy to re-factor this list with your input!',
    'post_status' => 'publish',
    'post_date' => date('2010-8-5 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Running wolfSSL on a GPU',
    'post_content' => 'Hi!  wolfSSL is ported to both the Cuda <a href="http://en.wikipedia.org/wiki/CUDA">http://en.wikipedia.org/wiki/CUDA</a>  and OpenCL <a href="http://en.wikipedia.org/wiki/OpenCL">http://en.wikipedia.org/wiki/OpenCL</a> frameworks.  These frameworks are for writing programs that execute on GPU’s, or Graphical Processing Units.  Generally, GPU’s are used for graphics processing, but due to their high production volumes and low cost, they can be useful for math intensive computing.  Early adopters are building super computers based on GPU’s for various purposes.  For example:  <a href="http://hardware.slashdot.org/story/09/12/16/2255259/FASTRA-II-Puts-13-GPUs-In-a-Desktop-Supercomputer">http://hardware.slashdot.org/story/09/12/16/2255259/FASTRA-II-Puts-13-GPUs-In-a-Desktop-Supercomputer</a>.  Search Slashdot for GPU for more examples. <br /> <br />wolfSSL is ported to GPU’s because it is a low cost way to leverage GPU compute power for SSL offload, and can be much more cost effective for building SSL appliances. <br /> <br />Let us know at <a href="mailto:info@yassl.com">info@yassl.com</a> if you are interested in running SSL on a GPU.  We’ll be happy to support you!',
    'post_status' => 'publish',
    'post_date' => date('2010-8-3 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL build sizes for the QNX embedded RTOS',
    'post_content' => 'As yaSSL followers know, wolfSSL embedded ssl has been available for QNX since the first source release of the product.  This week we decided to compare wolfSSL’s current build size on QNX against OpenSSL.  The results surprised us.  A standard wolfSSL build for QNX is 80k.  This compares to a standard OpenSSL build size of 2M.  The wolfSSL embedded implementation is more than 25 times smaller than OpenSSL on QNX! ',
    'post_status' => 'publish',
    'post_date' => date('2010-7-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'New study on SSL version support and cipher support presented at BlackHat',
    'post_content' => 'Ivan Ristic from Qualys has a new study out which presents his results from an exhaustive survey of SSL servers.  Some of the results are pretty interesting for those of us that create embedded ssl libraries.  These points really caught our attention: <br /> <br />1.  Too many SSL implementations still support insecure SSLv2.<br />2.  Very few SSL implementations support TLS 1.1 and 1.2.<br />3.  There is still wide support for weak ciphers. <br /> <br />As wolfSSL users know, wolfSSL does not support SSLv2 because it is insecure.  Also, as a technology leader, wolfSSL has put TLS 1.1 in production for over three years and has had TLS 1.2 available for  a year. <br /> <br />Ivan’s blog post:  <a href="http://blog.ivanristic.com/2010/07/internet-ssl-survey-2010-is-here.html">http://blog.ivanristic.com/2010/07/internet-ssl-survey-2010-is-here.html</a><br /> <br />Ivan’s BlackHat presentation:  <a href="http://blog.ivanristic.com/Qualys_SSL_Labs-State_of_SSL_2010-v1.6.pdf">http://blog.ivanristic.com/Qualys_SSL_Labs-State_of_SSL_2010-v1.6.pdf</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-7-30 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Java SSL Provider Alpha Released',
    'post_content' => 'We have released an Alpha of our SSL Provider for Java.  Currently supporting Mac and Linux operating systems, this provider enables Java developers to use wolfSSL through the <b>javax.net.ssl </b>package.  By using this, Java developers can use familiar syntax and API calls to gain the speed and size advantages that the wolfSSL embedded SSL library provides.<br /><br />Being in the Alpha stage, this provider currently only offers client functionality.  If you want to give our provider a try, please download it from our additional downloads page <b><a href="perma://BLPageReference/92171BC7-F8AD-4719-B0EE-C4230D10D77A">here</a></b>.  Instructions for installation can be found in the README file included with the download.<br /><br />We look forward to your feedback!',
    'post_status' => 'publish',
    'post_date' => date('2010-7-29 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'HealthVault applications for iphone and Android using wolfSSL',
    'post_content' => 'We`re thinking about implementing the security layer under Java to enable HealthVault applications for iphone and Android using our wolfSSL embedded ssl.  This means we`ll support the proper certificate generation for HealthVault applications that want to allow their users to securely access HealthVault information from iphone and Android devices.  As such, we`re interested in finding HealthVault application providers interested in iphone or Android.  Are you interested in device based HealthVault?  If yes, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-28 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL for Android',
    'post_content' => 'The wolfSSL library for Android is almost ready for alpha testing.  The project has taken us longer than anticipated!  The key benefits to the new technology include:<br /> <br />1.       Better performance than Android’s native SSL support through OpenSSL.<br />2.       Smaller footprint.<br />3.       Tight, seamless integration with Java as an SSL Provider. <br /> <br />The follow through of the project will also drive release of wolfSSL as a Java based SSL provider on other platforms.  The initial targets are Mac and Linux.  If you are interested in using wolfSSL hosted in Java, then contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-27 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Pictures of Todd Ouska’s talk about Secure Memcache at OSCON',
    'post_content' => 'Here’s some pictures of Todd’s talk at OSCON about Secure Memcache.  For those who have not been following, Secure Memcache is a Memcache branch that includes the wolfSSL embedded SSL for encryption between Memcache servers and clients.<br /><br /><a href="http://www.flickr.com/photos/oreillyconf/4815591827/in/set-72157624428101453/">http://www.flickr.com/photos/oreillyconf/4815591827/in/set-72157624428101453/</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-7-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'More about OSCON Portland',
    'post_content' => 'The yaSSL pack will be at the Cloudcamp PDX event on Monday evening.  Let us know if you’ll be there too.  <br /><br />On Tuesday evening, Todd Ouska will present an Ignite talk at the Open Source Awards ceremony at 7:00 PM.  Todd will talk about wolfSSL in Memcache.  <br /><br />Generally speaking, we’ll be able to find time to talk to yaSSL users at the show.  Just email us at <a href="mailto:info@yassl.com">info@yassl.com</a> to set up a time.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-19 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'OSCON in Portland 19-23 July',
    'post_content' => 'Hi!  Members of the yaSSL crew will be at OSCON next week.  There will be a short talk on wolfSSL in memcache.  We’ll also be talking to people who are interested in wolfSSL for Android.  We’ll be generally available at the show for anyone interested in talking SSL with us.  If you want to meet at the show, then let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.  See you there!',
    'post_status' => 'publish',
    'post_date' => date('2010-7-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Mongoose Embedded Web server and wolfSSL Embedded SSL',
    'post_content' => 'Hi!  One of our users recently requested that wolfSSL become compatible with Mongoose.  As such, we have recently made changes to the wolfSSL 1.5.4 embedded ssl library to make it build seamlessly with the Mongoose embedded web server.  Essentially this meant that we made minor enhancements to wolfSSL’s openssl compatibility layer to accomplish a clean build.  Everything should build cleanly at this point, but let us know if you face any issues.  If you build with wolfSSL instead of OpenSSL, you will get a smaller resulting build.  You can contact us with any support issues you face at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using AES-NI in the wolfSSL embedded ssl library version 1.5.4',
    'post_content' => 'Hi!  Most of our readers will already know that AES is a key encryption standard used by governments worldwide, and that wolfSSL has always supported AES. <br /> <br />Intel has released a new set of instructions that is a faster way to implement AES, and wolfSSL is currently the first ssl library to fully support the new instruction set for production environments. <br /> <br />Essentially, Intel has added AES instructions at the chip level that perform the compute intensive parts of the AES algorithm, boosting performance. <br /> <br />What we’ve done is add the functionality to wolfSSL to allow it to call  the instructions directly from the chip, instead of running the algorithm in software.  This means that when you’re running wolfSSL on a chipset that supports AES-NI, you can run your AES crypto 5-10 times faster! <br /> <br />If you’re doing some benchmarking for your environment, let us know at <a href="mailto:info@yassl.com">info@yassl.com</a> we’ll be happy to support you with the effort.  Our current benchmarks are in the lab, and we’d like to work with users that can help us further define real world expectations for speed improvements from AES-NI.<br /> <br />References and further reading, ordered from general to specific: <br /> <br />Wikipedia entry on AES:  <a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">http://en.wikipedia.org/wiki/Advanced_Encryption_Standard</a><br />Wikipedia entry on AES-NI:  <a href="http://en.wikipedia.org/wiki/AES_instruction_set">http://en.wikipedia.org/wiki/AES_instruction_set</a><br />Intel Software Network page on AES-NI:   <a href="http://software.intel.com/en-us/articles/intel-advanced-encryption-standard-instructions-aes-ni/">http://software.intel.com/en-us/articles/intel-advanced-encryption-standard-instructions-aes-ni/</a><br /> <br />See the readme of wolfSSL 1.5.4 for instructions on building with AES-NI.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-13 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Using the wolfSSL embedded ssl library for digitally signing and authenticating',
    'post_content' => 'wolfSSL is a popular tool for digitally signing applications, libraries or files prior to loading them on embedded devices.  Most desktop and server operating systems allow creation of this type of functionality through system libraries, but stripped down embedded operating systems do not.  The reason that embedded RTOS environments do not include digital signature functionality is because it has historically not been a requirement for most embedded applications.  However, the times they are a changing.  In today’s world of connected devices and heightened security concerns, digitally signing what is loaded onto your embedded or mobile device has become a top priority.  Examples of embedded connected devices where this requirement was not found in years past include set top boxes, DVR’s, POS systems, both VoiP  and mobile phones, and even automobile based computing systems.  Because wolfSSL supports the key embedded and real time operating systems, encryption standards and authentication functionality, it is a natural choice for embedded systems developers to use when adding digital signature functionality.<br /> <br />Generally, the process for setting up code and file signing on an embedded device are as follows:<br /> <br />	1.	  The embedded systems developer will generate an RSA key pair.<br />	2.	  A server side script based tool is developed<br />            a.  The server side tool will create a hash of the code to be loaded on the device with SHA-256 for example.<br />            b.  The hash is then digitally signed, also called a RSA private encrypt.<br />            c.  A package is created that contains the code along with the digital signature.<br />	1.	  The package is loaded on the device along with a way to get the RSA public key.  The hash is re-created on the device then digitally verified (also called RSA public decrypt) against the existing digital signature.<br /> <br />Benefits to enabling digital signatures on your device:<br /> <br />	1.	  Easily enable a secure method for allowing third parties to load files to your device.<br />	2.	  Ensure against malicious files finding their way on to your device.<br />	3.	  Digitally secure firmware updates<br />	4.	  Ensure against firmware updates from unauthorized parties<br /> <br />Do you need help setting up code signing for your embedded device?  Let us know as we can help setting up servers side scripts as well as on the device side.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /> <br />More background on code signing:<br /> <br />A great article on the topic at <a href="http://embedded.com/">embedded.com</a>:  <a href="http://embedded.com/design/216500493?printable=true">http://embedded.com/design/216500493?printable=true</a><br /> <br />General information on code signing:   <a href="http://en.wikipedia.org/wiki/Code_signing">http://en.wikipedia.org/wiki/Code_signing</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-7-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Benchmarking an Embedded SSL Library',
    'post_content' => 'Hi!  We’re planning to build a benchmark tool for our users.  We believe that developers like to make an informed choice, and benchmarking is the key to getting informed about tools like wolfSSL.  Size and TPS are usually at the top of the agenda when benchmarking an SSL library, but other considerations can come into play as well.  For example, does the library support TLS version 2, or does it only support SSL 3.0 or TLS version 1?  Does the library support DTLS?  How do the various ciphers perform against each other under different load types? <br /> <br />The first version of our SSL benchmark tool will only benchmark wolfSSL, but we hope to expand its scope over time to compare other open source SSL libraries as well.  Please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you have input on other parameters that should be benchmarked or if you are interested in participating in the development of the tool.  We’re also thinking of breaking with our traditional yet boring “yet another” naming convention and calling the benchmark tool something else, like “Hungry Wolf” or “SSL Slapper” to spice things up.  As such, email us if you think you have a great name idea for the tool!',
    'post_status' => 'publish',
    'post_date' => date('2010-7-9 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL embedded ssl library release 1.5.4 is now available',
    'post_content' => 'wolfSSL release 1.5.4 adds support for the Mongoose Web Server and intel`s AES-NI encryption instructions, speed improvements for the SHA1 cipher from loop unrolling, new testing certificates and bug fixes.<br /><br />Support for the Mongoose Web Server was user requested.  Support was added by test building Mongoose with wolfSSL and enabling our OpenSSL compatibility API.  Minor functionality was then added to wolfSSL`s OpenSSL compatibility API to make the build seamless.  The build results in a smaller footprint version of Mongoose for embedded users.   Secure connections to Mongoose were then tested and subsequently passed.  If you find any issues in building Mongoose with wolfSSL or with the subsequent builds, then please contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br /><br />Support for AES-NI, intel`s new instruction set for accelerated AES support, was enabled so that our intel based users could access the instruction set directly through wolfSSL.  This new functionality gives wolfSSL users wonderful speed improvements when using AES on servers under heavy load. More details on how to make the most of wolfSSL`s AES-NI support for intel servers will be available shortly.  If you need more help now, then let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.  Details on AES-NI can be found here: <a href="http://www.intel.com/Assets/en_US/PDF/whitepaper/Intel_AES-NI_White_Paper.pdf">http://www.intel.com/Assets/en_US/PDF/whitepaper/Intel_AES-NI_White_Paper.pdf</a>.<br /><br />Happy yaSSLing!  We hope you enjoy this new release!',
    'post_status' => 'publish',
    'post_date' => date('2010-7-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL library for Android',
    'post_content' => 'Hi!  We are currently putting together a build of wolfSSL for the Android platform, specifically for users that require a small footprint embedded ssl library.  The development effort is will result in wolfSSL operating as an SSL provider for Java on the Android platform.  The natural byproduct of this project is that we’ll have a Java based SSL provider available for other mobile and embedded platforms.  If you are interested in running wolfSSL in Java as an SSL provider, then contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>, and we will provide you with a beta copy.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-8 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL’s partnership with ARM',
    'post_content' => 'yaSSL has now been partnered with ARM for 18 months!  Why is yaSSL partnered with ARM?  Simply stated, because so many of our users and customers are running on the ARM chipset.  Users choose wolfSSL on ARM because it is fast, lightweight, and easily embedded to secure connected application software.  To meet the needs of our customers, we have ported the wolfSSL embedded ssl library to several ARM based environments, including Android, ThreadX, QNX, Ubuntu, IAR, MontaVista and OpenWRT.  If you need wolfSSL on another ARM based operating environment that we don’t currently support, then contact us at <a href="mailto:info@yassl.com">info@yassl.com</a>.',
    'post_status' => 'publish',
    'post_date' => date('2010-7-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL 2.0 is now available',
    'post_content' => 'yaSSL, the leading C++ based ssl library, is now available for download.  This release of yaSSL contains bug fixes, new testing certs, and a security patch for a potential heap overflow on forged application data processing.  Vulnerability discovered by Matthieu Bonetti from VUPEN Security (<a href="http://www.vupen.com/">http://www.vupen.com</a>).',
    'post_status' => 'publish',
    'post_date' => date('2010-7-7 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Benchmark for secure Memcache running the wolfSSL embedded SSL library',
    'post_content' => 'We recently announced a beta version of secure Memcache is available to the community.  Users are excited about having SSL available in memcache, but show concern about the performance cost of enabling security.  With this feedback in mind, we benchmarked secure memcache performance against standard memcache.  See the graph below for comparison of secure memcache to standard memcache by measure of TPS.  The first bar is regular memcache.  The rest of the bars show secure memcache running with different cipher options.  We’ve also included the performance of “direct to database,” or running without memcache at all, as a baseline for comparison. <br /> <br />We have several additional optimizations in the works that will bring the performance of secure memcache to within 5-10% of standard memcache for most environments, and can also provide network, operating system and hardware specific optimizations for specific users. <br /> <br />You will see from the graph that running Memcache with SSL enabled is 4x faster than running direct to database.  The cost of running securely varies between about 25% and 40%, depending on cipher.  There is some cost to running secure memcache, but it is not unbearable.  Email us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you want more details on the benchmark.<br /> <br />Who should use secure Memcache?  Generally speaking, anyone concerned about the security of their memcache data. <br /> <br />More specifically: <br /> <br />1.       Users with regulatory compliance requirements. <br />2.       SaaS companies hosting sensitive customer and user data who cannot risk a breach that could damage their reputation<br />3.       Users running in the cloud.<br />4.       Users concerned with masking memcache data securely within their firewall.<br /> <br /> <br />Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> if you are interested in receiving the beta or for more information. ',
    'post_status' => 'publish',
    'post_date' => date('2010-7-6 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL embedded SSL for ThreadX',
    'post_content' => 'We have ported wolfSSL to the <a href="http://www.rtos.com">ThreadX</a> operating environment!   Our decision to invest in the porting process is based on strong customer demand for a small footprint, high performance, royalty free SSL library on ThreadX.  ThreadX and wolfSSL have a lot in common.  Both companies operate under similar business models, target similar usage profiles, and work with the same chip and board vendors.  With regard to usage profile, both ThreadX and wolfSSL operate well in resource constrained environments and are popular with developers of today’s new generation of connected devices.  We have also seen that wolfSSL is popular for device developers implementing code signing.<br /> <br />If you want to test wolfSSL for ThreadX, just <a href="perma://BLPageReference/06EE3CD0-1B6A-439C-9EB1-57F46765DC22">download</a> our latest source and build it in your environment.  Let us know if you face any issues and we’ll be happy to help.  Just email us at <a href="mailto:info@yassl.com">info@yassl.com</a>!',
    'post_status' => 'publish',
    'post_date' => date('2010-6-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL’s OpenSSL Compatibility',
    'post_content' => 'Hi!<br /> <br />As of this writing, wolfSSL, which is our small embedded SSL library, supports all of the most commonly used OpenSSL functions.  As time goes on, we are incrementally improving our OpenSSL compatibility. <br /> <br />Our process for improvement is driven by two forces. <br /> <br />Firstly, we respond to customer requirements.  Our customers migrate from OpenSSL to wolfSSL for a variety of reasons.  Some migrate to get support for a particular RTOS or embedded environment not supported by OpenSSL.  Others need to reduce the overall size of their application by using a smaller library.  There are also some that migrate because they are seeking commercial licensing and professional support. <br /> <br />Secondly, we test the compatibility layer by building wolfSSL with other open source projects that currently use OpenSSL.  We simply see what breaks, and then we add the missing OpenSSL functions to fix it.  You can see a couple of these efforts available on our <a href="perma://BLPageReference/92171BC7-F8AD-4719-B0EE-C4230D10D77A">download page</a> in the form of experimental versions of <a href="http://www.lighttpd.net/">Lighttpd</a> and <a href="http://www.stunnel.org/">Stunnel</a>.  <a href="perma://BLPageReference/DF086E91-7FF1-4F5B-9AFF-AF2DECE4C90F">Contact us</a> if you would like help compiling wolfSSL with Lighttpd or stunnel.  We’ll be happy to help!',
    'post_status' => 'publish',
    'post_date' => date('2010-6-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'The wolfSSL embedded SSL Library is integrated into LuCI',
    'post_content' => 'Did you know that wolfSSL is integrated into the LuCI project, which is a web interface for embedded devices?  LuCI is an interface tool for wireless routers.  See here for project details:  <a href="http://luci.subsignal.org/">http://luci.subsignal.org/</a>',
    'post_status' => 'publish',
    'post_date' => date('2010-6-18 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL embedded SSL library supports TLS 1.2',
    'post_content' => 'The wolfSSL embedded ssl library and Gnu TLS are the first SSL libraries to support the new TLS 1.2 standard.  The TLS specification can be found here:  <a href="http://www.ietf.org/rfc/rfc5246.txt">http://www.ietf.org/rfc/rfc5246.txt</a>.  The first browser to support TLS 1.2 is Opera.  It appears that TLS 1.2 support is also available in Windows 7, though not by default.  As of this writing support from other browsers  appears to be in the works. <br /><br />Why use TLS 1.2?  In a nutshell, enhanced security.  TLS 1.2 is less susceptible to MITM attacks, has stronger default security, and adds some additional flexibility for developers.<br /><br>Are you using or evaluating wolfSSL’s TLS 1.2 support?  Let us have your feedback!  We would also love to know what extensions to the specification that you think we should support.',
    'post_status' => 'publish',
    'post_date' => date('2010-6-16 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Announcing a beta test of Secure Memcache with wolfSSL',
    'post_content' => 'Hi!  We have embedded wolfSSL into Memcache and are now making it available to beta testers. <br /> <br />There are no obligations for beta testers, so if you want to just review our changes to the source, that is fine.  The first beta will not include client libraries, and we currently don’t know which ones should be supported, so your feedback here is critical.  Let us know which Memcache clients to support.  Your vote counts!  We’ll work with beta testers to provide the client library they need.  Our ideal beta tester has a test rig where they can assess the performance of a wolfSSL secured Memcache versus a regular Memcache.  If community interest in the beta is strong, and feedback is positive, then we’ll submit a branch/patch of Memcache with wolfSSL to the main source tree.  Contact us at <a href="mailto:info@yassl.com">info@yassl.com</a> to receive the beta. ',
    'post_status' => 'publish',
    'post_date' => date('2010-6-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Open Source has comparable security as well as faster remediation times and fewer potential backdoors than commercial or outsourced applications.',
    'post_content' => 'See the excellent blog post by Katie Serignese here:  <a href="http://www.sdtimes.com/blog/post/2010/03/04/The-state-of-software-security.aspx">http://www.sdtimes.com/blog/post/2010/03/04/The-state-of-software-security.aspx</a>.<br /><br />Get the report from Veracode here:  <a href="http://www.veracode.com/reports/index.html">http://www.veracode.com/reports/index.html</a>.  Registration is required to download the report but it is worth the effort.  The detailed report is an excellent document.',
    'post_status' => 'publish',
    'post_date' => date('2010-6-15 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Windows Kernel Mode compatibility for wolfSSL',
    'post_content' => 'We`re considering adding Windows Kernel compatibility to wolfSSL. This means that our embedded SSL library would run in Kernel mode and use either TDI or WinSocK Kernel. We`re not sure at this point whether we should use TDI or WinSocK Kernel.  The advantage of this project may include performance enhancement for device driver implementers that want SSL security. Frankly speaking, we`re not sure if there will be other advantages and would love feedback on the general usefulness of this idea. Do Kernel developers want an SSL library? Please comment!',
    'post_status' => 'publish',
    'post_date' => date('2010-6-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'Mongoose Web Server Support',
    'post_content' => 'We are considering adding support for the Mongoose Web Server.  If you are interested in using wolfSSL with Mongoose please let us know at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-6-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release 1.5.0',
    'post_content' => 'A new release of wolfSSL embedded SSL library is now available for download.<br /><br />Release 1.5.0 contains bug fixes, support for the GoAhead web server, sniffer support, and swig interface support for Python, Java, Perl, and others. Please see the README for more details. Public announcement is at <a href="http://www.prweb.com/releases/2010/06/prweb3468504.htm">PrWeb</a><br />',
    'post_status' => 'publish',
    'post_date' => date('2010-5-11 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Release 1.9.9',
    'post_content' => 'A new release of yaSSL is now available for download.<br /><br />Release 1.9.9 contains bug fixes, a potential security problem fix for a buffer overflow possibility in certificate name processing, and removal of assert()s.<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-1-26 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL Release 1.3.0',
    'post_content' => 'A new release of the wolfSSL embedded SSL library is now available for download.<br />Release 1.3.0 contains bug fixes, a potential security problem fix, better support for porting, removal of assert()s, and a complete port to the THREADX operating system.<br />yaSSL/CaySSL have no renegotiaton vulnerability<br />',
    'post_status' => 'publish',
    'post_date' => date('2010-1-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL/wolfSSL have no renegotiaton vulnerability',
    'post_content' => 'Hi! We`ve been getting a number of questions about the high profile vulnerabilities in OpenSSL, GnuTLS, NSS and mod_ssl.<br />This vulnerability is based on a potentially insecure SSL early feature that yaSSL chose to never support in the first place. As such, yaSSL/wolfSSL was never insecure.<br /><br />More details on the issue can be found below: From <a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555">CVE</a><br /><br />"The TLS protocol, and the SSL protocol 3.0 and possibly earlier, as used in Microsoft Internet Information Services (IIS) 7.0, mod_ssl in the Apache HTTP Server 2.2.14 and earlier, OpenSSL before 0.9.8l, GnuTLS 2.8.5 and earlier, Mozilla Network Security Services (NSS) 3.12.4 and earlier, and other products, does not properly associate renegotiation handshakes with an existing connection, which allows man-in-the-middle attackers to insert data into HTTPS sessions, and possibly other types of sessions protected by TLS or SSL, by sending an unauthenticated request that is processed retroactively by a server in a post-renegotiation context, related to a "plaintext injection" attack, aka the "Project Mogul" issue."',
    'post_status' => 'publish',
    'post_date' => date('2009-11-12 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Embedded SSL Release 1.2.0',
    'post_content' => 'The wolfSSL embedded SSL library Release 1.2.0 is now available for download.<br /> <br />Release 1.2.0 for wolfSSL adds bug fixes and session negotiation when first use is read or write.<br /> <br />To get TLS 1.2 support please use the client and server functions:<br /> <br />SSL_METHOD *TLSv1_2_server_method(void);<br />SSL_METHOD *TLSv1_2_client_method(void);<br /> <br />The wolfSSL OpenSSL compatibility layer was tested against lighttpd 1.4.23, see the notes in README for build instructions. See the download page for a linux build of Lighty built with wolfSSL.  Let us know if you have any problems building wolfSSL with Lighty or if you need help building the wolfSSL/Lighty combination on another operating environment at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2009-11-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'yaSSL Release 1.9.8',
    'post_content' => 'The yaSSL SSL library Release 1.9.8 is now available for download.<br /> <br />Release 1.9.8 for yaSSL adds bug fixes and support for the new stream ciphers Rabbit and HC-128.  We expect that these new stream ciphers will be especially useful to users that are encrypting streaming media like voice (VoIP) or video.<br />',
    'post_status' => 'publish',
    'post_date' => date('2009-10-14 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release 1.1.0',
    'post_content' => 'The wolfSSL embedded SSL library Release 1.1.0 is now available for download.<br /> <br />Release 1.1.0 for wolfSSL adds bug fixes, a check against malicious session cache use, support for lighttpd, and TLS 1.2.<br /> <br />To get TLS 1.2 support please use the client and server functions:<br /> <br />SSL_METHOD *TLSv1_2_server_method(void);<br />SSL_METHOD *TLSv1_2_client_method(void);<br /> <br />The wolfSSL OpenSSL compatibility layer was tested against lighttpd 1.4.23, See the notes in README for build instructions. See the download page for a build of Lighty built with wolfSSL.  Let us know if you have any problems building wolfSSL with Lighty or if you need help building the wolfSSL/Lighty combination on another operating environment at <a href="mailto:info@yassl.com">info@yassl.com</a>.<br />',
    'post_status' => 'publish',
    'post_date' => date('2009-9-2 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL Release 1.0.3',
    'post_content' => 'The wolfSSL embedded SSL library Release 1.0.3 is now available for download. Release 1.0.3 for wolfSSL adds bug fixes and improves OpenSSL compatibility support.  We believe that the wolfSSL now supports the bulk of the functions required to port applications over from OpenSSL.<br /> <br />Release 1.0.3 includes an alpha release of DTLS (<a href="http://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security">http://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security</a>) for both clients and servers. This is only for testing purposes at this time. Rebroadcast and reordering aren`t fully implemented at this time but will be for the next release.<br />',
    'post_status' => 'publish',
    'post_date' => date('2009-5-10 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL Release Candidate 3',
    'post_content' => 'The wolfSSL embedded ssl library Release Candidate 3 1.0.0 is now available for download. Release Candidate 3 for wolfSSL 1.0.0 adds bug fixes and adds a project file for iPhone development with Xcode. cyassl-iphone.xcodeproj is located in the root directory. This release also includes a fix for supporting other implementations that bundle multiple messages at the record layer, this was lost when cyassl i/o was re-implemented but is now fixed.<br />',
    'post_status' => 'publish',
    'post_date' => date('2009-2-25 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Embedded SSL Release Candidate 2',
    'post_content' => 'The wolfSSL embedded SSL library Release Candidate 2 1.0.0 is now available for download. This release includes new stream ciphers HC-128 and RABBIT, they are also available as cipher suites. Building for the Nintendo Wii and Gamecube are also supported through devkitPro. See the README for details.<br />',
    'post_status' => 'publish',
    'post_date' => date('2009-1-21 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
$new_post = array(
    'post_title' => 'wolfSSL Release Candidate 1',
    'post_content' => 'The wolfSSL embedded ssl library Release Candidate 1 1.0.0 is now available for download. This release includes optimization improvements, reduced memory use, and an alternate I/O implementation. See the README for details.<br />yaSSL 1.9.6',
    'post_status' => 'publish',
    'post_date' => date('2008-12-17 H:i:s'),
    'post_author' => $user_ID,
    'post_type' => 'post',
    'post_category' => array(0)
);
wp_insert_post($new_post);
